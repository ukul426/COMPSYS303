#include <system.h>
#include <stdio.h>
#include <altera_avalon_pio_regs.h> // to use PIO functions
#include <alt_types.h> // alt_u32 is a kind of alt_types
#include <sys/alt_irq.h> // to register interrupts
// first we write our interrupt function
void button_interrupts_function(void* context, alt_u32 id)
{
int* temp = (int*) context; // need to cast the context first before using it
(*temp) = IORD_ALTERA_AVALON_PIO_EDGE_CAP(KEYS_BASE);
// clear the edge capture register
IOWR_ALTERA_AVALON_PIO_EDGE_CAP(KEYS_BASE, 0);
printf("button: %i\n", *temp);
}
int main(void)
{
int buttonValue = 1;
void* context_going_to_be_passed = (void*) &buttonValue; // cast before
passing to ISR
// clears the edge capture register
IOWR_ALTERA_AVALON_PIO_EDGE_CAP(KEYS_BASE, 0);
// enable interrupts for all buttons
IOWR_ALTERA_AVALON_PIO_IRQ_MASK(KEYS_BASE, 0x7);
// register the ISR
alt_irq_register(KEYS_IRQ,context_going_to_be_passed,
button_interrupts_function);
while(1); // need this to keep the program alive
return 0;
}
