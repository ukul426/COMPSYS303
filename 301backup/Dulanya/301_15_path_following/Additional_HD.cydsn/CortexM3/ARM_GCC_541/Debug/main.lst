ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isr_1_handler,"ax",%progbits
  20              		.align	2
  21              		.global	isr_1_handler
  22              		.thumb
  23              		.thumb_func
  24              		.type	isr_1_handler, %function
  25              	isr_1_handler:
  26              	.LFB66:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** /* ========================================
  13:main.c        ****  * Fully working code: 
  14:main.c        ****  * PWM      : 
  15:main.c        ****  * Encoder  : 
  16:main.c        ****  * ADC      :
  17:main.c        ****  * USB      : port displays speed and position.
  18:main.c        ****  * CMD: "PW xx"
  19:main.c        ****  * Copyright Univ of Auckland, 2016
  20:main.c        ****  * All Rights Reserved
  21:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  22:main.c        ****  *
  23:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  24:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  25:main.c        ****  *
  26:main.c        ****  * ========================================
  27:main.c        **** */
  28:main.c        **** //WORKS 90% of the time
  29:main.c        **** #include <stdio.h>
  30:main.c        **** #include <string.h>
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 2


  31:main.c        **** #include <stdlib.h>
  32:main.c        **** #include <project.h>
  33:main.c        **** #include <stdbool.h>
  34:main.c        **** #include <math.h>
  35:main.c        **** #include <cytypes.h> 
  36:main.c        **** #include "Astar.h"
  37:main.c        **** 
  38:main.c        **** //distance calculation paras
  39:main.c        **** int32 CPR = 228;  // Adjusted for 4x resolution(228/4)
  40:main.c        **** float wheelCircumference_cm = (M_PI*64.46)/10;// wheel circumference wheelDiameter_mm = 64.46)
  41:main.c        **** double timeInterval_s = 10.924;  // Effective time interval( (timer period )2.731*4)
  42:main.c        **** int path_length;
  43:main.c        **** int counter=1;
  44:main.c        **** //define wheel speeds
  45:main.c        **** #define PWM_PERIOD 100
  46:main.c        **** #define PWM_STRAIGHT_L 131
  47:main.c        **** #define PWM_STRAIGHT_R 130
  48:main.c        **** #define PWM_STOP 100
  49:main.c        **** #define ENC_VALUE_PER_CM 11.3
  50:main.c        **** #define CM_PER_BLOCK_VERT 6
  51:main.c        **** #define CM_PER_BLOCK_HORIZ 10
  52:main.c        **** 
  53:main.c        **** uint32 count = 0;
  54:main.c        **** bool isTurning=false;
  55:main.c        **** 
  56:main.c        **** uint8 comp0_sum;
  57:main.c        **** uint8 comp1_sum;
  58:main.c        **** uint8 comp2_sum;
  59:main.c        **** uint8 comp3_sum;
  60:main.c        **** 
  61:main.c        **** int path_coordinates[MAX_PATH_LENGTH][2];
  62:main.c        **** 
  63:main.c        **** typedef struct Movement {
  64:main.c        ****     int distance;       // Distance to go straight in centimeters
  65:main.c        ****     char turnDirection; // 'L' for left, 'R' for right, 'N' for no turn
  66:main.c        **** } Movement;
  67:main.c        **** 
  68:main.c        **** //from point 0 to 1
  69:main.c        **** Movement path[10] = {
  70:main.c        **** //    {3*CM_PER_BLOCK_VERT, 'R'}, 
  71:main.c        ****     {3*CM_PER_BLOCK_VERT, 'L'}, 
  72:main.c        ****     {3*CM_PER_BLOCK_HORIZ, 'L'}, 
  73:main.c        ****     {3*CM_PER_BLOCK_VERT, 'R'}, 
  74:main.c        ****     {5*CM_PER_BLOCK_HORIZ, 'N'}, 
  75:main.c        **** //    {2*CM_PER_BLOCK_VERT, 'N'},
  76:main.c        **** };
  77:main.c        **** Movement moveCountArray[10];
  78:main.c        **** typedef enum {
  79:main.c        ****     NORTH,
  80:main.c        ****     EAST,
  81:main.c        ****     SOUTH,
  82:main.c        ****     WEST
  83:main.c        **** } RobotDirection;
  84:main.c        **** 
  85:main.c        **** 
  86:main.c        **** // Define states for the state machine
  87:main.c        **** typedef enum {
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 3


  88:main.c        ****     GO_STRAIGHT,
  89:main.c        ****     TURN_LEFT,
  90:main.c        ****     TURN_RIGHT,
  91:main.c        ****     STOP
  92:main.c        **** } RobotState;
  93:main.c        **** RobotState current_state = STOP;// intialse state
  94:main.c        **** 
  95:main.c        **** 
  96:main.c        **** //---------------------------------for direction();
  97:main.c        **** int currentX = 2;
  98:main.c        **** int currentY = 2;
  99:main.c        **** int stepCount = 0;
 100:main.c        **** int target[] = {14, 15};
 101:main.c        **** int position = -1;
 102:main.c        **** int pathCoordinates[15][2] = {
 103:main.c        ****     {2, 2},
 104:main.c        ****     {3, 2},
 105:main.c        ****     {4, 2},
 106:main.c        ****     {4, 3},
 107:main.c        ****     {4, 4},
 108:main.c        ****     {3, 4},
 109:main.c        ****     {2, 4},
 110:main.c        ****     {2, 5},
 111:main.c        ****     {2, 6},
 112:main.c        ****     {2, 7},
 113:main.c        ****     {2, 8},
 114:main.c        ****     {2, 9},
 115:main.c        ****     {2, 10},
 116:main.c        ****     {3, 10},
 117:main.c        ****     {4, 10},
 118:main.c        ****  
 119:main.c        **** };
 120:main.c        **** RobotDirection current_direction =  SOUTH;
 121:main.c        **** //-----------------------------------------
 122:main.c        **** 
 123:main.c        **** 
 124:main.c        **** void direction() {//MAX_PATH_LENGTH  int pathCoordinates[11][2]
 125:main.c        ****     int pathLength = 15; 
 126:main.c        **** 
 127:main.c        ****     for (int i = 0; i < pathLength; i++) {
 128:main.c        ****         int nextX = pathCoordinates[i][0];
 129:main.c        ****         int nextY = pathCoordinates[i][1];
 130:main.c        **** 
 131:main.c        ****         // Calculate the change in position
 132:main.c        ****         int deltaX = nextX - currentX;
 133:main.c        ****         int deltaY = nextY - currentY;
 134:main.c        ****         
 135:main.c        ****         int targetX = target[0]; // Access the x-coordinat
 136:main.c        ****         int targetY = target[1]; // Access the y-coordinate
 137:main.c        **** 
 138:main.c        **** 
 139:main.c        ****         if(nextX == targetX && nextY == targetY ){
 140:main.c        ****                     stepCount++;
 141:main.c        ****                     moveCountArray[position].distance = stepCount;
 142:main.c        ****                     moveCountArray [position].turnDirection = 'E';
 143:main.c        ****                     break;
 144:main.c        ****         }
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 4


 145:main.c        ****         
 146:main.c        **** 
 147:main.c        ****         switch (current_direction) {
 148:main.c        ****             case NORTH:
 149:main.c        ****                 if (currentX > nextX && currentY == nextY) { 
 150:main.c        ****                     // Go straight
 151:main.c        ****                     stepCount++;
 152:main.c        ****                     currentX = nextX; // Update currentX
 153:main.c        ****                     currentY = nextY;
 154:main.c        ****                     continue; 
 155:main.c        ****                 } else if (deltaX == 0 && deltaY > 0) {
 156:main.c        ****                     // Turn right
 157:main.c        ****                     stepCount++;
 158:main.c        ****                     position++;
 159:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 160:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 161:main.c        ****                     currentX = nextX; // Update currentX
 162:main.c        ****                     currentY = nextY;
 163:main.c        ****                     stepCount = 0;
 164:main.c        ****                     current_direction = EAST;
 165:main.c        ****                 } else if (deltaX == 0 && deltaY < 0) {
 166:main.c        ****                     // Turn left
 167:main.c        ****                     stepCount++;
 168:main.c        ****                     position++;
 169:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 170:main.c        ****                     moveCountArray [position].turnDirection = 'L';
 171:main.c        ****                     currentX = nextX; // Update currentX
 172:main.c        ****                     currentY = nextY;
 173:main.c        ****                     stepCount = 0;
 174:main.c        ****                     current_direction = WEST;
 175:main.c        ****                 }
 176:main.c        ****                 break;
 177:main.c        ****                 
 178:main.c        ****                 
 179:main.c        ****             case EAST:
 180:main.c        ****                 if (deltaX == 0 && deltaY > 0) { 
 181:main.c        ****                     // Go straight
 182:main.c        ****                     stepCount++;
 183:main.c        ****                     currentX = nextX; // Update currentX
 184:main.c        ****                     currentY = nextY;
 185:main.c        ****                     continue; // Skip the rest of this iteration and go to the next
 186:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
 187:main.c        ****                     // Turn right
 188:main.c        ****                     stepCount++;
 189:main.c        ****                     position++;
 190:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 191:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 192:main.c        ****                     currentX = nextX; // Update currentX
 193:main.c        ****                     currentY = nextY;
 194:main.c        ****                     stepCount = 0;
 195:main.c        ****                     current_direction = SOUTH;   
 196:main.c        ****                 } else if (deltaX < 0 && deltaY == 0) {
 197:main.c        ****                     // Turn left
 198:main.c        ****                     stepCount++;
 199:main.c        ****                     position++;
 200:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 201:main.c        ****                     moveCountArray [position].turnDirection = 'L';
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 5


 202:main.c        ****                     currentX = nextX; // Update currentX
 203:main.c        ****                     currentY = nextY;
 204:main.c        ****                     stepCount = 0;
 205:main.c        ****                     current_direction = NORTH;
 206:main.c        ****                 }
 207:main.c        ****                 break;
 208:main.c        **** 
 209:main.c        ****             case SOUTH:
 210:main.c        ****                 if (deltaX > 0 && deltaY == 0) { 
 211:main.c        ****                     // Go straight
 212:main.c        ****                     stepCount++;
 213:main.c        ****                     currentX = nextX; // Update currentX
 214:main.c        ****                     currentY = nextY;
 215:main.c        ****                     continue; 
 216:main.c        ****                 } else if (deltaX == 0 && deltaY < 0) {
 217:main.c        ****                     // Turn right
 218:main.c        ****                     stepCount++;
 219:main.c        ****                     position++;
 220:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 221:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 222:main.c        ****                     currentX = nextX; // Update currentX
 223:main.c        ****                     currentY = nextY;
 224:main.c        ****                     stepCount = 0;
 225:main.c        ****                     current_direction = WEST;
 226:main.c        ****                 } else if (deltaX == 0 && deltaY > 0) {
 227:main.c        ****                     // Turn left
 228:main.c        ****                     stepCount++;
 229:main.c        ****                     position++;
 230:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 231:main.c        ****                     moveCountArray [position].turnDirection = 'L';
 232:main.c        ****                     currentX = nextX; // Update currentX
 233:main.c        ****                     currentY = nextY;
 234:main.c        ****                     stepCount = 0;
 235:main.c        ****                     current_direction = EAST;
 236:main.c        ****                 }
 237:main.c        ****                 break;
 238:main.c        ****                 
 239:main.c        ****                 
 240:main.c        ****             case WEST:
 241:main.c        ****                 if (deltaX == 0 && deltaY < 0) { 
 242:main.c        ****                     // Go straight
 243:main.c        ****                     stepCount++;
 244:main.c        ****                     currentX = nextX; // Update currentX
 245:main.c        ****                     currentY = nextY;
 246:main.c        ****                     continue; 
 247:main.c        ****                 } else if (deltaX < 0 && deltaY == 0) {
 248:main.c        ****                     // Turn right
 249:main.c        ****                     stepCount++;
 250:main.c        ****                     position++;
 251:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 252:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 253:main.c        ****                     currentX = nextX; // Update currentX
 254:main.c        ****                     currentY = nextY;
 255:main.c        ****                     stepCount = 0;
 256:main.c        ****                     current_direction = NORTH;
 257:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
 258:main.c        ****                     // Turn left
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 6


 259:main.c        ****                     stepCount++;
 260:main.c        ****                     position++;
 261:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 262:main.c        ****                     moveCountArray [position].turnDirection = 'L';
 263:main.c        ****                     currentX = nextX; // Update currentX
 264:main.c        ****                     currentY = nextY;
 265:main.c        ****                     stepCount = 0;
 266:main.c        ****                     current_direction = SOUTH;
 267:main.c        ****                 }
 268:main.c        ****                 break;
 269:main.c        ****         }
 270:main.c        ****     }
 271:main.c        **** }
 272:main.c        **** 
 273:main.c        **** void getMovements(int start_row,int start_column,int target_row, int target_column,RobotDirection c
 274:main.c        ****     //calculate the path using Astar
 275:main.c        ****     //save it to a array of coordinates =>path_coordinates
 276:main.c        ****     
 277:main.c        ****     int movement_count=0;
 278:main.c        ****     int stepCount=0;
 279:main.c        ****     char turn='N';
 280:main.c        ****     int current_row = start_row;
 281:main.c        ****     int current_column = start_column;
 282:main.c        ****     
 283:main.c        ****     for(int i=0;i<MAX_PATH_LENGTH;i++){//this should only run for number of coordinates
 284:main.c        ****         int next_row = path_coordinates[i][0];
 285:main.c        ****         int next_column = path_coordinates[i][1];
 286:main.c        ****         
 287:main.c        ****         if(target_column==next_column && target_row==next_column){
 288:main.c        ****             switch (current_direction) {
 289:main.c        ****                 case NORTH:
 290:main.c        ****                      path[movement_count].distance=stepCount*CM_PER_BLOCK_VERT;
 291:main.c        ****                      path[movement_count].turnDirection='N';
 292:main.c        ****                      break;
 293:main.c        ****                 case SOUTH:
 294:main.c        ****                      path[movement_count].distance=stepCount*CM_PER_BLOCK_VERT;
 295:main.c        ****                      path[movement_count].turnDirection='N';
 296:main.c        ****                     break;
 297:main.c        ****                 case EAST:
 298:main.c        ****                      path[movement_count].distance=stepCount*CM_PER_BLOCK_HORIZ;
 299:main.c        ****                      path[movement_count].turnDirection='N';
 300:main.c        ****                     break;
 301:main.c        ****                 case WEST:
 302:main.c        ****                      path[movement_count].distance=stepCount*CM_PER_BLOCK_HORIZ;
 303:main.c        ****                      path[movement_count].turnDirection='N';
 304:main.c        ****                     break;
 305:main.c        ****             }break;
 306:main.c        ****         }
 307:main.c        ****         
 308:main.c        ****         
 309:main.c        ****         
 310:main.c        **** 
 311:main.c        ****         // Calculate the change in position
 312:main.c        ****         int deltaX = next_column - current_column;
 313:main.c        ****         int deltaY = next_row - current_row;
 314:main.c        ****     
 315:main.c        ****          switch (current_direction) {
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 7


 316:main.c        ****             
 317:main.c        ****              case NORTH:
 318:main.c        ****                  if (deltaX == 0 && deltaY < 0) {
 319:main.c        ****                     // Go straight up
 320:main.c        ****                     stepCount++;
 321:main.c        ****                      // Update currentvalues
 322:main.c        ****                     current_row = next_row;
 323:main.c        ****                     current_column = next_column;
 324:main.c        ****                     continue; // Skip the rest of this iteration and go to the next
 325:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
 326:main.c        ****                     // Turn right
 327:main.c        ****                     turn='R';
 328:main.c        ****                     current_direction=EAST;
 329:main.c        ****                     //set the next state
 330:main.c        ****                 } else if (deltaX < 0 && deltaY == 0) {
 331:main.c        ****                     // Turn left
 332:main.c        ****                     turn='L';
 333:main.c        ****                     current_direction=WEST;
 334:main.c        ****                 }
 335:main.c        ****                 path[movement_count].distance=stepCount*CM_PER_BLOCK_VERT;
 336:main.c        ****                 path[movement_count].turnDirection=turn;
 337:main.c        ****                 movement_count++;
 338:main.c        ****                 break;
 339:main.c        ****                     
 340:main.c        ****                  
 341:main.c        ****              case EAST:
 342:main.c        ****                 if (deltaX > 0 && deltaY == 0) {
 343:main.c        ****                       // Go straight right
 344:main.c        ****                     stepCount++;
 345:main.c        ****                      // Update currentvalues
 346:main.c        ****                     current_row = next_row;
 347:main.c        ****                     current_column = next_column;
 348:main.c        ****                     continue; // Skip the rest of this iteration and go to the next
 349:main.c        ****                 } else if (deltaX == 0 && deltaY > 0) {
 350:main.c        ****                     // Turn right
 351:main.c        ****                     turn='R';
 352:main.c        ****                     current_direction=SOUTH;
 353:main.c        ****                     //set the next state
 354:main.c        ****                 } else if (deltaX == 0 && deltaY < 0) {
 355:main.c        ****                     // Turn left
 356:main.c        ****                     turn='L';
 357:main.c        ****                     current_direction=NORTH;
 358:main.c        ****                 }
 359:main.c        ****                 path[movement_count].distance=stepCount*CM_PER_BLOCK_HORIZ;
 360:main.c        ****                 path[movement_count].turnDirection=turn;
 361:main.c        ****                 movement_count++;
 362:main.c        ****                 break;
 363:main.c        **** 
 364:main.c        ****             case SOUTH:
 365:main.c        ****                 if (deltaX == 0 && deltaY > 0) {
 366:main.c        ****                      // Go straight down
 367:main.c        ****                     stepCount++;
 368:main.c        ****                      // Update currentvalues
 369:main.c        ****                     current_row = next_row;
 370:main.c        ****                     current_column = next_column;
 371:main.c        ****                     continue;
 372:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 8


 373:main.c        ****                     // Turn right
 374:main.c        ****                     turn='R';
 375:main.c        ****                     current_direction=EAST;
 376:main.c        ****                    
 377:main.c        ****                 } else if (deltaX< 0 && deltaY == 0) {
 378:main.c        ****                      // Turn left
 379:main.c        ****                     turn='L';
 380:main.c        ****                     current_direction=WEST;
 381:main.c        ****                 }
 382:main.c        ****                 path[movement_count].distance=stepCount*CM_PER_BLOCK_VERT;
 383:main.c        ****                 path[movement_count].turnDirection=turn;
 384:main.c        ****                 movement_count++;
 385:main.c        ****                 break;
 386:main.c        ****                    
 387:main.c        ****                    
 388:main.c        ****             case WEST:
 389:main.c        ****                  if (deltaX <0 && deltaY == 0) {
 390:main.c        ****                      // Go straight left
 391:main.c        ****                     stepCount++;
 392:main.c        ****                      // Update currentvalues
 393:main.c        ****                     current_row = next_row;
 394:main.c        ****                     current_column = next_column;
 395:main.c        ****                     continue;
 396:main.c        ****                 } else if (deltaX == 0 && deltaY < 0) {
 397:main.c        ****                     // Turn right
 398:main.c        ****                     turn='R';
 399:main.c        ****                     current_direction=NORTH;
 400:main.c        ****                    
 401:main.c        ****                 } else if (deltaX == 0 && deltaY > 0) {
 402:main.c        ****                      // Turn left
 403:main.c        ****                     turn='L';
 404:main.c        ****                     current_direction=SOUTH;
 405:main.c        ****                 }
 406:main.c        ****                 path[movement_count].distance=stepCount*CM_PER_BLOCK_HORIZ;
 407:main.c        ****                 path[movement_count].turnDirection=turn;
 408:main.c        ****                 movement_count++;
 409:main.c        ****                 break;
 410:main.c        ****             }
 411:main.c        ****         
 412:main.c        ****     }
 413:main.c        ****     
 414:main.c        **** }
 415:main.c        **** 
 416:main.c        **** 
 417:main.c        **** 
 418:main.c        **** CY_ISR(isr_1_handler) {
  28              		.loc 1 418 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 419:main.c        ****         //every 1ms 
 420:main.c        ****     
 421:main.c        ****     //sum up comp values every 1ms
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 9


 422:main.c        ****     comp0_sum+=Comp_0_GetCompare();
  36              		.loc 1 422 0
  37 0002 FFF7FEFF 		bl	Comp_0_GetCompare
  38              	.LVL0:
  39 0006 164A     		ldr	r2, .L4
  40 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41 000a 1844     		add	r0, r0, r3
  42 000c 1070     		strb	r0, [r2]
 423:main.c        ****     comp1_sum+=Comp_1_GetCompare();
  43              		.loc 1 423 0
  44 000e FFF7FEFF 		bl	Comp_1_GetCompare
  45              	.LVL1:
  46 0012 144A     		ldr	r2, .L4+4
  47 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 0016 1844     		add	r0, r0, r3
  49 0018 1070     		strb	r0, [r2]
 424:main.c        ****     comp2_sum+=Comp_2_GetCompare();
  50              		.loc 1 424 0
  51 001a FFF7FEFF 		bl	Comp_2_GetCompare
  52              	.LVL2:
  53 001e 124A     		ldr	r2, .L4+8
  54 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  55 0022 1844     		add	r0, r0, r3
  56 0024 1070     		strb	r0, [r2]
 425:main.c        ****     comp3_sum+=Comp_3_GetCompare();
  57              		.loc 1 425 0
  58 0026 FFF7FEFF 		bl	Comp_3_GetCompare
  59              	.LVL3:
  60 002a 104A     		ldr	r2, .L4+12
  61 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 002e 1844     		add	r0, r0, r3
  63 0030 1070     		strb	r0, [r2]
 426:main.c        ****       
 427:main.c        ****     if(count==8){
  64              		.loc 1 427 0
  65 0032 0F4B     		ldr	r3, .L4+16
  66 0034 1B68     		ldr	r3, [r3]
  67 0036 082B     		cmp	r3, #8
  68 0038 0AD1     		bne	.L2
 428:main.c        ****         //reset to check again every 8ms
 429:main.c        ****         comp0_sum=0;
  69              		.loc 1 429 0
  70 003a 0023     		movs	r3, #0
  71 003c 084A     		ldr	r2, .L4
  72 003e 1370     		strb	r3, [r2]
 430:main.c        ****         comp1_sum=0;
  73              		.loc 1 430 0
  74 0040 084A     		ldr	r2, .L4+4
  75 0042 1370     		strb	r3, [r2]
 431:main.c        ****         comp2_sum=0;
  76              		.loc 1 431 0
  77 0044 084A     		ldr	r2, .L4+8
  78 0046 1370     		strb	r3, [r2]
 432:main.c        ****         comp3_sum=0;
  79              		.loc 1 432 0
  80 0048 084A     		ldr	r2, .L4+12
  81 004a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 10


 433:main.c        ****         count=0;
  82              		.loc 1 433 0
  83 004c 084A     		ldr	r2, .L4+16
  84 004e 1360     		str	r3, [r2]
  85              	.L2:
 434:main.c        ****     }
 435:main.c        ****    
 436:main.c        ****     count++;
  86              		.loc 1 436 0
  87 0050 074A     		ldr	r2, .L4+16
  88 0052 1368     		ldr	r3, [r2]
  89 0054 0133     		adds	r3, r3, #1
  90 0056 1360     		str	r3, [r2]
 437:main.c        ****     Timer_1_ReadStatusRegister();
  91              		.loc 1 437 0
  92 0058 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
  93              	.LVL4:
  94 005c 08BD     		pop	{r3, pc}
  95              	.L5:
  96 005e 00BF     		.align	2
  97              	.L4:
  98 0060 00000000 		.word	comp0_sum
  99 0064 00000000 		.word	comp1_sum
 100 0068 00000000 		.word	comp2_sum
 101 006c 00000000 		.word	comp3_sum
 102 0070 00000000 		.word	.LANCHOR0
 103              		.cfi_endproc
 104              	.LFE66:
 105              		.size	isr_1_handler, .-isr_1_handler
 106              		.section	.text.direction,"ax",%progbits
 107              		.align	2
 108              		.global	direction
 109              		.thumb
 110              		.thumb_func
 111              		.type	direction, %function
 112              	direction:
 113              	.LFB64:
 124:main.c        ****     int pathLength = 15; 
 114              		.loc 1 124 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 119              		.cfi_def_cfa_offset 20
 120              		.cfi_offset 4, -20
 121              		.cfi_offset 5, -16
 122              		.cfi_offset 6, -12
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125              	.LVL5:
 126              	.LBB2:
 127:main.c        ****         int nextX = pathCoordinates[i][0];
 127              		.loc 1 127 0
 128 0002 0022     		movs	r2, #0
 129 0004 5EE1     		b	.L7
 130              	.LVL6:
 131              	.L24:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 11


 132              	.LBB3:
 128:main.c        ****         int nextY = pathCoordinates[i][1];
 133              		.loc 1 128 0
 134 0006 B14B     		ldr	r3, .L26
 135 0008 53F83210 		ldr	r1, [r3, r2, lsl #3]
 136              	.LVL7:
 129:main.c        **** 
 137              		.loc 1 129 0
 138 000c 03EBC200 		add	r0, r3, r2, lsl #3
 139 0010 4068     		ldr	r0, [r0, #4]
 140              	.LVL8:
 132:main.c        ****         int deltaY = nextY - currentY;
 141              		.loc 1 132 0
 142 0012 9D6F     		ldr	r5, [r3, #120]
 143 0014 4C1B     		subs	r4, r1, r5
 144              	.LVL9:
 133:main.c        ****         
 145              		.loc 1 133 0
 146 0016 DE6F     		ldr	r6, [r3, #124]
 147 0018 C6EB000E 		rsb	lr, r6, r0
 148              	.LVL10:
 135:main.c        ****         int targetY = target[1]; // Access the y-coordinate
 149              		.loc 1 135 0
 150 001c D3F88070 		ldr	r7, [r3, #128]
 151              	.LVL11:
 136:main.c        **** 
 152              		.loc 1 136 0
 153 0020 D3F88430 		ldr	r3, [r3, #132]
 154              	.LVL12:
 139:main.c        ****                     stepCount++;
 155              		.loc 1 139 0
 156 0024 B942     		cmp	r1, r7
 157 0026 10D1     		bne	.L8
 139:main.c        ****                     stepCount++;
 158              		.loc 1 139 0 is_stmt 0 discriminator 1
 159 0028 9842     		cmp	r0, r3
 160 002a 0ED1     		bne	.L8
 140:main.c        ****                     moveCountArray[position].distance = stepCount;
 161              		.loc 1 140 0 is_stmt 1
 162 002c A84B     		ldr	r3, .L26+4
 163              	.LVL13:
 164 002e 5A68     		ldr	r2, [r3, #4]
 165              	.LVL14:
 166 0030 0132     		adds	r2, r2, #1
 167 0032 5A60     		str	r2, [r3, #4]
 141:main.c        ****                     moveCountArray [position].turnDirection = 'E';
 168              		.loc 1 141 0
 169 0034 A54B     		ldr	r3, .L26
 170 0036 D3F88810 		ldr	r1, [r3, #136]
 171              	.LVL15:
 172 003a A64B     		ldr	r3, .L26+8
 173 003c 43F83120 		str	r2, [r3, r1, lsl #3]
 142:main.c        ****                     break;
 174              		.loc 1 142 0
 175 0040 03EBC103 		add	r3, r3, r1, lsl #3
 176 0044 4522     		movs	r2, #69
 177 0046 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 12


 143:main.c        ****         }
 178              		.loc 1 143 0
 179 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 180              	.LVL16:
 181              	.L8:
 147:main.c        ****             case NORTH:
 182              		.loc 1 147 0
 183 004a A04B     		ldr	r3, .L26
 184              	.LVL17:
 185 004c 93F88C30 		ldrb	r3, [r3, #140]	@ zero_extendqisi2
 186 0050 032B     		cmp	r3, #3
 187 0052 00F23681 		bhi	.L10
 188 0056 DFE813F0 		tbh	[pc, r3, lsl #1]
 189              	.LVL18:
 190              	.L12:
 191 005a 0400     		.2byte	(.L11-.L12)/2
 192 005c 5100     		.2byte	(.L13-.L12)/2
 193 005e 9E00     		.2byte	(.L14-.L12)/2
 194 0060 EA00     		.2byte	(.L15-.L12)/2
 195              		.p2align 1
 196              	.L11:
 149:main.c        ****                     // Go straight
 197              		.loc 1 149 0
 198 0062 A942     		cmp	r1, r5
 199 0064 09DA     		bge	.L16
 149:main.c        ****                     // Go straight
 200              		.loc 1 149 0 is_stmt 0 discriminator 1
 201 0066 B042     		cmp	r0, r6
 202 0068 07D1     		bne	.L16
 151:main.c        ****                     currentX = nextX; // Update currentX
 203              		.loc 1 151 0 is_stmt 1
 204 006a 994C     		ldr	r4, .L26+4
 205              	.LVL19:
 206 006c 6368     		ldr	r3, [r4, #4]
 207 006e 0133     		adds	r3, r3, #1
 208 0070 6360     		str	r3, [r4, #4]
 152:main.c        ****                     currentY = nextY;
 209              		.loc 1 152 0
 210 0072 964B     		ldr	r3, .L26
 211 0074 9967     		str	r1, [r3, #120]
 153:main.c        ****                     continue; 
 212              		.loc 1 153 0
 213 0076 D867     		str	r0, [r3, #124]
 154:main.c        ****                 } else if (deltaX == 0 && deltaY > 0) {
 214              		.loc 1 154 0
 215 0078 23E1     		b	.L10
 216              	.LVL20:
 217              	.L16:
 155:main.c        ****                     // Turn right
 218              		.loc 1 155 0
 219 007a ECB9     		cbnz	r4, .L17
 155:main.c        ****                     // Turn right
 220              		.loc 1 155 0 is_stmt 0 discriminator 1
 221 007c BEF1000F 		cmp	lr, #0
 222 0080 1ADD     		ble	.L17
 157:main.c        ****                     position++;
 223              		.loc 1 157 0 is_stmt 1
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 13


 224 0082 934F     		ldr	r7, .L26+4
 225 0084 7B68     		ldr	r3, [r7, #4]
 226 0086 0133     		adds	r3, r3, #1
 158:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 227              		.loc 1 158 0
 228 0088 904C     		ldr	r4, .L26
 229              	.LVL21:
 230 008a D4F88850 		ldr	r5, [r4, #136]
 231              	.LVL22:
 232 008e 0135     		adds	r5, r5, #1
 233 0090 C4F88850 		str	r5, [r4, #136]
 159:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 234              		.loc 1 159 0
 235 0094 03EB4303 		add	r3, r3, r3, lsl #1
 236 0098 5B00     		lsls	r3, r3, #1
 237 009a 8E4E     		ldr	r6, .L26+8
 238 009c 46F83530 		str	r3, [r6, r5, lsl #3]
 160:main.c        ****                     currentX = nextX; // Update currentX
 239              		.loc 1 160 0
 240 00a0 06EBC505 		add	r5, r6, r5, lsl #3
 241 00a4 5223     		movs	r3, #82
 242 00a6 2B71     		strb	r3, [r5, #4]
 161:main.c        ****                     currentY = nextY;
 243              		.loc 1 161 0
 244 00a8 A167     		str	r1, [r4, #120]
 162:main.c        ****                     stepCount = 0;
 245              		.loc 1 162 0
 246 00aa E067     		str	r0, [r4, #124]
 163:main.c        ****                     current_direction = EAST;
 247              		.loc 1 163 0
 248 00ac 0023     		movs	r3, #0
 249 00ae 7B60     		str	r3, [r7, #4]
 164:main.c        ****                 } else if (deltaX == 0 && deltaY < 0) {
 250              		.loc 1 164 0
 251 00b0 0123     		movs	r3, #1
 252 00b2 84F88C30 		strb	r3, [r4, #140]
 253 00b6 04E1     		b	.L10
 254              	.LVL23:
 255              	.L17:
 165:main.c        ****                     // Turn left
 256              		.loc 1 165 0
 257 00b8 002C     		cmp	r4, #0
 258 00ba 40F00281 		bne	.L10
 165:main.c        ****                     // Turn left
 259              		.loc 1 165 0 is_stmt 0 discriminator 1
 260 00be BEF1000F 		cmp	lr, #0
 261 00c2 80F2FE80 		bge	.L10
 167:main.c        ****                     position++;
 262              		.loc 1 167 0 is_stmt 1
 263 00c6 824F     		ldr	r7, .L26+4
 264 00c8 7B68     		ldr	r3, [r7, #4]
 265 00ca 0133     		adds	r3, r3, #1
 168:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 266              		.loc 1 168 0
 267 00cc 7F4C     		ldr	r4, .L26
 268              	.LVL24:
 269 00ce D4F88850 		ldr	r5, [r4, #136]
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 14


 270              	.LVL25:
 271 00d2 0135     		adds	r5, r5, #1
 272 00d4 C4F88850 		str	r5, [r4, #136]
 169:main.c        ****                     moveCountArray [position].turnDirection = 'L';
 273              		.loc 1 169 0
 274 00d8 03EB4303 		add	r3, r3, r3, lsl #1
 275 00dc 5B00     		lsls	r3, r3, #1
 276 00de 7D4E     		ldr	r6, .L26+8
 277 00e0 46F83530 		str	r3, [r6, r5, lsl #3]
 170:main.c        ****                     currentX = nextX; // Update currentX
 278              		.loc 1 170 0
 279 00e4 06EBC505 		add	r5, r6, r5, lsl #3
 280 00e8 4C23     		movs	r3, #76
 281 00ea 2B71     		strb	r3, [r5, #4]
 171:main.c        ****                     currentY = nextY;
 282              		.loc 1 171 0
 283 00ec A167     		str	r1, [r4, #120]
 172:main.c        ****                     stepCount = 0;
 284              		.loc 1 172 0
 285 00ee E067     		str	r0, [r4, #124]
 173:main.c        ****                     current_direction = WEST;
 286              		.loc 1 173 0
 287 00f0 0023     		movs	r3, #0
 288 00f2 7B60     		str	r3, [r7, #4]
 174:main.c        ****                 }
 289              		.loc 1 174 0
 290 00f4 0323     		movs	r3, #3
 291 00f6 84F88C30 		strb	r3, [r4, #140]
 292 00fa E2E0     		b	.L10
 293              	.LVL26:
 294              	.L13:
 180:main.c        ****                     // Go straight
 295              		.loc 1 180 0
 296 00fc 54B9     		cbnz	r4, .L18
 180:main.c        ****                     // Go straight
 297              		.loc 1 180 0 is_stmt 0 discriminator 1
 298 00fe BEF1000F 		cmp	lr, #0
 299 0102 07DD     		ble	.L18
 182:main.c        ****                     currentX = nextX; // Update currentX
 300              		.loc 1 182 0 is_stmt 1
 301 0104 724C     		ldr	r4, .L26+4
 302              	.LVL27:
 303 0106 6368     		ldr	r3, [r4, #4]
 304 0108 0133     		adds	r3, r3, #1
 305 010a 6360     		str	r3, [r4, #4]
 183:main.c        ****                     currentY = nextY;
 306              		.loc 1 183 0
 307 010c 6F4B     		ldr	r3, .L26
 308 010e 9967     		str	r1, [r3, #120]
 184:main.c        ****                     continue; // Skip the rest of this iteration and go to the next
 309              		.loc 1 184 0
 310 0110 D867     		str	r0, [r3, #124]
 185:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
 311              		.loc 1 185 0
 312 0112 D6E0     		b	.L10
 313              	.LVL28:
 314              	.L18:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 15


 186:main.c        ****                     // Turn right
 315              		.loc 1 186 0
 316 0114 002C     		cmp	r4, #0
 317 0116 1DDD     		ble	.L19
 186:main.c        ****                     // Turn right
 318              		.loc 1 186 0 is_stmt 0 discriminator 1
 319 0118 BEF1000F 		cmp	lr, #0
 320 011c 1AD1     		bne	.L19
 188:main.c        ****                     position++;
 321              		.loc 1 188 0 is_stmt 1
 322 011e 6C4F     		ldr	r7, .L26+4
 323 0120 7B68     		ldr	r3, [r7, #4]
 324 0122 0133     		adds	r3, r3, #1
 189:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 325              		.loc 1 189 0
 326 0124 694C     		ldr	r4, .L26
 327              	.LVL29:
 328 0126 D4F88850 		ldr	r5, [r4, #136]
 329              	.LVL30:
 330 012a 0135     		adds	r5, r5, #1
 331 012c C4F88850 		str	r5, [r4, #136]
 190:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 332              		.loc 1 190 0
 333 0130 03EB8303 		add	r3, r3, r3, lsl #2
 334 0134 5B00     		lsls	r3, r3, #1
 335 0136 674E     		ldr	r6, .L26+8
 336 0138 46F83530 		str	r3, [r6, r5, lsl #3]
 191:main.c        ****                     currentX = nextX; // Update currentX
 337              		.loc 1 191 0
 338 013c 06EBC505 		add	r5, r6, r5, lsl #3
 339 0140 5223     		movs	r3, #82
 340 0142 2B71     		strb	r3, [r5, #4]
 192:main.c        ****                     currentY = nextY;
 341              		.loc 1 192 0
 342 0144 A167     		str	r1, [r4, #120]
 193:main.c        ****                     stepCount = 0;
 343              		.loc 1 193 0
 344 0146 E067     		str	r0, [r4, #124]
 194:main.c        ****                     current_direction = SOUTH;   
 345              		.loc 1 194 0
 346 0148 0023     		movs	r3, #0
 347 014a 7B60     		str	r3, [r7, #4]
 195:main.c        ****                 } else if (deltaX < 0 && deltaY == 0) {
 348              		.loc 1 195 0
 349 014c 0223     		movs	r3, #2
 350 014e 84F88C30 		strb	r3, [r4, #140]
 351 0152 B6E0     		b	.L10
 352              	.LVL31:
 353              	.L19:
 196:main.c        ****                     // Turn left
 354              		.loc 1 196 0
 355 0154 002C     		cmp	r4, #0
 356 0156 80F2B480 		bge	.L10
 196:main.c        ****                     // Turn left
 357              		.loc 1 196 0 is_stmt 0 discriminator 1
 358 015a BEF1000F 		cmp	lr, #0
 359 015e 40F0B080 		bne	.L10
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 16


 198:main.c        ****                     position++;
 360              		.loc 1 198 0 is_stmt 1
 361 0162 5B4F     		ldr	r7, .L26+4
 362 0164 7B68     		ldr	r3, [r7, #4]
 363 0166 0133     		adds	r3, r3, #1
 199:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 364              		.loc 1 199 0
 365 0168 584C     		ldr	r4, .L26
 366              	.LVL32:
 367 016a D4F88850 		ldr	r5, [r4, #136]
 368              	.LVL33:
 369 016e 0135     		adds	r5, r5, #1
 370 0170 C4F88850 		str	r5, [r4, #136]
 200:main.c        ****                     moveCountArray [position].turnDirection = 'L';
 371              		.loc 1 200 0
 372 0174 03EB8303 		add	r3, r3, r3, lsl #2
 373 0178 5B00     		lsls	r3, r3, #1
 374 017a 564E     		ldr	r6, .L26+8
 375 017c 46F83530 		str	r3, [r6, r5, lsl #3]
 201:main.c        ****                     currentX = nextX; // Update currentX
 376              		.loc 1 201 0
 377 0180 06EBC505 		add	r5, r6, r5, lsl #3
 378 0184 4C23     		movs	r3, #76
 379 0186 2B71     		strb	r3, [r5, #4]
 202:main.c        ****                     currentY = nextY;
 380              		.loc 1 202 0
 381 0188 A167     		str	r1, [r4, #120]
 203:main.c        ****                     stepCount = 0;
 382              		.loc 1 203 0
 383 018a E067     		str	r0, [r4, #124]
 204:main.c        ****                     current_direction = NORTH;
 384              		.loc 1 204 0
 385 018c 0023     		movs	r3, #0
 386 018e 7B60     		str	r3, [r7, #4]
 205:main.c        ****                 }
 387              		.loc 1 205 0
 388 0190 84F88C30 		strb	r3, [r4, #140]
 389 0194 95E0     		b	.L10
 390              	.LVL34:
 391              	.L14:
 210:main.c        ****                     // Go straight
 392              		.loc 1 210 0
 393 0196 002C     		cmp	r4, #0
 394 0198 0ADD     		ble	.L20
 210:main.c        ****                     // Go straight
 395              		.loc 1 210 0 is_stmt 0 discriminator 1
 396 019a BEF1000F 		cmp	lr, #0
 397 019e 07D1     		bne	.L20
 212:main.c        ****                     currentX = nextX; // Update currentX
 398              		.loc 1 212 0 is_stmt 1
 399 01a0 4B4C     		ldr	r4, .L26+4
 400              	.LVL35:
 401 01a2 6368     		ldr	r3, [r4, #4]
 402 01a4 0133     		adds	r3, r3, #1
 403 01a6 6360     		str	r3, [r4, #4]
 213:main.c        ****                     currentY = nextY;
 404              		.loc 1 213 0
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 17


 405 01a8 484B     		ldr	r3, .L26
 406 01aa 9967     		str	r1, [r3, #120]
 214:main.c        ****                     continue; 
 407              		.loc 1 214 0
 408 01ac D867     		str	r0, [r3, #124]
 215:main.c        ****                 } else if (deltaX == 0 && deltaY < 0) {
 409              		.loc 1 215 0
 410 01ae 88E0     		b	.L10
 411              	.LVL36:
 412              	.L20:
 216:main.c        ****                     // Turn right
 413              		.loc 1 216 0
 414 01b0 ECB9     		cbnz	r4, .L21
 216:main.c        ****                     // Turn right
 415              		.loc 1 216 0 is_stmt 0 discriminator 1
 416 01b2 BEF1000F 		cmp	lr, #0
 417 01b6 1ADA     		bge	.L21
 218:main.c        ****                     position++;
 418              		.loc 1 218 0 is_stmt 1
 419 01b8 454F     		ldr	r7, .L26+4
 420 01ba 7B68     		ldr	r3, [r7, #4]
 421 01bc 0133     		adds	r3, r3, #1
 219:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 422              		.loc 1 219 0
 423 01be 434C     		ldr	r4, .L26
 424              	.LVL37:
 425 01c0 D4F88850 		ldr	r5, [r4, #136]
 426              	.LVL38:
 427 01c4 0135     		adds	r5, r5, #1
 428 01c6 C4F88850 		str	r5, [r4, #136]
 220:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 429              		.loc 1 220 0
 430 01ca 03EB4303 		add	r3, r3, r3, lsl #1
 431 01ce 5B00     		lsls	r3, r3, #1
 432 01d0 404E     		ldr	r6, .L26+8
 433 01d2 46F83530 		str	r3, [r6, r5, lsl #3]
 221:main.c        ****                     currentX = nextX; // Update currentX
 434              		.loc 1 221 0
 435 01d6 06EBC505 		add	r5, r6, r5, lsl #3
 436 01da 5223     		movs	r3, #82
 437 01dc 2B71     		strb	r3, [r5, #4]
 222:main.c        ****                     currentY = nextY;
 438              		.loc 1 222 0
 439 01de A167     		str	r1, [r4, #120]
 223:main.c        ****                     stepCount = 0;
 440              		.loc 1 223 0
 441 01e0 E067     		str	r0, [r4, #124]
 224:main.c        ****                     current_direction = WEST;
 442              		.loc 1 224 0
 443 01e2 0023     		movs	r3, #0
 444 01e4 7B60     		str	r3, [r7, #4]
 225:main.c        ****                 } else if (deltaX == 0 && deltaY > 0) {
 445              		.loc 1 225 0
 446 01e6 0323     		movs	r3, #3
 447 01e8 84F88C30 		strb	r3, [r4, #140]
 448 01ec 69E0     		b	.L10
 449              	.LVL39:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 18


 450              	.L21:
 226:main.c        ****                     // Turn left
 451              		.loc 1 226 0
 452 01ee 002C     		cmp	r4, #0
 453 01f0 67D1     		bne	.L10
 226:main.c        ****                     // Turn left
 454              		.loc 1 226 0 is_stmt 0 discriminator 1
 455 01f2 BEF1000F 		cmp	lr, #0
 456 01f6 64DD     		ble	.L10
 228:main.c        ****                     position++;
 457              		.loc 1 228 0 is_stmt 1
 458 01f8 354F     		ldr	r7, .L26+4
 459 01fa 7B68     		ldr	r3, [r7, #4]
 460 01fc 0133     		adds	r3, r3, #1
 229:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_VERT ;
 461              		.loc 1 229 0
 462 01fe 334C     		ldr	r4, .L26
 463              	.LVL40:
 464 0200 D4F88850 		ldr	r5, [r4, #136]
 465              	.LVL41:
 466 0204 0135     		adds	r5, r5, #1
 467 0206 C4F88850 		str	r5, [r4, #136]
 230:main.c        ****                     moveCountArray [position].turnDirection = 'L';
 468              		.loc 1 230 0
 469 020a 03EB4303 		add	r3, r3, r3, lsl #1
 470 020e 5B00     		lsls	r3, r3, #1
 471 0210 304E     		ldr	r6, .L26+8
 472 0212 46F83530 		str	r3, [r6, r5, lsl #3]
 231:main.c        ****                     currentX = nextX; // Update currentX
 473              		.loc 1 231 0
 474 0216 06EBC505 		add	r5, r6, r5, lsl #3
 475 021a 4C23     		movs	r3, #76
 476 021c 2B71     		strb	r3, [r5, #4]
 232:main.c        ****                     currentY = nextY;
 477              		.loc 1 232 0
 478 021e A167     		str	r1, [r4, #120]
 233:main.c        ****                     stepCount = 0;
 479              		.loc 1 233 0
 480 0220 E067     		str	r0, [r4, #124]
 234:main.c        ****                     current_direction = EAST;
 481              		.loc 1 234 0
 482 0222 0023     		movs	r3, #0
 483 0224 7B60     		str	r3, [r7, #4]
 235:main.c        ****                 }
 484              		.loc 1 235 0
 485 0226 0123     		movs	r3, #1
 486 0228 84F88C30 		strb	r3, [r4, #140]
 487 022c 49E0     		b	.L10
 488              	.LVL42:
 489              	.L15:
 241:main.c        ****                     // Go straight
 490              		.loc 1 241 0
 491 022e 54B9     		cbnz	r4, .L22
 241:main.c        ****                     // Go straight
 492              		.loc 1 241 0 is_stmt 0 discriminator 1
 493 0230 BEF1000F 		cmp	lr, #0
 494 0234 07DA     		bge	.L22
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 19


 243:main.c        ****                     currentX = nextX; // Update currentX
 495              		.loc 1 243 0 is_stmt 1
 496 0236 264C     		ldr	r4, .L26+4
 497              	.LVL43:
 498 0238 6368     		ldr	r3, [r4, #4]
 499 023a 0133     		adds	r3, r3, #1
 500 023c 6360     		str	r3, [r4, #4]
 244:main.c        ****                     currentY = nextY;
 501              		.loc 1 244 0
 502 023e 234B     		ldr	r3, .L26
 503 0240 9967     		str	r1, [r3, #120]
 245:main.c        ****                     continue; 
 504              		.loc 1 245 0
 505 0242 D867     		str	r0, [r3, #124]
 246:main.c        ****                 } else if (deltaX < 0 && deltaY == 0) {
 506              		.loc 1 246 0
 507 0244 3DE0     		b	.L10
 508              	.LVL44:
 509              	.L22:
 247:main.c        ****                     // Turn right
 510              		.loc 1 247 0
 511 0246 002C     		cmp	r4, #0
 512 0248 1CDA     		bge	.L23
 247:main.c        ****                     // Turn right
 513              		.loc 1 247 0 is_stmt 0 discriminator 1
 514 024a BEF1000F 		cmp	lr, #0
 515 024e 19D1     		bne	.L23
 249:main.c        ****                     position++;
 516              		.loc 1 249 0 is_stmt 1
 517 0250 1F4F     		ldr	r7, .L26+4
 518 0252 7B68     		ldr	r3, [r7, #4]
 519 0254 0133     		adds	r3, r3, #1
 250:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 520              		.loc 1 250 0
 521 0256 1D4C     		ldr	r4, .L26
 522              	.LVL45:
 523 0258 D4F88850 		ldr	r5, [r4, #136]
 524              	.LVL46:
 525 025c 0135     		adds	r5, r5, #1
 526 025e C4F88850 		str	r5, [r4, #136]
 251:main.c        ****                     moveCountArray [position].turnDirection = 'R';
 527              		.loc 1 251 0
 528 0262 03EB8303 		add	r3, r3, r3, lsl #2
 529 0266 5B00     		lsls	r3, r3, #1
 530 0268 1A4E     		ldr	r6, .L26+8
 531 026a 46F83530 		str	r3, [r6, r5, lsl #3]
 252:main.c        ****                     currentX = nextX; // Update currentX
 532              		.loc 1 252 0
 533 026e 06EBC505 		add	r5, r6, r5, lsl #3
 534 0272 5223     		movs	r3, #82
 535 0274 2B71     		strb	r3, [r5, #4]
 253:main.c        ****                     currentY = nextY;
 536              		.loc 1 253 0
 537 0276 A167     		str	r1, [r4, #120]
 254:main.c        ****                     stepCount = 0;
 538              		.loc 1 254 0
 539 0278 E067     		str	r0, [r4, #124]
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 20


 255:main.c        ****                     current_direction = NORTH;
 540              		.loc 1 255 0
 541 027a 0023     		movs	r3, #0
 542 027c 7B60     		str	r3, [r7, #4]
 256:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
 543              		.loc 1 256 0
 544 027e 84F88C30 		strb	r3, [r4, #140]
 545 0282 1EE0     		b	.L10
 546              	.LVL47:
 547              	.L23:
 257:main.c        ****                     // Turn left
 548              		.loc 1 257 0
 549 0284 002C     		cmp	r4, #0
 550 0286 1CDD     		ble	.L10
 257:main.c        ****                     // Turn left
 551              		.loc 1 257 0 is_stmt 0 discriminator 1
 552 0288 BEF1000F 		cmp	lr, #0
 553 028c 19D1     		bne	.L10
 259:main.c        ****                     position++;
 554              		.loc 1 259 0 is_stmt 1
 555 028e 104F     		ldr	r7, .L26+4
 556 0290 7B68     		ldr	r3, [r7, #4]
 557 0292 0133     		adds	r3, r3, #1
 260:main.c        ****                     moveCountArray[position].distance = stepCount * CM_PER_BLOCK_HORIZ;
 558              		.loc 1 260 0
 559 0294 0D4C     		ldr	r4, .L26
 560              	.LVL48:
 561 0296 D4F88850 		ldr	r5, [r4, #136]
 562              	.LVL49:
 563 029a 0135     		adds	r5, r5, #1
 564 029c C4F88850 		str	r5, [r4, #136]
 261:main.c        ****                     moveCountArray [position].turnDirection = 'L';
 565              		.loc 1 261 0
 566 02a0 03EB8303 		add	r3, r3, r3, lsl #2
 567 02a4 5B00     		lsls	r3, r3, #1
 568 02a6 0B4E     		ldr	r6, .L26+8
 569 02a8 46F83530 		str	r3, [r6, r5, lsl #3]
 262:main.c        ****                     currentX = nextX; // Update currentX
 570              		.loc 1 262 0
 571 02ac 06EBC505 		add	r5, r6, r5, lsl #3
 572 02b0 4C23     		movs	r3, #76
 573 02b2 2B71     		strb	r3, [r5, #4]
 263:main.c        ****                     currentY = nextY;
 574              		.loc 1 263 0
 575 02b4 A167     		str	r1, [r4, #120]
 264:main.c        ****                     stepCount = 0;
 576              		.loc 1 264 0
 577 02b6 E067     		str	r0, [r4, #124]
 265:main.c        ****                     current_direction = SOUTH;
 578              		.loc 1 265 0
 579 02b8 0023     		movs	r3, #0
 580 02ba 7B60     		str	r3, [r7, #4]
 266:main.c        ****                 }
 581              		.loc 1 266 0
 582 02bc 0223     		movs	r3, #2
 583 02be 84F88C30 		strb	r3, [r4, #140]
 584              	.L10:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 21


 585              	.LBE3:
 127:main.c        ****         int nextX = pathCoordinates[i][0];
 586              		.loc 1 127 0 discriminator 2
 587 02c2 0132     		adds	r2, r2, #1
 588              	.LVL50:
 589              	.L7:
 127:main.c        ****         int nextX = pathCoordinates[i][0];
 590              		.loc 1 127 0 is_stmt 0 discriminator 1
 591 02c4 0E2A     		cmp	r2, #14
 592 02c6 7FF79EAE 		ble	.L24
 593 02ca F0BD     		pop	{r4, r5, r6, r7, pc}
 594              	.L27:
 595              		.align	2
 596              	.L26:
 597 02cc 00000000 		.word	.LANCHOR1
 598 02d0 00000000 		.word	.LANCHOR0
 599 02d4 00000000 		.word	moveCountArray
 600              	.LBE2:
 601              		.cfi_endproc
 602              	.LFE64:
 603              		.size	direction, .-direction
 604              		.section	.text.getMovements,"ax",%progbits
 605              		.align	2
 606              		.global	getMovements
 607              		.thumb
 608              		.thumb_func
 609              		.type	getMovements, %function
 610              	getMovements:
 611              	.LFB65:
 273:main.c        ****     //calculate the path using Astar
 612              		.loc 1 273 0 is_stmt 1
 613              		.cfi_startproc
 614              		@ args = 4, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              	.LVL51:
 617 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 618              		.cfi_def_cfa_offset 36
 619              		.cfi_offset 4, -36
 620              		.cfi_offset 5, -32
 621              		.cfi_offset 6, -28
 622              		.cfi_offset 7, -24
 623              		.cfi_offset 8, -20
 624              		.cfi_offset 9, -16
 625              		.cfi_offset 10, -12
 626              		.cfi_offset 11, -8
 627              		.cfi_offset 14, -4
 628 0004 9846     		mov	r8, r3
 629 0006 9DF82470 		ldrb	r7, [sp, #36]	@ zero_extendqisi2
 630              	.LVL52:
 631              	.LBB4:
 283:main.c        ****         int next_row = path_coordinates[i][0];
 632              		.loc 1 283 0
 633 000a 0024     		movs	r4, #0
 634              	.LBE4:
 279:main.c        ****     int current_row = start_row;
 635              		.loc 1 279 0
 636 000c 4FF04E09 		mov	r9, #78
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 22


 278:main.c        ****     char turn='N';
 637              		.loc 1 278 0
 638 0010 A446     		mov	ip, r4
 277:main.c        ****     int stepCount=0;
 639              		.loc 1 277 0
 640 0012 A646     		mov	lr, r4
 641              	.LBB6:
 283:main.c        ****         int next_row = path_coordinates[i][0];
 642              		.loc 1 283 0
 643 0014 F0E0     		b	.L29
 644              	.LVL53:
 645              	.L55:
 646              	.LBB5:
 284:main.c        ****         int next_column = path_coordinates[i][1];
 647              		.loc 1 284 0
 648 0016 7B4D     		ldr	r5, .L65
 649 0018 55F83430 		ldr	r3, [r5, r4, lsl #3]
 650              	.LVL54:
 285:main.c        ****         
 651              		.loc 1 285 0
 652 001c 05EBC405 		add	r5, r5, r4, lsl #3
 653 0020 6D68     		ldr	r5, [r5, #4]
 654              	.LVL55:
 287:main.c        ****             switch (current_direction) {
 655              		.loc 1 287 0
 656 0022 4545     		cmp	r5, r8
 657 0024 40D1     		bne	.L30
 287:main.c        ****             switch (current_direction) {
 658              		.loc 1 287 0 is_stmt 0 discriminator 1
 659 0026 9542     		cmp	r5, r2
 660 0028 3ED1     		bne	.L30
 288:main.c        ****                 case NORTH:
 661              		.loc 1 288 0 is_stmt 1
 662 002a 032F     		cmp	r7, #3
 663 002c 00F2E780 		bhi	.L28
 664 0030 DFE807F0 		tbb	[pc, r7]
 665              	.LVL56:
 666              	.L33:
 667 0034 02       		.byte	(.L32-.L33)/2
 668 0035 1E       		.byte	(.L34-.L33)/2
 669 0036 10       		.byte	(.L35-.L33)/2
 670 0037 2C       		.byte	(.L36-.L33)/2
 671              		.p2align 1
 672              	.L32:
 290:main.c        ****                      path[movement_count].turnDirection='N';
 673              		.loc 1 290 0
 674 0038 0CEB4C0C 		add	ip, ip, ip, lsl #1
 675              	.LVL57:
 676 003c 4FEA4C02 		lsl	r2, ip, #1
 677              	.LVL58:
 678 0040 714B     		ldr	r3, .L65+4
 679 0042 03EBCE0E 		add	lr, r3, lr, lsl #3
 680              	.LVL59:
 681 0046 CEF89020 		str	r2, [lr, #144]
 291:main.c        ****                      break;
 682              		.loc 1 291 0
 683 004a 4E23     		movs	r3, #78
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 23


 684 004c 8EF89430 		strb	r3, [lr, #148]
 292:main.c        ****                 case SOUTH:
 685              		.loc 1 292 0
 686 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 687              	.LVL60:
 688              	.L35:
 294:main.c        ****                      path[movement_count].turnDirection='N';
 689              		.loc 1 294 0
 690 0054 0CEB4C0C 		add	ip, ip, ip, lsl #1
 691              	.LVL61:
 692 0058 4FEA4C02 		lsl	r2, ip, #1
 693              	.LVL62:
 694 005c 6A4B     		ldr	r3, .L65+4
 695 005e 03EBCE0E 		add	lr, r3, lr, lsl #3
 696              	.LVL63:
 697 0062 CEF89020 		str	r2, [lr, #144]
 295:main.c        ****                     break;
 698              		.loc 1 295 0
 699 0066 4E23     		movs	r3, #78
 700 0068 8EF89430 		strb	r3, [lr, #148]
 296:main.c        ****                 case EAST:
 701              		.loc 1 296 0
 702 006c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 703              	.LVL64:
 704              	.L34:
 298:main.c        ****                      path[movement_count].turnDirection='N';
 705              		.loc 1 298 0
 706 0070 0CEB8C0C 		add	ip, ip, ip, lsl #2
 707              	.LVL65:
 708 0074 4FEA4C02 		lsl	r2, ip, #1
 709              	.LVL66:
 710 0078 634B     		ldr	r3, .L65+4
 711 007a 03EBCE0E 		add	lr, r3, lr, lsl #3
 712              	.LVL67:
 713 007e CEF89020 		str	r2, [lr, #144]
 299:main.c        ****                     break;
 714              		.loc 1 299 0
 715 0082 4E23     		movs	r3, #78
 716 0084 8EF89430 		strb	r3, [lr, #148]
 300:main.c        ****                 case WEST:
 717              		.loc 1 300 0
 718 0088 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 719              	.LVL68:
 720              	.L36:
 302:main.c        ****                      path[movement_count].turnDirection='N';
 721              		.loc 1 302 0
 722 008c 0CEB8C0C 		add	ip, ip, ip, lsl #2
 723              	.LVL69:
 724 0090 4FEA4C02 		lsl	r2, ip, #1
 725              	.LVL70:
 726 0094 5C4B     		ldr	r3, .L65+4
 727 0096 03EBCE0E 		add	lr, r3, lr, lsl #3
 728              	.LVL71:
 729 009a CEF89020 		str	r2, [lr, #144]
 303:main.c        ****                     break;
 730              		.loc 1 303 0
 731 009e 4E23     		movs	r3, #78
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 24


 732 00a0 8EF89430 		strb	r3, [lr, #148]
 304:main.c        ****             }break;
 733              		.loc 1 304 0
 734 00a4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 735              	.LVL72:
 736              	.L30:
 312:main.c        ****         int deltaY = next_row - current_row;
 737              		.loc 1 312 0
 738 00a8 6E1A     		subs	r6, r5, r1
 739              	.LVL73:
 313:main.c        ****     
 740              		.loc 1 313 0
 741 00aa C0EB030A 		rsb	r10, r0, r3
 742              	.LVL74:
 315:main.c        ****             
 743              		.loc 1 315 0
 744 00ae 032F     		cmp	r7, #3
 745 00b0 00F2A180 		bhi	.L37
 746 00b4 DFE807F0 		tbb	[pc, r7]
 747              	.L39:
 748 00b8 02       		.byte	(.L38-.L39)/2
 749 00b9 2A       		.byte	(.L40-.L39)/2
 750 00ba 51       		.byte	(.L41-.L39)/2
 751 00bb 79       		.byte	(.L42-.L39)/2
 752              		.p2align 1
 753              	.L38:
 318:main.c        ****                     // Go straight up
 754              		.loc 1 318 0
 755 00bc 3EB9     		cbnz	r6, .L43
 318:main.c        ****                     // Go straight up
 756              		.loc 1 318 0 is_stmt 0 discriminator 1
 757 00be BAF1000F 		cmp	r10, #0
 758 00c2 04DA     		bge	.L43
 320:main.c        ****                      // Update currentvalues
 759              		.loc 1 320 0 is_stmt 1
 760 00c4 0CF1010C 		add	ip, ip, #1
 761              	.LVL75:
 323:main.c        ****                     continue; // Skip the rest of this iteration and go to the next
 762              		.loc 1 323 0
 763 00c8 2946     		mov	r1, r5
 322:main.c        ****                     current_column = next_column;
 764              		.loc 1 322 0
 765 00ca 1846     		mov	r0, r3
 324:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
 766              		.loc 1 324 0
 767 00cc 93E0     		b	.L37
 768              	.LVL76:
 769              	.L43:
 325:main.c        ****                     // Turn right
 770              		.loc 1 325 0
 771 00ce 002E     		cmp	r6, #0
 772 00d0 02DD     		ble	.L44
 325:main.c        ****                     // Turn right
 773              		.loc 1 325 0 is_stmt 0 discriminator 1
 774 00d2 BAF1000F 		cmp	r10, #0
 775 00d6 05D0     		beq	.L56
 776              	.L44:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 25


 330:main.c        ****                     // Turn left
 777              		.loc 1 330 0 is_stmt 1
 778 00d8 002E     		cmp	r6, #0
 779 00da 0ADA     		bge	.L45
 330:main.c        ****                     // Turn left
 780              		.loc 1 330 0 is_stmt 0 discriminator 1
 781 00dc BAF1000F 		cmp	r10, #0
 782 00e0 04D0     		beq	.L57
 783 00e2 06E0     		b	.L45
 784              	.L56:
 327:main.c        ****                     current_direction=EAST;
 785              		.loc 1 327 0 is_stmt 1
 786 00e4 4FF05209 		mov	r9, #82
 787              	.LVL77:
 328:main.c        ****                     //set the next state
 788              		.loc 1 328 0
 789 00e8 0127     		movs	r7, #1
 790              	.LVL78:
 791 00ea 02E0     		b	.L45
 792              	.LVL79:
 793              	.L57:
 332:main.c        ****                     current_direction=WEST;
 794              		.loc 1 332 0
 795 00ec 4FF04C09 		mov	r9, #76
 796              	.LVL80:
 333:main.c        ****                 }
 797              		.loc 1 333 0
 798 00f0 0327     		movs	r7, #3
 799              	.LVL81:
 800              	.L45:
 335:main.c        ****                 path[movement_count].turnDirection=turn;
 801              		.loc 1 335 0
 802 00f2 0CEB4C03 		add	r3, ip, ip, lsl #1
 803              	.LVL82:
 804 00f6 5D00     		lsls	r5, r3, #1
 805              	.LVL83:
 806 00f8 434B     		ldr	r3, .L65+4
 807 00fa 03EBCE03 		add	r3, r3, lr, lsl #3
 808 00fe C3F89050 		str	r5, [r3, #144]
 336:main.c        ****                 movement_count++;
 809              		.loc 1 336 0
 810 0102 83F89490 		strb	r9, [r3, #148]
 337:main.c        ****                 break;
 811              		.loc 1 337 0
 812 0106 0EF1010E 		add	lr, lr, #1
 813              	.LVL84:
 338:main.c        ****                     
 814              		.loc 1 338 0
 815 010a 74E0     		b	.L37
 816              	.LVL85:
 817              	.L40:
 342:main.c        ****                       // Go straight right
 818              		.loc 1 342 0
 819 010c 002E     		cmp	r6, #0
 820 010e 07DD     		ble	.L46
 342:main.c        ****                       // Go straight right
 821              		.loc 1 342 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 26


 822 0110 BAF1000F 		cmp	r10, #0
 823 0114 04D1     		bne	.L46
 344:main.c        ****                      // Update currentvalues
 824              		.loc 1 344 0 is_stmt 1
 825 0116 0CF1010C 		add	ip, ip, #1
 826              	.LVL86:
 347:main.c        ****                     continue; // Skip the rest of this iteration and go to the next
 827              		.loc 1 347 0
 828 011a 2946     		mov	r1, r5
 346:main.c        ****                     current_column = next_column;
 829              		.loc 1 346 0
 830 011c 1846     		mov	r0, r3
 348:main.c        ****                 } else if (deltaX == 0 && deltaY > 0) {
 831              		.loc 1 348 0
 832 011e 6AE0     		b	.L37
 833              	.LVL87:
 834              	.L46:
 349:main.c        ****                     // Turn right
 835              		.loc 1 349 0
 836 0120 16B9     		cbnz	r6, .L47
 349:main.c        ****                     // Turn right
 837              		.loc 1 349 0 is_stmt 0 discriminator 1
 838 0122 BAF1000F 		cmp	r10, #0
 839 0126 04DC     		bgt	.L58
 840              	.L47:
 354:main.c        ****                     // Turn left
 841              		.loc 1 354 0 is_stmt 1
 842 0128 56B9     		cbnz	r6, .L48
 354:main.c        ****                     // Turn left
 843              		.loc 1 354 0 is_stmt 0 discriminator 1
 844 012a BAF1000F 		cmp	r10, #0
 845 012e 07DA     		bge	.L48
 846 0130 03E0     		b	.L59
 847              	.L58:
 351:main.c        ****                     current_direction=SOUTH;
 848              		.loc 1 351 0 is_stmt 1
 849 0132 4FF05209 		mov	r9, #82
 850              	.LVL88:
 352:main.c        ****                     //set the next state
 851              		.loc 1 352 0
 852 0136 0227     		movs	r7, #2
 853              	.LVL89:
 854 0138 02E0     		b	.L48
 855              	.LVL90:
 856              	.L59:
 356:main.c        ****                     current_direction=NORTH;
 857              		.loc 1 356 0
 858 013a 4FF04C09 		mov	r9, #76
 859              	.LVL91:
 357:main.c        ****                 }
 860              		.loc 1 357 0
 861 013e 0027     		movs	r7, #0
 862              	.LVL92:
 863              	.L48:
 359:main.c        ****                 path[movement_count].turnDirection=turn;
 864              		.loc 1 359 0
 865 0140 0CEB8C03 		add	r3, ip, ip, lsl #2
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 27


 866              	.LVL93:
 867 0144 5D00     		lsls	r5, r3, #1
 868              	.LVL94:
 869 0146 304B     		ldr	r3, .L65+4
 870 0148 03EBCE03 		add	r3, r3, lr, lsl #3
 871 014c C3F89050 		str	r5, [r3, #144]
 360:main.c        ****                 movement_count++;
 872              		.loc 1 360 0
 873 0150 83F89490 		strb	r9, [r3, #148]
 361:main.c        ****                 break;
 874              		.loc 1 361 0
 875 0154 0EF1010E 		add	lr, lr, #1
 876              	.LVL95:
 362:main.c        **** 
 877              		.loc 1 362 0
 878 0158 4DE0     		b	.L37
 879              	.LVL96:
 880              	.L41:
 365:main.c        ****                      // Go straight down
 881              		.loc 1 365 0
 882 015a 3EB9     		cbnz	r6, .L49
 365:main.c        ****                      // Go straight down
 883              		.loc 1 365 0 is_stmt 0 discriminator 1
 884 015c BAF1000F 		cmp	r10, #0
 885 0160 04DD     		ble	.L49
 367:main.c        ****                      // Update currentvalues
 886              		.loc 1 367 0 is_stmt 1
 887 0162 0CF1010C 		add	ip, ip, #1
 888              	.LVL97:
 370:main.c        ****                     continue;
 889              		.loc 1 370 0
 890 0166 2946     		mov	r1, r5
 369:main.c        ****                     current_column = next_column;
 891              		.loc 1 369 0
 892 0168 1846     		mov	r0, r3
 371:main.c        ****                 } else if (deltaX > 0 && deltaY == 0) {
 893              		.loc 1 371 0
 894 016a 44E0     		b	.L37
 895              	.LVL98:
 896              	.L49:
 372:main.c        ****                     // Turn right
 897              		.loc 1 372 0
 898 016c 002E     		cmp	r6, #0
 899 016e 02DD     		ble	.L50
 372:main.c        ****                     // Turn right
 900              		.loc 1 372 0 is_stmt 0 discriminator 1
 901 0170 BAF1000F 		cmp	r10, #0
 902 0174 05D0     		beq	.L60
 903              	.L50:
 377:main.c        ****                      // Turn left
 904              		.loc 1 377 0 is_stmt 1
 905 0176 002E     		cmp	r6, #0
 906 0178 0ADA     		bge	.L51
 377:main.c        ****                      // Turn left
 907              		.loc 1 377 0 is_stmt 0 discriminator 1
 908 017a BAF1000F 		cmp	r10, #0
 909 017e 04D0     		beq	.L61
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 28


 910 0180 06E0     		b	.L51
 911              	.L60:
 374:main.c        ****                     current_direction=EAST;
 912              		.loc 1 374 0 is_stmt 1
 913 0182 4FF05209 		mov	r9, #82
 914              	.LVL99:
 375:main.c        ****                    
 915              		.loc 1 375 0
 916 0186 0127     		movs	r7, #1
 917              	.LVL100:
 918 0188 02E0     		b	.L51
 919              	.LVL101:
 920              	.L61:
 379:main.c        ****                     current_direction=WEST;
 921              		.loc 1 379 0
 922 018a 4FF04C09 		mov	r9, #76
 923              	.LVL102:
 380:main.c        ****                 }
 924              		.loc 1 380 0
 925 018e 0327     		movs	r7, #3
 926              	.LVL103:
 927              	.L51:
 382:main.c        ****                 path[movement_count].turnDirection=turn;
 928              		.loc 1 382 0
 929 0190 0CEB4C03 		add	r3, ip, ip, lsl #1
 930              	.LVL104:
 931 0194 5D00     		lsls	r5, r3, #1
 932              	.LVL105:
 933 0196 1C4B     		ldr	r3, .L65+4
 934 0198 03EBCE03 		add	r3, r3, lr, lsl #3
 935 019c C3F89050 		str	r5, [r3, #144]
 383:main.c        ****                 movement_count++;
 936              		.loc 1 383 0
 937 01a0 83F89490 		strb	r9, [r3, #148]
 384:main.c        ****                 break;
 938              		.loc 1 384 0
 939 01a4 0EF1010E 		add	lr, lr, #1
 940              	.LVL106:
 385:main.c        ****                    
 941              		.loc 1 385 0
 942 01a8 25E0     		b	.L37
 943              	.LVL107:
 944              	.L42:
 389:main.c        ****                      // Go straight left
 945              		.loc 1 389 0
 946 01aa 002E     		cmp	r6, #0
 947 01ac 07DA     		bge	.L52
 389:main.c        ****                      // Go straight left
 948              		.loc 1 389 0 is_stmt 0 discriminator 1
 949 01ae BAF1000F 		cmp	r10, #0
 950 01b2 04D1     		bne	.L52
 391:main.c        ****                      // Update currentvalues
 951              		.loc 1 391 0 is_stmt 1
 952 01b4 0CF1010C 		add	ip, ip, #1
 953              	.LVL108:
 394:main.c        ****                     continue;
 954              		.loc 1 394 0
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 29


 955 01b8 2946     		mov	r1, r5
 393:main.c        ****                     current_column = next_column;
 956              		.loc 1 393 0
 957 01ba 1846     		mov	r0, r3
 395:main.c        ****                 } else if (deltaX == 0 && deltaY < 0) {
 958              		.loc 1 395 0
 959 01bc 1BE0     		b	.L37
 960              	.LVL109:
 961              	.L52:
 396:main.c        ****                     // Turn right
 962              		.loc 1 396 0
 963 01be 16B9     		cbnz	r6, .L53
 396:main.c        ****                     // Turn right
 964              		.loc 1 396 0 is_stmt 0 discriminator 1
 965 01c0 BAF1000F 		cmp	r10, #0
 966 01c4 04DB     		blt	.L62
 967              	.L53:
 401:main.c        ****                      // Turn left
 968              		.loc 1 401 0 is_stmt 1
 969 01c6 56B9     		cbnz	r6, .L54
 401:main.c        ****                      // Turn left
 970              		.loc 1 401 0 is_stmt 0 discriminator 1
 971 01c8 BAF1000F 		cmp	r10, #0
 972 01cc 04DC     		bgt	.L63
 973 01ce 06E0     		b	.L54
 974              	.L62:
 398:main.c        ****                     current_direction=NORTH;
 975              		.loc 1 398 0 is_stmt 1
 976 01d0 4FF05209 		mov	r9, #82
 977              	.LVL110:
 399:main.c        ****                    
 978              		.loc 1 399 0
 979 01d4 0027     		movs	r7, #0
 980              	.LVL111:
 981 01d6 02E0     		b	.L54
 982              	.LVL112:
 983              	.L63:
 403:main.c        ****                     current_direction=SOUTH;
 984              		.loc 1 403 0
 985 01d8 4FF04C09 		mov	r9, #76
 986              	.LVL113:
 404:main.c        ****                 }
 987              		.loc 1 404 0
 988 01dc 0227     		movs	r7, #2
 989              	.LVL114:
 990              	.L54:
 406:main.c        ****                 path[movement_count].turnDirection=turn;
 991              		.loc 1 406 0
 992 01de 0CEB8C03 		add	r3, ip, ip, lsl #2
 993              	.LVL115:
 994 01e2 5D00     		lsls	r5, r3, #1
 995              	.LVL116:
 996 01e4 084B     		ldr	r3, .L65+4
 997 01e6 03EBCE03 		add	r3, r3, lr, lsl #3
 998 01ea C3F89050 		str	r5, [r3, #144]
 407:main.c        ****                 movement_count++;
 999              		.loc 1 407 0
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 30


 1000 01ee 83F89490 		strb	r9, [r3, #148]
 408:main.c        ****                 break;
 1001              		.loc 1 408 0
 1002 01f2 0EF1010E 		add	lr, lr, #1
 1003              	.LVL117:
 1004              	.L37:
 1005              	.LBE5:
 283:main.c        ****         int next_row = path_coordinates[i][0];
 1006              		.loc 1 283 0 discriminator 2
 1007 01f6 0134     		adds	r4, r4, #1
 1008              	.LVL118:
 1009              	.L29:
 283:main.c        ****         int next_row = path_coordinates[i][0];
 1010              		.loc 1 283 0 is_stmt 0 discriminator 1
 1011 01f8 182C     		cmp	r4, #24
 1012 01fa 7FF70CAF 		ble	.L55
 1013              	.L28:
 1014 01fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1015              	.LVL119:
 1016              	.L66:
 1017 0202 00BF     		.align	2
 1018              	.L65:
 1019 0204 00000000 		.word	path_coordinates
 1020 0208 00000000 		.word	.LANCHOR1
 1021              	.LBE6:
 1022              		.cfi_endproc
 1023              	.LFE65:
 1024              		.size	getMovements, .-getMovements
 1025              		.section	.text.stop,"ax",%progbits
 1026              		.align	2
 1027              		.global	stop
 1028              		.thumb
 1029              		.thumb_func
 1030              		.type	stop, %function
 1031              	stop:
 1032              	.LFB67:
 438:main.c        **** }
 439:main.c        **** 
 440:main.c        **** 
 441:main.c        **** void stop(){
 1033              		.loc 1 441 0 is_stmt 1
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 08B5     		push	{r3, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 3, -8
 1040              		.cfi_offset 14, -4
 442:main.c        ****     PWM_1_WriteCompare(50);
 1041              		.loc 1 442 0
 1042 0002 3220     		movs	r0, #50
 1043 0004 FFF7FEFF 		bl	PWM_1_WriteCompare
 1044              	.LVL120:
 443:main.c        ****     PWM_2_WriteCompare(50);
 1045              		.loc 1 443 0
 1046 0008 3220     		movs	r0, #50
 1047 000a FFF7FEFF 		bl	PWM_2_WriteCompare
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 31


 1048              	.LVL121:
 1049 000e 08BD     		pop	{r3, pc}
 1050              		.cfi_endproc
 1051              	.LFE67:
 1052              		.size	stop, .-stop
 1053              		.section	.text.turnLeft,"ax",%progbits
 1054              		.align	2
 1055              		.global	turnLeft
 1056              		.thumb
 1057              		.thumb_func
 1058              		.type	turnLeft, %function
 1059              	turnLeft:
 1060              	.LFB68:
 444:main.c        **** }
 445:main.c        **** 
 446:main.c        **** void turnLeft(){
 1061              		.loc 1 446 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065 0000 08B5     		push	{r3, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 3, -8
 1068              		.cfi_offset 14, -4
 447:main.c        ****     PWM_1_WriteCompare(68);
 1069              		.loc 1 447 0
 1070 0002 4420     		movs	r0, #68
 1071 0004 FFF7FEFF 		bl	PWM_1_WriteCompare
 1072              	.LVL122:
 448:main.c        ****     PWM_2_WriteCompare(33);
 1073              		.loc 1 448 0
 1074 0008 2120     		movs	r0, #33
 1075 000a FFF7FEFF 		bl	PWM_2_WriteCompare
 1076              	.LVL123:
 1077              	.L70:
 449:main.c        **** //    CyDelay(350);
 450:main.c        ****     while(Sout_L_Read()==0){//wait while left is on line
 1078              		.loc 1 450 0 discriminator 1
 1079 000e FFF7FEFF 		bl	Sout_L_Read
 1080              	.LVL124:
 1081 0012 0028     		cmp	r0, #0
 1082 0014 FBD0     		beq	.L70
 1083              	.L71:
 451:main.c        ****        ;;
 452:main.c        ****     }
 453:main.c        ****     while(!(Sout_M1_Read()==0 &&Sout_M1_Read()==0)){//wait while middle sensors off line
 1084              		.loc 1 453 0 discriminator 3
 1085 0016 FFF7FEFF 		bl	Sout_M1_Read
 1086              	.LVL125:
 1087 001a 0028     		cmp	r0, #0
 1088 001c FBD1     		bne	.L71
 1089              		.loc 1 453 0 is_stmt 0 discriminator 2
 1090 001e FFF7FEFF 		bl	Sout_M1_Read
 1091              	.LVL126:
 1092 0022 0028     		cmp	r0, #0
 1093 0024 F7D1     		bne	.L71
 454:main.c        ****        ;;
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 32


 455:main.c        ****     }
 456:main.c        ****     isTurning=false;
 1094              		.loc 1 456 0 is_stmt 1
 1095 0026 0022     		movs	r2, #0
 1096 0028 044B     		ldr	r3, .L74
 1097 002a 1A72     		strb	r2, [r3, #8]
 457:main.c        ****     PWM_1_WriteCompare(65);
 1098              		.loc 1 457 0
 1099 002c 4120     		movs	r0, #65
 1100 002e FFF7FEFF 		bl	PWM_1_WriteCompare
 1101              	.LVL127:
 458:main.c        ****     PWM_2_WriteCompare(66);
 1102              		.loc 1 458 0
 1103 0032 4220     		movs	r0, #66
 1104 0034 FFF7FEFF 		bl	PWM_2_WriteCompare
 1105              	.LVL128:
 1106 0038 08BD     		pop	{r3, pc}
 1107              	.L75:
 1108 003a 00BF     		.align	2
 1109              	.L74:
 1110 003c 00000000 		.word	.LANCHOR0
 1111              		.cfi_endproc
 1112              	.LFE68:
 1113              		.size	turnLeft, .-turnLeft
 1114              		.section	.text.turnRight,"ax",%progbits
 1115              		.align	2
 1116              		.global	turnRight
 1117              		.thumb
 1118              		.thumb_func
 1119              		.type	turnRight, %function
 1120              	turnRight:
 1121              	.LFB69:
 459:main.c        **** 
 460:main.c        **** }
 461:main.c        **** 
 462:main.c        **** void turnRight(){
 1122              		.loc 1 462 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126 0000 08B5     		push	{r3, lr}
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 3, -8
 1129              		.cfi_offset 14, -4
 463:main.c        ****     PWM_1_WriteCompare(33);
 1130              		.loc 1 463 0
 1131 0002 2120     		movs	r0, #33
 1132 0004 FFF7FEFF 		bl	PWM_1_WriteCompare
 1133              	.LVL129:
 464:main.c        ****     PWM_2_WriteCompare(68);
 1134              		.loc 1 464 0
 1135 0008 4420     		movs	r0, #68
 1136 000a FFF7FEFF 		bl	PWM_2_WriteCompare
 1137              	.LVL130:
 1138              	.L77:
 465:main.c        ****     while(Sout_R_Read()==0){//wait while right is on line
 1139              		.loc 1 465 0 discriminator 1
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 33


 1140 000e FFF7FEFF 		bl	Sout_R_Read
 1141              	.LVL131:
 1142 0012 0028     		cmp	r0, #0
 1143 0014 FBD0     		beq	.L77
 1144              	.L78:
 466:main.c        ****        ;;
 467:main.c        ****     }
 468:main.c        ****     while(!(Sout_M1_Read()==0 &&Sout_M1_Read()==0)){//wait while middle sensors off line
 1145              		.loc 1 468 0 discriminator 3
 1146 0016 FFF7FEFF 		bl	Sout_M1_Read
 1147              	.LVL132:
 1148 001a 0028     		cmp	r0, #0
 1149 001c FBD1     		bne	.L78
 1150              		.loc 1 468 0 is_stmt 0 discriminator 2
 1151 001e FFF7FEFF 		bl	Sout_M1_Read
 1152              	.LVL133:
 1153 0022 0028     		cmp	r0, #0
 1154 0024 F7D1     		bne	.L78
 469:main.c        ****        ;;
 470:main.c        ****     }
 471:main.c        ****     isTurning=false;
 1155              		.loc 1 471 0 is_stmt 1
 1156 0026 0022     		movs	r2, #0
 1157 0028 044B     		ldr	r3, .L81
 1158 002a 1A72     		strb	r2, [r3, #8]
 472:main.c        ****     PWM_1_WriteCompare(65);
 1159              		.loc 1 472 0
 1160 002c 4120     		movs	r0, #65
 1161 002e FFF7FEFF 		bl	PWM_1_WriteCompare
 1162              	.LVL134:
 473:main.c        ****     PWM_2_WriteCompare(66);
 1163              		.loc 1 473 0
 1164 0032 4220     		movs	r0, #66
 1165 0034 FFF7FEFF 		bl	PWM_2_WriteCompare
 1166              	.LVL135:
 1167 0038 08BD     		pop	{r3, pc}
 1168              	.L82:
 1169 003a 00BF     		.align	2
 1170              	.L81:
 1171 003c 00000000 		.word	.LANCHOR0
 1172              		.cfi_endproc
 1173              	.LFE69:
 1174              		.size	turnRight, .-turnRight
 1175              		.section	.text.reverse,"ax",%progbits
 1176              		.align	2
 1177              		.global	reverse
 1178              		.thumb
 1179              		.thumb_func
 1180              		.type	reverse, %function
 1181              	reverse:
 1182              	.LFB70:
 474:main.c        **** }
 475:main.c        **** 
 476:main.c        **** 
 477:main.c        **** void reverse(){
 1183              		.loc 1 477 0
 1184              		.cfi_startproc
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 34


 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187 0000 08B5     		push	{r3, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 3, -8
 1190              		.cfi_offset 14, -4
 478:main.c        ****     PWM_1_WriteCompare(30);
 1191              		.loc 1 478 0
 1192 0002 1E20     		movs	r0, #30
 1193 0004 FFF7FEFF 		bl	PWM_1_WriteCompare
 1194              	.LVL136:
 479:main.c        ****     PWM_2_WriteCompare(30);
 1195              		.loc 1 479 0
 1196 0008 1E20     		movs	r0, #30
 1197 000a FFF7FEFF 		bl	PWM_2_WriteCompare
 1198              	.LVL137:
 1199 000e 08BD     		pop	{r3, pc}
 1200              		.cfi_endproc
 1201              	.LFE70:
 1202              		.size	reverse, .-reverse
 1203              		.global	__aeabi_i2d
 1204              		.global	__aeabi_dmul
 1205              		.global	__aeabi_dcmplt
 1206              		.section	.text.goStraight_cm,"ax",%progbits
 1207              		.align	2
 1208              		.global	goStraight_cm
 1209              		.thumb
 1210              		.thumb_func
 1211              		.type	goStraight_cm, %function
 1212              	goStraight_cm:
 1213              	.LFB71:
 480:main.c        **** }
 481:main.c        **** 
 482:main.c        **** void goStraight_cm(int distance){
 1214              		.loc 1 482 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              	.LVL138:
 1219 0000 70B5     		push	{r4, r5, r6, lr}
 1220              		.cfi_def_cfa_offset 16
 1221              		.cfi_offset 4, -16
 1222              		.cfi_offset 5, -12
 1223              		.cfi_offset 6, -8
 1224              		.cfi_offset 14, -4
 1225 0002 0646     		mov	r6, r0
 483:main.c        ****     
 484:main.c        ****     QuadDec_M1_SetCounter(0);
 1226              		.loc 1 484 0
 1227 0004 0020     		movs	r0, #0
 1228              	.LVL139:
 1229 0006 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 1230              	.LVL140:
 485:main.c        ****     
 486:main.c        ****     while(QuadDec_M1_GetCounter()<(distance*ENC_VALUE_PER_CM)){
 1231              		.loc 1 486 0
 1232 000a 24E0     		b	.L86
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 35


 1233              	.L91:
 487:main.c        ****             //comp0==>middle left comp1==>middle right
 488:main.c        ****         if(comp0_sum>0 && comp1_sum==0){//s_ML out of line
 1234              		.loc 1 488 0
 1235 000c 204B     		ldr	r3, .L93+8
 1236 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1237 0010 4BB1     		cbz	r3, .L87
 1238              		.loc 1 488 0 is_stmt 0 discriminator 1
 1239 0012 204A     		ldr	r2, .L93+12
 1240 0014 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1241 0016 32B9     		cbnz	r2, .L87
 489:main.c        ****             PWM_2_WriteCompare(PWM_2_ReadCompare() +1);
 1242              		.loc 1 489 0 is_stmt 1
 1243 0018 FFF7FEFF 		bl	PWM_2_ReadCompare
 1244              	.LVL141:
 1245 001c 0130     		adds	r0, r0, #1
 1246 001e C0B2     		uxtb	r0, r0
 1247 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
 1248              	.LVL142:
 1249 0024 17E0     		b	.L86
 1250              	.L87:
 490:main.c        ****         }else if(comp0_sum==0 && comp1_sum>0){//s_MR out of line
 1251              		.loc 1 490 0
 1252 0026 4BB9     		cbnz	r3, .L89
 1253              		.loc 1 490 0 is_stmt 0 discriminator 1
 1254 0028 1A4A     		ldr	r2, .L93+12
 1255 002a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1256 002c 32B1     		cbz	r2, .L89
 491:main.c        ****             PWM_1_WriteCompare(PWM_1_ReadCompare() +1);
 1257              		.loc 1 491 0 is_stmt 1
 1258 002e FFF7FEFF 		bl	PWM_1_ReadCompare
 1259              	.LVL143:
 1260 0032 0130     		adds	r0, r0, #1
 1261 0034 C0B2     		uxtb	r0, r0
 1262 0036 FFF7FEFF 		bl	PWM_1_WriteCompare
 1263              	.LVL144:
 1264 003a 0CE0     		b	.L86
 1265              	.L89:
 492:main.c        ****             
 493:main.c        ****         }else if(comp1_sum==0 && comp0_sum==0){
 1266              		.loc 1 493 0
 1267 003c 154A     		ldr	r2, .L93+12
 1268 003e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1269 0040 3AB9     		cbnz	r2, .L90
 1270              		.loc 1 493 0 is_stmt 0 discriminator 1
 1271 0042 33B9     		cbnz	r3, .L90
 494:main.c        ****             PWM_1_WriteCompare(68);
 1272              		.loc 1 494 0 is_stmt 1
 1273 0044 4420     		movs	r0, #68
 1274 0046 FFF7FEFF 		bl	PWM_1_WriteCompare
 1275              	.LVL145:
 495:main.c        ****             PWM_2_WriteCompare(69);
 1276              		.loc 1 495 0
 1277 004a 4520     		movs	r0, #69
 1278 004c FFF7FEFF 		bl	PWM_2_WriteCompare
 1279              	.LVL146:
 1280 0050 01E0     		b	.L86
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 36


 1281              	.L90:
 496:main.c        ****         }else{
 497:main.c        ****             reverse();
 1282              		.loc 1 497 0
 1283 0052 FFF7FEFF 		bl	reverse
 1284              	.LVL147:
 1285              	.L86:
 486:main.c        ****             //comp0==>middle left comp1==>middle right
 1286              		.loc 1 486 0
 1287 0056 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 1288              	.LVL148:
 1289 005a FFF7FEFF 		bl	__aeabi_i2d
 1290              	.LVL149:
 1291 005e 0446     		mov	r4, r0
 1292 0060 0D46     		mov	r5, r1
 1293 0062 3046     		mov	r0, r6
 1294 0064 FFF7FEFF 		bl	__aeabi_i2d
 1295              	.LVL150:
 1296 0068 07A3     		adr	r3, .L93
 1297 006a D3E90023 		ldrd	r2, [r3]
 1298 006e FFF7FEFF 		bl	__aeabi_dmul
 1299              	.LVL151:
 1300 0072 0246     		mov	r2, r0
 1301 0074 0B46     		mov	r3, r1
 1302 0076 2046     		mov	r0, r4
 1303 0078 2946     		mov	r1, r5
 1304 007a FFF7FEFF 		bl	__aeabi_dcmplt
 1305              	.LVL152:
 1306 007e 0028     		cmp	r0, #0
 1307 0080 C4D1     		bne	.L91
 498:main.c        ****         }
 499:main.c        ****     }
 500:main.c        ****     stop();
 1308              		.loc 1 500 0
 1309 0082 FFF7FEFF 		bl	stop
 1310              	.LVL153:
 1311 0086 70BD     		pop	{r4, r5, r6, pc}
 1312              	.LVL154:
 1313              	.L94:
 1314              		.align	3
 1315              	.L93:
 1316 0088 9A999999 		.word	-1717986918
 1317 008c 99992640 		.word	1076271513
 1318 0090 00000000 		.word	comp0_sum
 1319 0094 00000000 		.word	comp1_sum
 1320              		.cfi_endproc
 1321              	.LFE71:
 1322              		.size	goStraight_cm, .-goStraight_cm
 1323              		.section	.text.goStraight,"ax",%progbits
 1324              		.align	2
 1325              		.global	goStraight
 1326              		.thumb
 1327              		.thumb_func
 1328              		.type	goStraight, %function
 1329              	goStraight:
 1330              	.LFB72:
 501:main.c        ****     
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 37


 502:main.c        **** }
 503:main.c        **** 
 504:main.c        **** void goStraight(){
 1331              		.loc 1 504 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 0
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335 0000 08B5     		push	{r3, lr}
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 3, -8
 1338              		.cfi_offset 14, -4
 505:main.c        ****     
 506:main.c        ****         //comp0==>middle left comp1==>middle right
 507:main.c        ****     if(comp0_sum>0 && comp1_sum==0){//s_ML out of line
 1339              		.loc 1 507 0
 1340 0002 134B     		ldr	r3, .L101
 1341 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1342 0006 4BB1     		cbz	r3, .L96
 1343              		.loc 1 507 0 is_stmt 0 discriminator 1
 1344 0008 124A     		ldr	r2, .L101+4
 1345 000a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1346 000c 32B9     		cbnz	r2, .L96
 508:main.c        ****         PWM_2_WriteCompare(PWM_2_ReadCompare() +1);
 1347              		.loc 1 508 0 is_stmt 1
 1348 000e FFF7FEFF 		bl	PWM_2_ReadCompare
 1349              	.LVL155:
 1350 0012 0130     		adds	r0, r0, #1
 1351 0014 C0B2     		uxtb	r0, r0
 1352 0016 FFF7FEFF 		bl	PWM_2_WriteCompare
 1353              	.LVL156:
 1354 001a 08BD     		pop	{r3, pc}
 1355              	.L96:
 509:main.c        ****     }else if(comp0_sum==0 && comp1_sum>0){//s_MR out of line
 1356              		.loc 1 509 0
 1357 001c 4BB9     		cbnz	r3, .L98
 1358              		.loc 1 509 0 is_stmt 0 discriminator 1
 1359 001e 0D4A     		ldr	r2, .L101+4
 1360 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1361 0022 32B1     		cbz	r2, .L98
 510:main.c        ****         PWM_1_WriteCompare(PWM_1_ReadCompare() +1);
 1362              		.loc 1 510 0 is_stmt 1
 1363 0024 FFF7FEFF 		bl	PWM_1_ReadCompare
 1364              	.LVL157:
 1365 0028 0130     		adds	r0, r0, #1
 1366 002a C0B2     		uxtb	r0, r0
 1367 002c FFF7FEFF 		bl	PWM_1_WriteCompare
 1368              	.LVL158:
 1369 0030 08BD     		pop	{r3, pc}
 1370              	.L98:
 511:main.c        ****         
 512:main.c        ****     }else if(comp1_sum==0 && comp0_sum==0){
 1371              		.loc 1 512 0
 1372 0032 084A     		ldr	r2, .L101+4
 1373 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1374 0036 3AB9     		cbnz	r2, .L99
 1375              		.loc 1 512 0 is_stmt 0 discriminator 1
 1376 0038 33B9     		cbnz	r3, .L99
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 38


 513:main.c        ****         PWM_1_WriteCompare(68);
 1377              		.loc 1 513 0 is_stmt 1
 1378 003a 4420     		movs	r0, #68
 1379 003c FFF7FEFF 		bl	PWM_1_WriteCompare
 1380              	.LVL159:
 514:main.c        ****         PWM_2_WriteCompare(69);
 1381              		.loc 1 514 0
 1382 0040 4520     		movs	r0, #69
 1383 0042 FFF7FEFF 		bl	PWM_2_WriteCompare
 1384              	.LVL160:
 1385 0046 08BD     		pop	{r3, pc}
 1386              	.L99:
 515:main.c        ****     }else{
 516:main.c        ****         reverse();
 1387              		.loc 1 516 0
 1388 0048 FFF7FEFF 		bl	reverse
 1389              	.LVL161:
 1390 004c 08BD     		pop	{r3, pc}
 1391              	.L102:
 1392 004e 00BF     		.align	2
 1393              	.L101:
 1394 0050 00000000 		.word	comp0_sum
 1395 0054 00000000 		.word	comp1_sum
 1396              		.cfi_endproc
 1397              	.LFE72:
 1398              		.size	goStraight, .-goStraight
 1399              		.section	.text.main,"ax",%progbits
 1400              		.align	2
 1401              		.global	main
 1402              		.thumb
 1403              		.thumb_func
 1404              		.type	main, %function
 1405              	main:
 1406              	.LFB73:
 517:main.c        ****     }
 518:main.c        ****     
 519:main.c        ****     
 520:main.c        **** }
 521:main.c        **** 
 522:main.c        **** int main(void)
 523:main.c        **** {
 1407              		.loc 1 523 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411 0000 10B5     		push	{r4, lr}
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 4, -8
 1414              		.cfi_offset 14, -4
 524:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 1415              		.loc 1 524 0
 1416              		.syntax unified
 1417              	@ 524 "main.c" 1
 1418 0002 62B6     		CPSIE   i
 1419              	@ 0 "" 2
 525:main.c        **** 
 526:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 39


 527:main.c        ****     Timer_1_Start();
 1420              		.loc 1 527 0
 1421              		.thumb
 1422              		.syntax unified
 1423 0004 FFF7FEFF 		bl	Timer_1_Start
 1424              	.LVL162:
 528:main.c        ****     
 529:main.c        ****     isr_1_StartEx(isr_1_handler);
 1425              		.loc 1 529 0
 1426 0008 2D48     		ldr	r0, .L120
 1427 000a FFF7FEFF 		bl	isr_1_StartEx
 1428              	.LVL163:
 530:main.c        ****     
 531:main.c        ****     //start comparators
 532:main.c        ****     Comp_0_Start();
 1429              		.loc 1 532 0
 1430 000e FFF7FEFF 		bl	Comp_0_Start
 1431              	.LVL164:
 533:main.c        ****     Comp_1_Start();
 1432              		.loc 1 533 0
 1433 0012 FFF7FEFF 		bl	Comp_1_Start
 1434              	.LVL165:
 534:main.c        ****     Comp_2_Start();
 1435              		.loc 1 534 0
 1436 0016 FFF7FEFF 		bl	Comp_2_Start
 1437              	.LVL166:
 535:main.c        ****     Comp_3_Start();
 1438              		.loc 1 535 0
 1439 001a FFF7FEFF 		bl	Comp_3_Start
 1440              	.LVL167:
 536:main.c        ****     
 537:main.c        ****     /*Start PWM Clk*/
 538:main.c        ****     Clock_PWM_Start(); 
 1441              		.loc 1 538 0
 1442 001e FFF7FEFF 		bl	Clock_PWM_Start
 1443              	.LVL168:
 539:main.c        ****     //Start PWM
 540:main.c        ****     PWM_1_Start();
 1444              		.loc 1 540 0
 1445 0022 FFF7FEFF 		bl	PWM_1_Start
 1446              	.LVL169:
 541:main.c        ****     PWM_2_Start();
 1447              		.loc 1 541 0
 1448 0026 FFF7FEFF 		bl	PWM_2_Start
 1449              	.LVL170:
 542:main.c        ****      
 543:main.c        ****     // write comparision int for MC33926 duty cycle must me larger than 10% and less than 90%
 544:main.c        **** 
 545:main.c        ****     
 546:main.c        ****     PWM_1_WritePeriod(100);
 1450              		.loc 1 546 0
 1451 002a 6420     		movs	r0, #100
 1452 002c FFF7FEFF 		bl	PWM_1_WritePeriod
 1453              	.LVL171:
 547:main.c        ****     PWM_2_WritePeriod(100);
 1454              		.loc 1 547 0
 1455 0030 6420     		movs	r0, #100
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 40


 1456 0032 FFF7FEFF 		bl	PWM_2_WritePeriod
 1457              	.LVL172:
 548:main.c        ****     
 549:main.c        ****     PWM_1_WriteCompare(50);
 1458              		.loc 1 549 0
 1459 0036 3220     		movs	r0, #50
 1460 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 1461              	.LVL173:
 550:main.c        ****     PWM_2_WriteCompare(50);
 1462              		.loc 1 550 0
 1463 003c 3220     		movs	r0, #50
 1464 003e FFF7FEFF 		bl	PWM_2_WriteCompare
 1465              	.LVL174:
 551:main.c        ****     QuadDec_M1_Start();
 1466              		.loc 1 551 0
 1467 0042 FFF7FEFF 		bl	QuadDec_M1_Start
 1468              	.LVL175:
 552:main.c        ****     QuadDec_M2_Start();
 1469              		.loc 1 552 0
 1470 0046 FFF7FEFF 		bl	QuadDec_M2_Start
 1471              	.LVL176:
 553:main.c        ****     
 554:main.c        ****     
 555:main.c        **** //**********************************calculate path    
 556:main.c        **** //    int startX = 0, startY = 0;
 557:main.c        **** //    int targetX = 4, targetY = 4;
 558:main.c        **** //
 559:main.c        **** //    Node* endNode = AStar(startX, startY, targetX, targetY);
 560:main.c        **** //
 561:main.c        **** //    // Print the path
 562:main.c        **** //    printPath(endNode);
 563:main.c        **** //**************************************************    
 564:main.c        ****     direction();
 1472              		.loc 1 564 0
 1473 004a FFF7FEFF 		bl	direction
 1474              	.LVL177:
 1475              	.LBB7:
 565:main.c        ****     
 566:main.c        ****     //this loops through all the movement required in the path
 567:main.c        ****     //movement contains distance for going straight and a turn
 568:main.c        ****     for(int i=0; i<16;i++){//length should be how many movements there should be
 1476              		.loc 1 568 0
 1477 004e 0024     		movs	r4, #0
 1478 0050 30E0     		b	.L104
 1479              	.LVL178:
 1480              	.L115:
 569:main.c        ****         if(i!=0){
 1481              		.loc 1 569 0
 1482 0052 34B1     		cbz	r4, .L105
 570:main.c        ****             goStraight_cm(moveCountArray[i].distance-6);//if not the first movement remove 5 cm as 
 1483              		.loc 1 570 0
 1484 0054 1B4B     		ldr	r3, .L120+4
 1485 0056 53F83400 		ldr	r0, [r3, r4, lsl #3]
 1486 005a 0638     		subs	r0, r0, #6
 1487 005c FFF7FEFF 		bl	goStraight_cm
 1488              	.LVL179:
 1489 0060 06E0     		b	.L106
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 41


 1490              	.L105:
 571:main.c        ****         }else{
 572:main.c        ****             goStraight_cm(path[i].distance);
 1491              		.loc 1 572 0
 1492 0062 194B     		ldr	r3, .L120+8
 1493 0064 03EBC403 		add	r3, r3, r4, lsl #3
 1494 0068 D3F89000 		ldr	r0, [r3, #144]
 1495 006c FFF7FEFF 		bl	goStraight_cm
 1496              	.LVL180:
 1497              	.L106:
 573:main.c        ****         }
 574:main.c        ****         if(moveCountArray[i].turnDirection=='R'){
 1498              		.loc 1 574 0
 1499 0070 144B     		ldr	r3, .L120+4
 1500 0072 03EBC403 		add	r3, r3, r4, lsl #3
 1501 0076 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1502 0078 522B     		cmp	r3, #82
 1503 007a 09D1     		bne	.L117
 1504 007c 01E0     		b	.L107
 1505              	.L109:
 575:main.c        ****            while(Sout_R_Read()!=0){
 576:main.c        ****              goStraight();
 1506              		.loc 1 576 0
 1507 007e FFF7FEFF 		bl	goStraight
 1508              	.LVL181:
 1509              	.L107:
 575:main.c        ****            while(Sout_R_Read()!=0){
 1510              		.loc 1 575 0
 1511 0082 FFF7FEFF 		bl	Sout_R_Read
 1512              	.LVL182:
 1513 0086 0028     		cmp	r0, #0
 1514 0088 F9D1     		bne	.L109
 577:main.c        ****            }
 578:main.c        ****            turnRight();
 1515              		.loc 1 578 0
 1516 008a FFF7FEFF 		bl	turnRight
 1517              	.LVL183:
 1518 008e 10E0     		b	.L110
 1519              	.L117:
 579:main.c        ****         }else if(moveCountArray[i].turnDirection=='L'){
 1520              		.loc 1 579 0
 1521 0090 4C2B     		cmp	r3, #76
 1522 0092 09D1     		bne	.L118
 1523 0094 01E0     		b	.L111
 1524              	.L113:
 580:main.c        ****            while(Sout_L_Read()!=0){
 581:main.c        ****              goStraight();
 1525              		.loc 1 581 0
 1526 0096 FFF7FEFF 		bl	goStraight
 1527              	.LVL184:
 1528              	.L111:
 580:main.c        ****            while(Sout_L_Read()!=0){
 1529              		.loc 1 580 0
 1530 009a FFF7FEFF 		bl	Sout_L_Read
 1531              	.LVL185:
 1532 009e 0028     		cmp	r0, #0
 1533 00a0 F9D1     		bne	.L113
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 42


 582:main.c        ****            }
 583:main.c        ****            turnLeft();
 1534              		.loc 1 583 0
 1535 00a2 FFF7FEFF 		bl	turnLeft
 1536              	.LVL186:
 1537 00a6 04E0     		b	.L110
 1538              	.L118:
 584:main.c        ****         }else if(moveCountArray[i].turnDirection=='E'){
 1539              		.loc 1 584 0
 1540 00a8 452B     		cmp	r3, #69
 1541 00aa 02D1     		bne	.L110
 585:main.c        ****             stop();
 1542              		.loc 1 585 0
 1543 00ac FFF7FEFF 		bl	stop
 1544              	.LVL187:
 586:main.c        ****             break;
 1545              		.loc 1 586 0
 1546 00b0 02E0     		b	.L114
 1547              	.L110:
 568:main.c        ****         if(i!=0){
 1548              		.loc 1 568 0 discriminator 2
 1549 00b2 0134     		adds	r4, r4, #1
 1550              	.LVL188:
 1551              	.L104:
 568:main.c        ****         if(i!=0){
 1552              		.loc 1 568 0 is_stmt 0 discriminator 1
 1553 00b4 0F2C     		cmp	r4, #15
 1554 00b6 CCDD     		ble	.L115
 1555              	.L114:
 1556              	.LBE7:
 587:main.c        ****         }
 588:main.c        ****     }
 589:main.c        ****     stop();
 1557              		.loc 1 589 0 is_stmt 1
 1558 00b8 FFF7FEFF 		bl	stop
 1559              	.LVL189:
 1560              	.L116:
 1561 00bc FEE7     		b	.L116
 1562              	.L121:
 1563 00be 00BF     		.align	2
 1564              	.L120:
 1565 00c0 00000000 		.word	isr_1_handler
 1566 00c4 00000000 		.word	moveCountArray
 1567 00c8 00000000 		.word	.LANCHOR1
 1568              		.cfi_endproc
 1569              	.LFE73:
 1570              		.size	main, .-main
 1571              		.global	current_direction
 1572              		.global	pathCoordinates
 1573              		.global	position
 1574              		.global	target
 1575              		.global	stepCount
 1576              		.global	currentY
 1577              		.global	currentX
 1578              		.global	current_state
 1579              		.comm	moveCountArray,80,4
 1580              		.global	path
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 43


 1581              		.comm	path_coordinates,200,4
 1582              		.comm	comp3_sum,1,1
 1583              		.comm	comp2_sum,1,1
 1584              		.comm	comp1_sum,1,1
 1585              		.comm	comp0_sum,1,1
 1586              		.global	isTurning
 1587              		.global	count
 1588              		.global	counter
 1589              		.comm	path_length,4,4
 1590              		.global	timeInterval_s
 1591              		.global	wheelCircumference_cm
 1592              		.global	CPR
 1593              		.data
 1594              		.align	3
 1595              		.set	.LANCHOR1,. + 0
 1596              		.type	pathCoordinates, %object
 1597              		.size	pathCoordinates, 120
 1598              	pathCoordinates:
 1599 0000 02000000 		.word	2
 1600 0004 02000000 		.word	2
 1601 0008 03000000 		.word	3
 1602 000c 02000000 		.word	2
 1603 0010 04000000 		.word	4
 1604 0014 02000000 		.word	2
 1605 0018 04000000 		.word	4
 1606 001c 03000000 		.word	3
 1607 0020 04000000 		.word	4
 1608 0024 04000000 		.word	4
 1609 0028 03000000 		.word	3
 1610 002c 04000000 		.word	4
 1611 0030 02000000 		.word	2
 1612 0034 04000000 		.word	4
 1613 0038 02000000 		.word	2
 1614 003c 05000000 		.word	5
 1615 0040 02000000 		.word	2
 1616 0044 06000000 		.word	6
 1617 0048 02000000 		.word	2
 1618 004c 07000000 		.word	7
 1619 0050 02000000 		.word	2
 1620 0054 08000000 		.word	8
 1621 0058 02000000 		.word	2
 1622 005c 09000000 		.word	9
 1623 0060 02000000 		.word	2
 1624 0064 0A000000 		.word	10
 1625 0068 03000000 		.word	3
 1626 006c 0A000000 		.word	10
 1627 0070 04000000 		.word	4
 1628 0074 0A000000 		.word	10
 1629              		.type	currentX, %object
 1630              		.size	currentX, 4
 1631              	currentX:
 1632 0078 02000000 		.word	2
 1633              		.type	currentY, %object
 1634              		.size	currentY, 4
 1635              	currentY:
 1636 007c 02000000 		.word	2
 1637              		.type	target, %object
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 44


 1638              		.size	target, 8
 1639              	target:
 1640 0080 0E000000 		.word	14
 1641 0084 0F000000 		.word	15
 1642              		.type	position, %object
 1643              		.size	position, 4
 1644              	position:
 1645 0088 FFFFFFFF 		.word	-1
 1646              		.type	current_direction, %object
 1647              		.size	current_direction, 1
 1648              	current_direction:
 1649 008c 02       		.byte	2
 1650 008d 000000   		.space	3
 1651              		.type	path, %object
 1652              		.size	path, 80
 1653              	path:
 1654 0090 12000000 		.word	18
 1655 0094 4C       		.byte	76
 1656 0095 000000   		.space	3
 1657 0098 1E000000 		.word	30
 1658 009c 4C       		.byte	76
 1659 009d 000000   		.space	3
 1660 00a0 12000000 		.word	18
 1661 00a4 52       		.byte	82
 1662 00a5 000000   		.space	3
 1663 00a8 32000000 		.word	50
 1664 00ac 4E       		.byte	78
 1665 00ad 000000   		.space	3
 1666 00b0 00000000 		.space	48
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1666      00000000 
 1667              		.type	current_state, %object
 1668              		.size	current_state, 1
 1669              	current_state:
 1670 00e0 03       		.byte	3
 1671 00e1 000000   		.space	3
 1672              		.type	counter, %object
 1673              		.size	counter, 4
 1674              	counter:
 1675 00e4 01000000 		.word	1
 1676              		.type	timeInterval_s, %object
 1677              		.size	timeInterval_s, 8
 1678              	timeInterval_s:
 1679 00e8 0C022B87 		.word	-2027224564
 1680 00ec 16D92540 		.word	1076222230
 1681              		.type	wheelCircumference_cm, %object
 1682              		.size	wheelCircumference_cm, 4
 1683              	wheelCircumference_cm:
 1684 00f0 7201A241 		.word	1101136242
 1685              		.type	CPR, %object
 1686              		.size	CPR, 4
 1687              	CPR:
 1688 00f4 E4000000 		.word	228
 1689              		.bss
 1690              		.align	2
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 45


 1691              		.set	.LANCHOR0,. + 0
 1692              		.type	count, %object
 1693              		.size	count, 4
 1694              	count:
 1695 0000 00000000 		.space	4
 1696              		.type	stepCount, %object
 1697              		.size	stepCount, 4
 1698              	stepCount:
 1699 0004 00000000 		.space	4
 1700              		.type	isTurning, %object
 1701              		.size	isTurning, 1
 1702              	isTurning:
 1703 0008 00       		.space	1
 1704              		.text
 1705              	.Letext0:
 1706              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1707              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1708              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1709              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1710              		.file 6 "Generated_Source\\PSoC5/Comp_0.h"
 1711              		.file 7 "Generated_Source\\PSoC5/Comp_1.h"
 1712              		.file 8 "Generated_Source\\PSoC5/Comp_2.h"
 1713              		.file 9 "Generated_Source\\PSoC5/Comp_3.h"
 1714              		.file 10 "Generated_Source\\PSoC5/Timer_1.h"
 1715              		.file 11 "Generated_Source\\PSoC5/PWM_1.h"
 1716              		.file 12 "Generated_Source\\PSoC5/PWM_2.h"
 1717              		.file 13 "Generated_Source\\PSoC5/Sout_L.h"
 1718              		.file 14 "Generated_Source\\PSoC5/Sout_M1.h"
 1719              		.file 15 "Generated_Source\\PSoC5/Sout_R.h"
 1720              		.file 16 "Generated_Source\\PSoC5/QuadDec_M1.h"
 1721              		.file 17 "Generated_Source\\PSoC5/isr_1.h"
 1722              		.file 18 "Generated_Source\\PSoC5/Clock_PWM.h"
 1723              		.file 19 "Generated_Source\\PSoC5/QuadDec_M2.h"
 1724              		.section	.debug_info,"",%progbits
 1725              	.Ldebug_info0:
 1726 0000 260A0000 		.4byte	0xa26
 1727 0004 0400     		.2byte	0x4
 1728 0006 00000000 		.4byte	.Ldebug_abbrev0
 1729 000a 04       		.byte	0x4
 1730 000b 01       		.uleb128 0x1
 1731 000c 52050000 		.4byte	.LASF108
 1732 0010 0C       		.byte	0xc
 1733 0011 D5030000 		.4byte	.LASF109
 1734 0015 40040000 		.4byte	.LASF110
 1735 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1736 001d 00000000 		.4byte	0
 1737 0021 00000000 		.4byte	.Ldebug_line0
 1738 0025 02       		.uleb128 0x2
 1739 0026 01       		.byte	0x1
 1740 0027 06       		.byte	0x6
 1741 0028 31010000 		.4byte	.LASF0
 1742 002c 02       		.uleb128 0x2
 1743 002d 01       		.byte	0x1
 1744 002e 08       		.byte	0x8
 1745 002f 45020000 		.4byte	.LASF1
 1746 0033 02       		.uleb128 0x2
 1747 0034 02       		.byte	0x2
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 46


 1748 0035 05       		.byte	0x5
 1749 0036 DA000000 		.4byte	.LASF2
 1750 003a 02       		.uleb128 0x2
 1751 003b 02       		.byte	0x2
 1752 003c 07       		.byte	0x7
 1753 003d 21030000 		.4byte	.LASF3
 1754 0041 03       		.uleb128 0x3
 1755 0042 36040000 		.4byte	.LASF12
 1756 0046 02       		.byte	0x2
 1757 0047 3F       		.byte	0x3f
 1758 0048 4C000000 		.4byte	0x4c
 1759 004c 02       		.uleb128 0x2
 1760 004d 04       		.byte	0x4
 1761 004e 05       		.byte	0x5
 1762 004f C7010000 		.4byte	.LASF4
 1763 0053 02       		.uleb128 0x2
 1764 0054 04       		.byte	0x4
 1765 0055 07       		.byte	0x7
 1766 0056 DC030000 		.4byte	.LASF5
 1767 005a 02       		.uleb128 0x2
 1768 005b 08       		.byte	0x8
 1769 005c 05       		.byte	0x5
 1770 005d 8F010000 		.4byte	.LASF6
 1771 0061 02       		.uleb128 0x2
 1772 0062 08       		.byte	0x8
 1773 0063 07       		.byte	0x7
 1774 0064 95020000 		.4byte	.LASF7
 1775 0068 04       		.uleb128 0x4
 1776 0069 04       		.byte	0x4
 1777 006a 05       		.byte	0x5
 1778 006b 696E7400 		.ascii	"int\000"
 1779 006f 02       		.uleb128 0x2
 1780 0070 04       		.byte	0x4
 1781 0071 07       		.byte	0x7
 1782 0072 C1020000 		.4byte	.LASF8
 1783 0076 02       		.uleb128 0x2
 1784 0077 08       		.byte	0x8
 1785 0078 04       		.byte	0x4
 1786 0079 2C020000 		.4byte	.LASF9
 1787 007d 02       		.uleb128 0x2
 1788 007e 04       		.byte	0x4
 1789 007f 07       		.byte	0x7
 1790 0080 74000000 		.4byte	.LASF10
 1791 0084 02       		.uleb128 0x2
 1792 0085 01       		.byte	0x1
 1793 0086 08       		.byte	0x8
 1794 0087 B9010000 		.4byte	.LASF11
 1795 008b 03       		.uleb128 0x3
 1796 008c 6A030000 		.4byte	.LASF13
 1797 0090 03       		.byte	0x3
 1798 0091 2C       		.byte	0x2c
 1799 0092 41000000 		.4byte	0x41
 1800 0096 05       		.uleb128 0x5
 1801 0097 24010000 		.4byte	.LASF14
 1802 009b 04       		.byte	0x4
 1803 009c E901     		.2byte	0x1e9
 1804 009e 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 47


 1805 00a2 05       		.uleb128 0x5
 1806 00a3 F4030000 		.4byte	.LASF15
 1807 00a7 04       		.byte	0x4
 1808 00a8 EB01     		.2byte	0x1eb
 1809 00aa 53000000 		.4byte	0x53
 1810 00ae 05       		.uleb128 0x5
 1811 00af EE030000 		.4byte	.LASF16
 1812 00b3 04       		.byte	0x4
 1813 00b4 EE01     		.2byte	0x1ee
 1814 00b6 4C000000 		.4byte	0x4c
 1815 00ba 02       		.uleb128 0x2
 1816 00bb 04       		.byte	0x4
 1817 00bc 04       		.byte	0x4
 1818 00bd 78010000 		.4byte	.LASF17
 1819 00c1 02       		.uleb128 0x2
 1820 00c2 08       		.byte	0x8
 1821 00c3 04       		.byte	0x4
 1822 00c4 39050000 		.4byte	.LASF18
 1823 00c8 06       		.uleb128 0x6
 1824 00c9 BE010000 		.4byte	.LASF21
 1825 00cd 08       		.byte	0x8
 1826 00ce 01       		.byte	0x1
 1827 00cf 3F       		.byte	0x3f
 1828 00d0 ED000000 		.4byte	0xed
 1829 00d4 07       		.uleb128 0x7
 1830 00d5 4A030000 		.4byte	.LASF19
 1831 00d9 01       		.byte	0x1
 1832 00da 40       		.byte	0x40
 1833 00db 68000000 		.4byte	0x68
 1834 00df 00       		.byte	0
 1835 00e0 07       		.uleb128 0x7
 1836 00e1 8F000000 		.4byte	.LASF20
 1837 00e5 01       		.byte	0x1
 1838 00e6 41       		.byte	0x41
 1839 00e7 84000000 		.4byte	0x84
 1840 00eb 04       		.byte	0x4
 1841 00ec 00       		.byte	0
 1842 00ed 03       		.uleb128 0x3
 1843 00ee BE010000 		.4byte	.LASF21
 1844 00f2 01       		.byte	0x1
 1845 00f3 42       		.byte	0x42
 1846 00f4 C8000000 		.4byte	0xc8
 1847 00f8 08       		.uleb128 0x8
 1848 00f9 01       		.byte	0x1
 1849 00fa 2C000000 		.4byte	0x2c
 1850 00fe 01       		.byte	0x1
 1851 00ff 4E       		.byte	0x4e
 1852 0100 1D010000 		.4byte	0x11d
 1853 0104 09       		.uleb128 0x9
 1854 0105 4E000000 		.4byte	.LASF22
 1855 0109 00       		.byte	0
 1856 010a 09       		.uleb128 0x9
 1857 010b 84020000 		.4byte	.LASF23
 1858 010f 01       		.byte	0x1
 1859 0110 09       		.uleb128 0x9
 1860 0111 13020000 		.4byte	.LASF24
 1861 0115 02       		.byte	0x2
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 48


 1862 0116 09       		.uleb128 0x9
 1863 0117 9F030000 		.4byte	.LASF25
 1864 011b 03       		.byte	0x3
 1865 011c 00       		.byte	0
 1866 011d 03       		.uleb128 0x3
 1867 011e 6C020000 		.4byte	.LASF26
 1868 0122 01       		.byte	0x1
 1869 0123 53       		.byte	0x53
 1870 0124 F8000000 		.4byte	0xf8
 1871 0128 08       		.uleb128 0x8
 1872 0129 01       		.byte	0x1
 1873 012a 2C000000 		.4byte	0x2c
 1874 012e 01       		.byte	0x1
 1875 012f 57       		.byte	0x57
 1876 0130 4D010000 		.4byte	0x14d
 1877 0134 09       		.uleb128 0x9
 1878 0135 0B000000 		.4byte	.LASF27
 1879 0139 00       		.byte	0
 1880 013a 09       		.uleb128 0x9
 1881 013b AF010000 		.4byte	.LASF28
 1882 013f 01       		.byte	0x1
 1883 0140 09       		.uleb128 0x9
 1884 0141 D0010000 		.4byte	.LASF29
 1885 0145 02       		.byte	0x2
 1886 0146 09       		.uleb128 0x9
 1887 0147 FD040000 		.4byte	.LASF30
 1888 014b 03       		.byte	0x3
 1889 014c 00       		.byte	0
 1890 014d 03       		.uleb128 0x3
 1891 014e E4000000 		.4byte	.LASF31
 1892 0152 01       		.byte	0x1
 1893 0153 5C       		.byte	0x5c
 1894 0154 28010000 		.4byte	0x128
 1895 0158 0A       		.uleb128 0xa
 1896 0159 E5020000 		.4byte	.LASF39
 1897 015d 01       		.byte	0x1
 1898 015e A201     		.2byte	0x1a2
 1899 0160 00000000 		.4byte	.LFB66
 1900 0164 74000000 		.4byte	.LFE66-.LFB66
 1901 0168 01       		.uleb128 0x1
 1902 0169 9C       		.byte	0x9c
 1903 016a 9C010000 		.4byte	0x19c
 1904 016e 0B       		.uleb128 0xb
 1905 016f 06000000 		.4byte	.LVL0
 1906 0173 00090000 		.4byte	0x900
 1907 0177 0B       		.uleb128 0xb
 1908 0178 12000000 		.4byte	.LVL1
 1909 017c 0B090000 		.4byte	0x90b
 1910 0180 0B       		.uleb128 0xb
 1911 0181 1E000000 		.4byte	.LVL2
 1912 0185 16090000 		.4byte	0x916
 1913 0189 0B       		.uleb128 0xb
 1914 018a 2A000000 		.4byte	.LVL3
 1915 018e 21090000 		.4byte	0x921
 1916 0192 0B       		.uleb128 0xb
 1917 0193 5C000000 		.4byte	.LVL4
 1918 0197 2C090000 		.4byte	0x92c
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 49


 1919 019b 00       		.byte	0
 1920 019c 0C       		.uleb128 0xc
 1921 019d 9D000000 		.4byte	.LASF53
 1922 01a1 01       		.byte	0x1
 1923 01a2 7C       		.byte	0x7c
 1924 01a3 00000000 		.4byte	.LFB64
 1925 01a7 D8020000 		.4byte	.LFE64-.LFB64
 1926 01ab 01       		.uleb128 0x1
 1927 01ac 9C       		.byte	0x9c
 1928 01ad 39020000 		.4byte	0x239
 1929 01b1 0D       		.uleb128 0xd
 1930 01b2 F2040000 		.4byte	.LASF32
 1931 01b6 01       		.byte	0x1
 1932 01b7 7D       		.byte	0x7d
 1933 01b8 68000000 		.4byte	0x68
 1934 01bc 0F       		.byte	0xf
 1935 01bd 0E       		.uleb128 0xe
 1936 01be 02000000 		.4byte	.LBB2
 1937 01c2 D6020000 		.4byte	.LBE2-.LBB2
 1938 01c6 0F       		.uleb128 0xf
 1939 01c7 6900     		.ascii	"i\000"
 1940 01c9 01       		.byte	0x1
 1941 01ca 7F       		.byte	0x7f
 1942 01cb 68000000 		.4byte	0x68
 1943 01cf 00000000 		.4byte	.LLST0
 1944 01d3 0E       		.uleb128 0xe
 1945 01d4 06000000 		.4byte	.LBB3
 1946 01d8 BC020000 		.4byte	.LBE3-.LBB3
 1947 01dc 10       		.uleb128 0x10
 1948 01dd 18010000 		.4byte	.LASF33
 1949 01e1 01       		.byte	0x1
 1950 01e2 80       		.byte	0x80
 1951 01e3 68000000 		.4byte	0x68
 1952 01e7 2A000000 		.4byte	.LLST1
 1953 01eb 10       		.uleb128 0x10
 1954 01ec 1E010000 		.4byte	.LASF34
 1955 01f0 01       		.byte	0x1
 1956 01f1 81       		.byte	0x81
 1957 01f2 68000000 		.4byte	0x68
 1958 01f6 48000000 		.4byte	.LLST2
 1959 01fa 10       		.uleb128 0x10
 1960 01fb 2A010000 		.4byte	.LASF35
 1961 01ff 01       		.byte	0x1
 1962 0200 84       		.byte	0x84
 1963 0201 68000000 		.4byte	0x68
 1964 0205 5B000000 		.4byte	.LLST3
 1965 0209 10       		.uleb128 0x10
 1966 020a F8020000 		.4byte	.LASF36
 1967 020e 01       		.byte	0x1
 1968 020f 85       		.byte	0x85
 1969 0210 68000000 		.4byte	0x68
 1970 0214 47020000 		.4byte	.LLST4
 1971 0218 10       		.uleb128 0x10
 1972 0219 3E000000 		.4byte	.LASF37
 1973 021d 01       		.byte	0x1
 1974 021e 87       		.byte	0x87
 1975 021f 68000000 		.4byte	0x68
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 50


 1976 0223 5A020000 		.4byte	.LLST5
 1977 0227 10       		.uleb128 0x10
 1978 0228 46000000 		.4byte	.LASF38
 1979 022c 01       		.byte	0x1
 1980 022d 88       		.byte	0x88
 1981 022e 68000000 		.4byte	0x68
 1982 0232 7C020000 		.4byte	.LLST6
 1983 0236 00       		.byte	0
 1984 0237 00       		.byte	0
 1985 0238 00       		.byte	0
 1986 0239 0A       		.uleb128 0xa
 1987 023a 38020000 		.4byte	.LASF40
 1988 023e 01       		.byte	0x1
 1989 023f 1101     		.2byte	0x111
 1990 0241 00000000 		.4byte	.LFB65
 1991 0245 0C020000 		.4byte	.LFE65-.LFB65
 1992 0249 01       		.uleb128 0x1
 1993 024a 9C       		.byte	0x9c
 1994 024b 4E030000 		.4byte	0x34e
 1995 024f 11       		.uleb128 0x11
 1996 0250 AC000000 		.4byte	.LASF41
 1997 0254 01       		.byte	0x1
 1998 0255 1101     		.2byte	0x111
 1999 0257 68000000 		.4byte	0x68
 2000 025b B8020000 		.4byte	.LLST7
 2001 025f 11       		.uleb128 0x11
 2002 0260 17000000 		.4byte	.LASF42
 2003 0264 01       		.byte	0x1
 2004 0265 1101     		.2byte	0x111
 2005 0267 68000000 		.4byte	0x68
 2006 026b D9020000 		.4byte	.LLST8
 2007 026f 11       		.uleb128 0x11
 2008 0270 E9010000 		.4byte	.LASF43
 2009 0274 01       		.byte	0x1
 2010 0275 1101     		.2byte	0x111
 2011 0277 68000000 		.4byte	0x68
 2012 027b FA020000 		.4byte	.LLST9
 2013 027f 11       		.uleb128 0x11
 2014 0280 CC000000 		.4byte	.LASF44
 2015 0284 01       		.byte	0x1
 2016 0285 1101     		.2byte	0x111
 2017 0287 68000000 		.4byte	0x68
 2018 028b 71030000 		.4byte	.LLST10
 2019 028f 11       		.uleb128 0x11
 2020 0290 01020000 		.4byte	.LASF45
 2021 0294 01       		.byte	0x1
 2022 0295 1101     		.2byte	0x111
 2023 0297 1D010000 		.4byte	0x11d
 2024 029b 9D030000 		.4byte	.LLST11
 2025 029f 12       		.uleb128 0x12
 2026 02a0 C6030000 		.4byte	.LASF46
 2027 02a4 01       		.byte	0x1
 2028 02a5 1501     		.2byte	0x115
 2029 02a7 68000000 		.4byte	0x68
 2030 02ab E8030000 		.4byte	.LLST12
 2031 02af 12       		.uleb128 0x12
 2032 02b0 87030000 		.4byte	.LASF47
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 51


 2033 02b4 01       		.byte	0x1
 2034 02b5 1601     		.2byte	0x116
 2035 02b7 68000000 		.4byte	0x68
 2036 02bb 33040000 		.4byte	.LLST13
 2037 02bf 12       		.uleb128 0x12
 2038 02c0 F3020000 		.4byte	.LASF48
 2039 02c4 01       		.byte	0x1
 2040 02c5 1701     		.2byte	0x117
 2041 02c7 84000000 		.4byte	0x84
 2042 02cb 7E040000 		.4byte	.LLST14
 2043 02cf 12       		.uleb128 0x12
 2044 02d0 15030000 		.4byte	.LASF49
 2045 02d4 01       		.byte	0x1
 2046 02d5 1801     		.2byte	0x118
 2047 02d7 68000000 		.4byte	0x68
 2048 02db F6040000 		.4byte	.LLST15
 2049 02df 12       		.uleb128 0x12
 2050 02e0 E0050000 		.4byte	.LASF50
 2051 02e4 01       		.byte	0x1
 2052 02e5 1901     		.2byte	0x119
 2053 02e7 68000000 		.4byte	0x68
 2054 02eb 61050000 		.4byte	.LLST16
 2055 02ef 13       		.uleb128 0x13
 2056 02f0 00000000 		.4byte	.Ldebug_ranges0+0
 2057 02f4 14       		.uleb128 0x14
 2058 02f5 6900     		.ascii	"i\000"
 2059 02f7 01       		.byte	0x1
 2060 02f8 1B01     		.2byte	0x11b
 2061 02fa 68000000 		.4byte	0x68
 2062 02fe CC050000 		.4byte	.LLST17
 2063 0302 0E       		.uleb128 0xe
 2064 0303 16000000 		.4byte	.LBB5
 2065 0307 E0010000 		.4byte	.LBE5-.LBB5
 2066 030b 12       		.uleb128 0x12
 2067 030c B8020000 		.4byte	.LASF51
 2068 0310 01       		.byte	0x1
 2069 0311 1C01     		.2byte	0x11c
 2070 0313 68000000 		.4byte	0x68
 2071 0317 EB050000 		.4byte	.LLST18
 2072 031b 12       		.uleb128 0x12
 2073 031c AC020000 		.4byte	.LASF52
 2074 0320 01       		.byte	0x1
 2075 0321 1D01     		.2byte	0x11d
 2076 0323 68000000 		.4byte	0x68
 2077 0327 8E060000 		.4byte	.LLST19
 2078 032b 12       		.uleb128 0x12
 2079 032c 2A010000 		.4byte	.LASF35
 2080 0330 01       		.byte	0x1
 2081 0331 3801     		.2byte	0x138
 2082 0333 68000000 		.4byte	0x68
 2083 0337 12070000 		.4byte	.LLST20
 2084 033b 12       		.uleb128 0x12
 2085 033c F8020000 		.4byte	.LASF36
 2086 0340 01       		.byte	0x1
 2087 0341 3901     		.2byte	0x139
 2088 0343 68000000 		.4byte	0x68
 2089 0347 25070000 		.4byte	.LLST21
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 52


 2090 034b 00       		.byte	0
 2091 034c 00       		.byte	0
 2092 034d 00       		.byte	0
 2093 034e 15       		.uleb128 0x15
 2094 034f 53030000 		.4byte	.LASF54
 2095 0353 01       		.byte	0x1
 2096 0354 B901     		.2byte	0x1b9
 2097 0356 00000000 		.4byte	.LFB67
 2098 035a 10000000 		.4byte	.LFE67-.LFB67
 2099 035e 01       		.uleb128 0x1
 2100 035f 9C       		.byte	0x9c
 2101 0360 89030000 		.4byte	0x389
 2102 0364 16       		.uleb128 0x16
 2103 0365 08000000 		.4byte	.LVL120
 2104 0369 37090000 		.4byte	0x937
 2105 036d 78030000 		.4byte	0x378
 2106 0371 17       		.uleb128 0x17
 2107 0372 01       		.uleb128 0x1
 2108 0373 50       		.byte	0x50
 2109 0374 02       		.uleb128 0x2
 2110 0375 08       		.byte	0x8
 2111 0376 32       		.byte	0x32
 2112 0377 00       		.byte	0
 2113 0378 18       		.uleb128 0x18
 2114 0379 0E000000 		.4byte	.LVL121
 2115 037d 42090000 		.4byte	0x942
 2116 0381 17       		.uleb128 0x17
 2117 0382 01       		.uleb128 0x1
 2118 0383 50       		.byte	0x50
 2119 0384 02       		.uleb128 0x2
 2120 0385 08       		.byte	0x8
 2121 0386 32       		.byte	0x32
 2122 0387 00       		.byte	0
 2123 0388 00       		.byte	0
 2124 0389 15       		.uleb128 0x15
 2125 038a 7B020000 		.4byte	.LASF55
 2126 038e 01       		.byte	0x1
 2127 038f BE01     		.2byte	0x1be
 2128 0391 00000000 		.4byte	.LFB68
 2129 0395 40000000 		.4byte	.LFE68-.LFB68
 2130 0399 01       		.uleb128 0x1
 2131 039a 9C       		.byte	0x9c
 2132 039b 07040000 		.4byte	0x407
 2133 039f 16       		.uleb128 0x16
 2134 03a0 08000000 		.4byte	.LVL122
 2135 03a4 37090000 		.4byte	0x937
 2136 03a8 B3030000 		.4byte	0x3b3
 2137 03ac 17       		.uleb128 0x17
 2138 03ad 01       		.uleb128 0x1
 2139 03ae 50       		.byte	0x50
 2140 03af 02       		.uleb128 0x2
 2141 03b0 08       		.byte	0x8
 2142 03b1 44       		.byte	0x44
 2143 03b2 00       		.byte	0
 2144 03b3 16       		.uleb128 0x16
 2145 03b4 0E000000 		.4byte	.LVL123
 2146 03b8 42090000 		.4byte	0x942
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 53


 2147 03bc C7030000 		.4byte	0x3c7
 2148 03c0 17       		.uleb128 0x17
 2149 03c1 01       		.uleb128 0x1
 2150 03c2 50       		.byte	0x50
 2151 03c3 02       		.uleb128 0x2
 2152 03c4 08       		.byte	0x8
 2153 03c5 21       		.byte	0x21
 2154 03c6 00       		.byte	0
 2155 03c7 0B       		.uleb128 0xb
 2156 03c8 12000000 		.4byte	.LVL124
 2157 03cc 4D090000 		.4byte	0x94d
 2158 03d0 0B       		.uleb128 0xb
 2159 03d1 1A000000 		.4byte	.LVL125
 2160 03d5 58090000 		.4byte	0x958
 2161 03d9 0B       		.uleb128 0xb
 2162 03da 22000000 		.4byte	.LVL126
 2163 03de 58090000 		.4byte	0x958
 2164 03e2 16       		.uleb128 0x16
 2165 03e3 32000000 		.4byte	.LVL127
 2166 03e7 37090000 		.4byte	0x937
 2167 03eb F6030000 		.4byte	0x3f6
 2168 03ef 17       		.uleb128 0x17
 2169 03f0 01       		.uleb128 0x1
 2170 03f1 50       		.byte	0x50
 2171 03f2 02       		.uleb128 0x2
 2172 03f3 08       		.byte	0x8
 2173 03f4 41       		.byte	0x41
 2174 03f5 00       		.byte	0
 2175 03f6 18       		.uleb128 0x18
 2176 03f7 38000000 		.4byte	.LVL128
 2177 03fb 42090000 		.4byte	0x942
 2178 03ff 17       		.uleb128 0x17
 2179 0400 01       		.uleb128 0x1
 2180 0401 50       		.byte	0x50
 2181 0402 02       		.uleb128 0x2
 2182 0403 08       		.byte	0x8
 2183 0404 42       		.byte	0x42
 2184 0405 00       		.byte	0
 2185 0406 00       		.byte	0
 2186 0407 15       		.uleb128 0x15
 2187 0408 0D060000 		.4byte	.LASF56
 2188 040c 01       		.byte	0x1
 2189 040d CE01     		.2byte	0x1ce
 2190 040f 00000000 		.4byte	.LFB69
 2191 0413 40000000 		.4byte	.LFE69-.LFB69
 2192 0417 01       		.uleb128 0x1
 2193 0418 9C       		.byte	0x9c
 2194 0419 85040000 		.4byte	0x485
 2195 041d 16       		.uleb128 0x16
 2196 041e 08000000 		.4byte	.LVL129
 2197 0422 37090000 		.4byte	0x937
 2198 0426 31040000 		.4byte	0x431
 2199 042a 17       		.uleb128 0x17
 2200 042b 01       		.uleb128 0x1
 2201 042c 50       		.byte	0x50
 2202 042d 02       		.uleb128 0x2
 2203 042e 08       		.byte	0x8
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 54


 2204 042f 21       		.byte	0x21
 2205 0430 00       		.byte	0
 2206 0431 16       		.uleb128 0x16
 2207 0432 0E000000 		.4byte	.LVL130
 2208 0436 42090000 		.4byte	0x942
 2209 043a 45040000 		.4byte	0x445
 2210 043e 17       		.uleb128 0x17
 2211 043f 01       		.uleb128 0x1
 2212 0440 50       		.byte	0x50
 2213 0441 02       		.uleb128 0x2
 2214 0442 08       		.byte	0x8
 2215 0443 44       		.byte	0x44
 2216 0444 00       		.byte	0
 2217 0445 0B       		.uleb128 0xb
 2218 0446 12000000 		.4byte	.LVL131
 2219 044a 63090000 		.4byte	0x963
 2220 044e 0B       		.uleb128 0xb
 2221 044f 1A000000 		.4byte	.LVL132
 2222 0453 58090000 		.4byte	0x958
 2223 0457 0B       		.uleb128 0xb
 2224 0458 22000000 		.4byte	.LVL133
 2225 045c 58090000 		.4byte	0x958
 2226 0460 16       		.uleb128 0x16
 2227 0461 32000000 		.4byte	.LVL134
 2228 0465 37090000 		.4byte	0x937
 2229 0469 74040000 		.4byte	0x474
 2230 046d 17       		.uleb128 0x17
 2231 046e 01       		.uleb128 0x1
 2232 046f 50       		.byte	0x50
 2233 0470 02       		.uleb128 0x2
 2234 0471 08       		.byte	0x8
 2235 0472 41       		.byte	0x41
 2236 0473 00       		.byte	0
 2237 0474 18       		.uleb128 0x18
 2238 0475 38000000 		.4byte	.LVL135
 2239 0479 42090000 		.4byte	0x942
 2240 047d 17       		.uleb128 0x17
 2241 047e 01       		.uleb128 0x1
 2242 047f 50       		.byte	0x50
 2243 0480 02       		.uleb128 0x2
 2244 0481 08       		.byte	0x8
 2245 0482 42       		.byte	0x42
 2246 0483 00       		.byte	0
 2247 0484 00       		.byte	0
 2248 0485 15       		.uleb128 0x15
 2249 0486 58030000 		.4byte	.LASF57
 2250 048a 01       		.byte	0x1
 2251 048b DD01     		.2byte	0x1dd
 2252 048d 00000000 		.4byte	.LFB70
 2253 0491 10000000 		.4byte	.LFE70-.LFB70
 2254 0495 01       		.uleb128 0x1
 2255 0496 9C       		.byte	0x9c
 2256 0497 BE040000 		.4byte	0x4be
 2257 049b 16       		.uleb128 0x16
 2258 049c 08000000 		.4byte	.LVL136
 2259 04a0 37090000 		.4byte	0x937
 2260 04a4 AE040000 		.4byte	0x4ae
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 55


 2261 04a8 17       		.uleb128 0x17
 2262 04a9 01       		.uleb128 0x1
 2263 04aa 50       		.byte	0x50
 2264 04ab 01       		.uleb128 0x1
 2265 04ac 4E       		.byte	0x4e
 2266 04ad 00       		.byte	0
 2267 04ae 18       		.uleb128 0x18
 2268 04af 0E000000 		.4byte	.LVL137
 2269 04b3 42090000 		.4byte	0x942
 2270 04b7 17       		.uleb128 0x17
 2271 04b8 01       		.uleb128 0x1
 2272 04b9 50       		.byte	0x50
 2273 04ba 01       		.uleb128 0x1
 2274 04bb 4E       		.byte	0x4e
 2275 04bc 00       		.byte	0
 2276 04bd 00       		.byte	0
 2277 04be 19       		.uleb128 0x19
 2278 04bf EF000000 		.4byte	.LASF58
 2279 04c3 01       		.byte	0x1
 2280 04c4 E201     		.2byte	0x1e2
 2281 04c6 00000000 		.4byte	.LFB71
 2282 04ca 98000000 		.4byte	.LFE71-.LFB71
 2283 04ce 01       		.uleb128 0x1
 2284 04cf 9C       		.byte	0x9c
 2285 04d0 5F050000 		.4byte	0x55f
 2286 04d4 11       		.uleb128 0x11
 2287 04d5 4A030000 		.4byte	.LASF19
 2288 04d9 01       		.byte	0x1
 2289 04da E201     		.2byte	0x1e2
 2290 04dc 68000000 		.4byte	0x68
 2291 04e0 38070000 		.4byte	.LLST22
 2292 04e4 16       		.uleb128 0x16
 2293 04e5 0A000000 		.4byte	.LVL140
 2294 04e9 6E090000 		.4byte	0x96e
 2295 04ed F7040000 		.4byte	0x4f7
 2296 04f1 17       		.uleb128 0x17
 2297 04f2 01       		.uleb128 0x1
 2298 04f3 50       		.byte	0x50
 2299 04f4 01       		.uleb128 0x1
 2300 04f5 30       		.byte	0x30
 2301 04f6 00       		.byte	0
 2302 04f7 0B       		.uleb128 0xb
 2303 04f8 1C000000 		.4byte	.LVL141
 2304 04fc 79090000 		.4byte	0x979
 2305 0500 0B       		.uleb128 0xb
 2306 0501 24000000 		.4byte	.LVL142
 2307 0505 42090000 		.4byte	0x942
 2308 0509 0B       		.uleb128 0xb
 2309 050a 32000000 		.4byte	.LVL143
 2310 050e 84090000 		.4byte	0x984
 2311 0512 0B       		.uleb128 0xb
 2312 0513 3A000000 		.4byte	.LVL144
 2313 0517 37090000 		.4byte	0x937
 2314 051b 16       		.uleb128 0x16
 2315 051c 4A000000 		.4byte	.LVL145
 2316 0520 37090000 		.4byte	0x937
 2317 0524 2F050000 		.4byte	0x52f
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 56


 2318 0528 17       		.uleb128 0x17
 2319 0529 01       		.uleb128 0x1
 2320 052a 50       		.byte	0x50
 2321 052b 02       		.uleb128 0x2
 2322 052c 08       		.byte	0x8
 2323 052d 44       		.byte	0x44
 2324 052e 00       		.byte	0
 2325 052f 16       		.uleb128 0x16
 2326 0530 50000000 		.4byte	.LVL146
 2327 0534 42090000 		.4byte	0x942
 2328 0538 43050000 		.4byte	0x543
 2329 053c 17       		.uleb128 0x17
 2330 053d 01       		.uleb128 0x1
 2331 053e 50       		.byte	0x50
 2332 053f 02       		.uleb128 0x2
 2333 0540 08       		.byte	0x8
 2334 0541 45       		.byte	0x45
 2335 0542 00       		.byte	0
 2336 0543 0B       		.uleb128 0xb
 2337 0544 56000000 		.4byte	.LVL147
 2338 0548 85040000 		.4byte	0x485
 2339 054c 0B       		.uleb128 0xb
 2340 054d 5A000000 		.4byte	.LVL148
 2341 0551 8F090000 		.4byte	0x98f
 2342 0555 0B       		.uleb128 0xb
 2343 0556 86000000 		.4byte	.LVL153
 2344 055a 4E030000 		.4byte	0x34e
 2345 055e 00       		.byte	0
 2346 055f 15       		.uleb128 0x15
 2347 0560 00000000 		.4byte	.LASF59
 2348 0564 01       		.byte	0x1
 2349 0565 F801     		.2byte	0x1f8
 2350 0567 00000000 		.4byte	.LFB72
 2351 056b 58000000 		.4byte	.LFE72-.LFB72
 2352 056f 01       		.uleb128 0x1
 2353 0570 9C       		.byte	0x9c
 2354 0571 CB050000 		.4byte	0x5cb
 2355 0575 0B       		.uleb128 0xb
 2356 0576 12000000 		.4byte	.LVL155
 2357 057a 79090000 		.4byte	0x979
 2358 057e 0B       		.uleb128 0xb
 2359 057f 1A000000 		.4byte	.LVL156
 2360 0583 42090000 		.4byte	0x942
 2361 0587 0B       		.uleb128 0xb
 2362 0588 28000000 		.4byte	.LVL157
 2363 058c 84090000 		.4byte	0x984
 2364 0590 0B       		.uleb128 0xb
 2365 0591 30000000 		.4byte	.LVL158
 2366 0595 37090000 		.4byte	0x937
 2367 0599 16       		.uleb128 0x16
 2368 059a 40000000 		.4byte	.LVL159
 2369 059e 37090000 		.4byte	0x937
 2370 05a2 AD050000 		.4byte	0x5ad
 2371 05a6 17       		.uleb128 0x17
 2372 05a7 01       		.uleb128 0x1
 2373 05a8 50       		.byte	0x50
 2374 05a9 02       		.uleb128 0x2
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 57


 2375 05aa 08       		.byte	0x8
 2376 05ab 44       		.byte	0x44
 2377 05ac 00       		.byte	0
 2378 05ad 16       		.uleb128 0x16
 2379 05ae 46000000 		.4byte	.LVL160
 2380 05b2 42090000 		.4byte	0x942
 2381 05b6 C1050000 		.4byte	0x5c1
 2382 05ba 17       		.uleb128 0x17
 2383 05bb 01       		.uleb128 0x1
 2384 05bc 50       		.byte	0x50
 2385 05bd 02       		.uleb128 0x2
 2386 05be 08       		.byte	0x8
 2387 05bf 45       		.byte	0x45
 2388 05c0 00       		.byte	0
 2389 05c1 0B       		.uleb128 0xb
 2390 05c2 4C000000 		.4byte	.LVL161
 2391 05c6 85040000 		.4byte	0x485
 2392 05ca 00       		.byte	0
 2393 05cb 1A       		.uleb128 0x1a
 2394 05cc A7000000 		.4byte	.LASF111
 2395 05d0 01       		.byte	0x1
 2396 05d1 0A02     		.2byte	0x20a
 2397 05d3 68000000 		.4byte	0x68
 2398 05d7 00000000 		.4byte	.LFB73
 2399 05db CC000000 		.4byte	.LFE73-.LFB73
 2400 05df 01       		.uleb128 0x1
 2401 05e0 9C       		.byte	0x9c
 2402 05e1 26070000 		.4byte	0x726
 2403 05e5 1B       		.uleb128 0x1b
 2404 05e6 4E000000 		.4byte	.LBB7
 2405 05ea 6A000000 		.4byte	.LBE7-.LBB7
 2406 05ee 52060000 		.4byte	0x652
 2407 05f2 14       		.uleb128 0x14
 2408 05f3 6900     		.ascii	"i\000"
 2409 05f5 01       		.byte	0x1
 2410 05f6 3802     		.2byte	0x238
 2411 05f8 68000000 		.4byte	0x68
 2412 05fc 64070000 		.4byte	.LLST23
 2413 0600 0B       		.uleb128 0xb
 2414 0601 60000000 		.4byte	.LVL179
 2415 0605 BE040000 		.4byte	0x4be
 2416 0609 0B       		.uleb128 0xb
 2417 060a 70000000 		.4byte	.LVL180
 2418 060e BE040000 		.4byte	0x4be
 2419 0612 0B       		.uleb128 0xb
 2420 0613 82000000 		.4byte	.LVL181
 2421 0617 5F050000 		.4byte	0x55f
 2422 061b 0B       		.uleb128 0xb
 2423 061c 86000000 		.4byte	.LVL182
 2424 0620 63090000 		.4byte	0x963
 2425 0624 0B       		.uleb128 0xb
 2426 0625 8E000000 		.4byte	.LVL183
 2427 0629 07040000 		.4byte	0x407
 2428 062d 0B       		.uleb128 0xb
 2429 062e 9A000000 		.4byte	.LVL184
 2430 0632 5F050000 		.4byte	0x55f
 2431 0636 0B       		.uleb128 0xb
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 58


 2432 0637 9E000000 		.4byte	.LVL185
 2433 063b 4D090000 		.4byte	0x94d
 2434 063f 0B       		.uleb128 0xb
 2435 0640 A6000000 		.4byte	.LVL186
 2436 0644 89030000 		.4byte	0x389
 2437 0648 0B       		.uleb128 0xb
 2438 0649 B0000000 		.4byte	.LVL187
 2439 064d 4E030000 		.4byte	0x34e
 2440 0651 00       		.byte	0
 2441 0652 0B       		.uleb128 0xb
 2442 0653 08000000 		.4byte	.LVL162
 2443 0657 9A090000 		.4byte	0x99a
 2444 065b 16       		.uleb128 0x16
 2445 065c 0E000000 		.4byte	.LVL163
 2446 0660 A5090000 		.4byte	0x9a5
 2447 0664 72060000 		.4byte	0x672
 2448 0668 17       		.uleb128 0x17
 2449 0669 01       		.uleb128 0x1
 2450 066a 50       		.byte	0x50
 2451 066b 05       		.uleb128 0x5
 2452 066c 03       		.byte	0x3
 2453 066d 00000000 		.4byte	isr_1_handler
 2454 0671 00       		.byte	0
 2455 0672 0B       		.uleb128 0xb
 2456 0673 12000000 		.4byte	.LVL164
 2457 0677 B0090000 		.4byte	0x9b0
 2458 067b 0B       		.uleb128 0xb
 2459 067c 16000000 		.4byte	.LVL165
 2460 0680 BB090000 		.4byte	0x9bb
 2461 0684 0B       		.uleb128 0xb
 2462 0685 1A000000 		.4byte	.LVL166
 2463 0689 C6090000 		.4byte	0x9c6
 2464 068d 0B       		.uleb128 0xb
 2465 068e 1E000000 		.4byte	.LVL167
 2466 0692 D1090000 		.4byte	0x9d1
 2467 0696 0B       		.uleb128 0xb
 2468 0697 22000000 		.4byte	.LVL168
 2469 069b DC090000 		.4byte	0x9dc
 2470 069f 0B       		.uleb128 0xb
 2471 06a0 26000000 		.4byte	.LVL169
 2472 06a4 E7090000 		.4byte	0x9e7
 2473 06a8 0B       		.uleb128 0xb
 2474 06a9 2A000000 		.4byte	.LVL170
 2475 06ad F2090000 		.4byte	0x9f2
 2476 06b1 16       		.uleb128 0x16
 2477 06b2 30000000 		.4byte	.LVL171
 2478 06b6 FD090000 		.4byte	0x9fd
 2479 06ba C5060000 		.4byte	0x6c5
 2480 06be 17       		.uleb128 0x17
 2481 06bf 01       		.uleb128 0x1
 2482 06c0 50       		.byte	0x50
 2483 06c1 02       		.uleb128 0x2
 2484 06c2 08       		.byte	0x8
 2485 06c3 64       		.byte	0x64
 2486 06c4 00       		.byte	0
 2487 06c5 16       		.uleb128 0x16
 2488 06c6 36000000 		.4byte	.LVL172
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 59


 2489 06ca 080A0000 		.4byte	0xa08
 2490 06ce D9060000 		.4byte	0x6d9
 2491 06d2 17       		.uleb128 0x17
 2492 06d3 01       		.uleb128 0x1
 2493 06d4 50       		.byte	0x50
 2494 06d5 02       		.uleb128 0x2
 2495 06d6 08       		.byte	0x8
 2496 06d7 64       		.byte	0x64
 2497 06d8 00       		.byte	0
 2498 06d9 16       		.uleb128 0x16
 2499 06da 3C000000 		.4byte	.LVL173
 2500 06de 37090000 		.4byte	0x937
 2501 06e2 ED060000 		.4byte	0x6ed
 2502 06e6 17       		.uleb128 0x17
 2503 06e7 01       		.uleb128 0x1
 2504 06e8 50       		.byte	0x50
 2505 06e9 02       		.uleb128 0x2
 2506 06ea 08       		.byte	0x8
 2507 06eb 32       		.byte	0x32
 2508 06ec 00       		.byte	0
 2509 06ed 16       		.uleb128 0x16
 2510 06ee 42000000 		.4byte	.LVL174
 2511 06f2 42090000 		.4byte	0x942
 2512 06f6 01070000 		.4byte	0x701
 2513 06fa 17       		.uleb128 0x17
 2514 06fb 01       		.uleb128 0x1
 2515 06fc 50       		.byte	0x50
 2516 06fd 02       		.uleb128 0x2
 2517 06fe 08       		.byte	0x8
 2518 06ff 32       		.byte	0x32
 2519 0700 00       		.byte	0
 2520 0701 0B       		.uleb128 0xb
 2521 0702 46000000 		.4byte	.LVL175
 2522 0706 130A0000 		.4byte	0xa13
 2523 070a 0B       		.uleb128 0xb
 2524 070b 4A000000 		.4byte	.LVL176
 2525 070f 1E0A0000 		.4byte	0xa1e
 2526 0713 0B       		.uleb128 0xb
 2527 0714 4E000000 		.4byte	.LVL177
 2528 0718 9C010000 		.4byte	0x19c
 2529 071c 0B       		.uleb128 0xb
 2530 071d BC000000 		.4byte	.LVL189
 2531 0721 4E030000 		.4byte	0x34e
 2532 0725 00       		.byte	0
 2533 0726 1C       		.uleb128 0x1c
 2534 0727 0C040000 		.4byte	.LASF60
 2535 072b 05       		.byte	0x5
 2536 072c 1207     		.2byte	0x712
 2537 072e 32070000 		.4byte	0x732
 2538 0732 1D       		.uleb128 0x1d
 2539 0733 8B000000 		.4byte	0x8b
 2540 0737 1E       		.uleb128 0x1e
 2541 0738 43505200 		.ascii	"CPR\000"
 2542 073c 01       		.byte	0x1
 2543 073d 27       		.byte	0x27
 2544 073e AE000000 		.4byte	0xae
 2545 0742 05       		.uleb128 0x5
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 60


 2546 0743 03       		.byte	0x3
 2547 0744 00000000 		.4byte	CPR
 2548 0748 1F       		.uleb128 0x1f
 2549 0749 5E000000 		.4byte	.LASF61
 2550 074d 01       		.byte	0x1
 2551 074e 28       		.byte	0x28
 2552 074f BA000000 		.4byte	0xba
 2553 0753 05       		.uleb128 0x5
 2554 0754 03       		.byte	0x3
 2555 0755 00000000 		.4byte	wheelCircumference_cm
 2556 0759 1F       		.uleb128 0x1f
 2557 075a 72030000 		.4byte	.LASF62
 2558 075e 01       		.byte	0x1
 2559 075f 29       		.byte	0x29
 2560 0760 C1000000 		.4byte	0xc1
 2561 0764 05       		.uleb128 0x5
 2562 0765 03       		.byte	0x3
 2563 0766 00000000 		.4byte	timeInterval_s
 2564 076a 1F       		.uleb128 0x1f
 2565 076b 1B050000 		.4byte	.LASF63
 2566 076f 01       		.byte	0x1
 2567 0770 2A       		.byte	0x2a
 2568 0771 68000000 		.4byte	0x68
 2569 0775 05       		.uleb128 0x5
 2570 0776 03       		.byte	0x3
 2571 0777 00000000 		.4byte	path_length
 2572 077b 1F       		.uleb128 0x1f
 2573 077c 53020000 		.4byte	.LASF64
 2574 0780 01       		.byte	0x1
 2575 0781 2B       		.byte	0x2b
 2576 0782 68000000 		.4byte	0x68
 2577 0786 05       		.uleb128 0x5
 2578 0787 03       		.byte	0x3
 2579 0788 00000000 		.4byte	counter
 2580 078c 1F       		.uleb128 0x1f
 2581 078d 30040000 		.4byte	.LASF65
 2582 0791 01       		.byte	0x1
 2583 0792 35       		.byte	0x35
 2584 0793 A2000000 		.4byte	0xa2
 2585 0797 05       		.uleb128 0x5
 2586 0798 03       		.byte	0x3
 2587 0799 00000000 		.4byte	count
 2588 079d 1F       		.uleb128 0x1f
 2589 079e 26040000 		.4byte	.LASF66
 2590 07a2 01       		.byte	0x1
 2591 07a3 36       		.byte	0x36
 2592 07a4 AE070000 		.4byte	0x7ae
 2593 07a8 05       		.uleb128 0x5
 2594 07a9 03       		.byte	0x3
 2595 07aa 00000000 		.4byte	isTurning
 2596 07ae 02       		.uleb128 0x2
 2597 07af 01       		.byte	0x1
 2598 07b0 02       		.byte	0x2
 2599 07b1 81030000 		.4byte	.LASF67
 2600 07b5 1F       		.uleb128 0x1f
 2601 07b6 FF020000 		.4byte	.LASF68
 2602 07ba 01       		.byte	0x1
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 61


 2603 07bb 38       		.byte	0x38
 2604 07bc 96000000 		.4byte	0x96
 2605 07c0 05       		.uleb128 0x5
 2606 07c1 03       		.byte	0x3
 2607 07c2 00000000 		.4byte	comp0_sum
 2608 07c6 1F       		.uleb128 0x1f
 2609 07c7 54000000 		.4byte	.LASF69
 2610 07cb 01       		.byte	0x1
 2611 07cc 39       		.byte	0x39
 2612 07cd 96000000 		.4byte	0x96
 2613 07d1 05       		.uleb128 0x5
 2614 07d2 03       		.byte	0x3
 2615 07d3 00000000 		.4byte	comp1_sum
 2616 07d7 1F       		.uleb128 0x1f
 2617 07d8 60030000 		.4byte	.LASF70
 2618 07dc 01       		.byte	0x1
 2619 07dd 3A       		.byte	0x3a
 2620 07de 96000000 		.4byte	0x96
 2621 07e2 05       		.uleb128 0x5
 2622 07e3 03       		.byte	0x3
 2623 07e4 00000000 		.4byte	comp2_sum
 2624 07e8 1F       		.uleb128 0x1f
 2625 07e9 DB020000 		.4byte	.LASF71
 2626 07ed 01       		.byte	0x1
 2627 07ee 3B       		.byte	0x3b
 2628 07ef 96000000 		.4byte	0x96
 2629 07f3 05       		.uleb128 0x5
 2630 07f4 03       		.byte	0x3
 2631 07f5 00000000 		.4byte	comp3_sum
 2632 07f9 20       		.uleb128 0x20
 2633 07fa 68000000 		.4byte	0x68
 2634 07fe 0F080000 		.4byte	0x80f
 2635 0802 21       		.uleb128 0x21
 2636 0803 7D000000 		.4byte	0x7d
 2637 0807 18       		.byte	0x18
 2638 0808 21       		.uleb128 0x21
 2639 0809 7D000000 		.4byte	0x7d
 2640 080d 01       		.byte	0x1
 2641 080e 00       		.byte	0
 2642 080f 1F       		.uleb128 0x1f
 2643 0810 5B020000 		.4byte	.LASF72
 2644 0814 01       		.byte	0x1
 2645 0815 3D       		.byte	0x3d
 2646 0816 F9070000 		.4byte	0x7f9
 2647 081a 05       		.uleb128 0x5
 2648 081b 03       		.byte	0x3
 2649 081c 00000000 		.4byte	path_coordinates
 2650 0820 20       		.uleb128 0x20
 2651 0821 ED000000 		.4byte	0xed
 2652 0825 30080000 		.4byte	0x830
 2653 0829 21       		.uleb128 0x21
 2654 082a 7D000000 		.4byte	0x7d
 2655 082e 09       		.byte	0x9
 2656 082f 00       		.byte	0
 2657 0830 1F       		.uleb128 0x1f
 2658 0831 CC040000 		.4byte	.LASF73
 2659 0835 01       		.byte	0x1
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 62


 2660 0836 45       		.byte	0x45
 2661 0837 20080000 		.4byte	0x820
 2662 083b 05       		.uleb128 0x5
 2663 083c 03       		.byte	0x3
 2664 083d 00000000 		.4byte	path
 2665 0841 1F       		.uleb128 0x1f
 2666 0842 D1040000 		.4byte	.LASF74
 2667 0846 01       		.byte	0x1
 2668 0847 4D       		.byte	0x4d
 2669 0848 20080000 		.4byte	0x820
 2670 084c 05       		.uleb128 0x5
 2671 084d 03       		.byte	0x3
 2672 084e 00000000 		.4byte	moveCountArray
 2673 0852 1F       		.uleb128 0x1f
 2674 0853 30000000 		.4byte	.LASF75
 2675 0857 01       		.byte	0x1
 2676 0858 5D       		.byte	0x5d
 2677 0859 4D010000 		.4byte	0x14d
 2678 085d 05       		.uleb128 0x5
 2679 085e 03       		.byte	0x3
 2680 085f 00000000 		.4byte	current_state
 2681 0863 1F       		.uleb128 0x1f
 2682 0864 7D000000 		.4byte	.LASF76
 2683 0868 01       		.byte	0x1
 2684 0869 61       		.byte	0x61
 2685 086a 68000000 		.4byte	0x68
 2686 086e 05       		.uleb128 0x5
 2687 086f 03       		.byte	0x3
 2688 0870 00000000 		.4byte	currentX
 2689 0874 1F       		.uleb128 0x1f
 2690 0875 86000000 		.4byte	.LASF77
 2691 0879 01       		.byte	0x1
 2692 087a 62       		.byte	0x62
 2693 087b 68000000 		.4byte	0x68
 2694 087f 05       		.uleb128 0x5
 2695 0880 03       		.byte	0x3
 2696 0881 00000000 		.4byte	currentY
 2697 0885 1F       		.uleb128 0x1f
 2698 0886 87030000 		.4byte	.LASF47
 2699 088a 01       		.byte	0x1
 2700 088b 63       		.byte	0x63
 2701 088c 68000000 		.4byte	0x68
 2702 0890 05       		.uleb128 0x5
 2703 0891 03       		.byte	0x3
 2704 0892 00000000 		.4byte	stepCount
 2705 0896 20       		.uleb128 0x20
 2706 0897 68000000 		.4byte	0x68
 2707 089b A6080000 		.4byte	0x8a6
 2708 089f 21       		.uleb128 0x21
 2709 08a0 7D000000 		.4byte	0x7d
 2710 08a4 01       		.byte	0x1
 2711 08a5 00       		.byte	0
 2712 08a6 1F       		.uleb128 0x1f
 2713 08a7 02050000 		.4byte	.LASF78
 2714 08ab 01       		.byte	0x1
 2715 08ac 64       		.byte	0x64
 2716 08ad 96080000 		.4byte	0x896
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 63


 2717 08b1 05       		.uleb128 0x5
 2718 08b2 03       		.byte	0x3
 2719 08b3 00000000 		.4byte	target
 2720 08b7 1F       		.uleb128 0x1f
 2721 08b8 C3000000 		.4byte	.LASF79
 2722 08bc 01       		.byte	0x1
 2723 08bd 65       		.byte	0x65
 2724 08be 68000000 		.4byte	0x68
 2725 08c2 05       		.uleb128 0x5
 2726 08c3 03       		.byte	0x3
 2727 08c4 00000000 		.4byte	position
 2728 08c8 20       		.uleb128 0x20
 2729 08c9 68000000 		.4byte	0x68
 2730 08cd DE080000 		.4byte	0x8de
 2731 08d1 21       		.uleb128 0x21
 2732 08d2 7D000000 		.4byte	0x7d
 2733 08d6 0E       		.byte	0xe
 2734 08d7 21       		.uleb128 0x21
 2735 08d8 7D000000 		.4byte	0x7d
 2736 08dc 01       		.byte	0x1
 2737 08dd 00       		.byte	0
 2738 08de 1F       		.uleb128 0x1f
 2739 08df B6030000 		.4byte	.LASF80
 2740 08e3 01       		.byte	0x1
 2741 08e4 66       		.byte	0x66
 2742 08e5 C8080000 		.4byte	0x8c8
 2743 08e9 05       		.uleb128 0x5
 2744 08ea 03       		.byte	0x3
 2745 08eb 00000000 		.4byte	pathCoordinates
 2746 08ef 1F       		.uleb128 0x1f
 2747 08f0 01020000 		.4byte	.LASF45
 2748 08f4 01       		.byte	0x1
 2749 08f5 78       		.byte	0x78
 2750 08f6 1D010000 		.4byte	0x11d
 2751 08fa 05       		.uleb128 0x5
 2752 08fb 03       		.byte	0x3
 2753 08fc 00000000 		.4byte	current_direction
 2754 0900 22       		.uleb128 0x22
 2755 0901 E0040000 		.4byte	.LASF81
 2756 0905 E0040000 		.4byte	.LASF81
 2757 0909 06       		.byte	0x6
 2758 090a 42       		.byte	0x42
 2759 090b 22       		.uleb128 0x22
 2760 090c 27050000 		.4byte	.LASF82
 2761 0910 27050000 		.4byte	.LASF82
 2762 0914 07       		.byte	0x7
 2763 0915 42       		.byte	0x42
 2764 0916 22       		.uleb128 0x22
 2765 0917 40050000 		.4byte	.LASF83
 2766 091b 40050000 		.4byte	.LASF83
 2767 091f 08       		.byte	0x8
 2768 0920 42       		.byte	0x42
 2769 0921 22       		.uleb128 0x22
 2770 0922 EF050000 		.4byte	.LASF84
 2771 0926 EF050000 		.4byte	.LASF84
 2772 092a 09       		.byte	0x9
 2773 092b 42       		.byte	0x42
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 64


 2774 092c 22       		.uleb128 0x22
 2775 092d FD000000 		.4byte	.LASF85
 2776 0931 FD000000 		.4byte	.LASF85
 2777 0935 0A       		.byte	0xa
 2778 0936 5E       		.byte	0x5e
 2779 0937 22       		.uleb128 0x22
 2780 0938 19020000 		.4byte	.LASF86
 2781 093c 19020000 		.4byte	.LASF86
 2782 0940 0B       		.byte	0xb
 2783 0941 C3       		.byte	0xc3
 2784 0942 22       		.uleb128 0x22
 2785 0943 65010000 		.4byte	.LASF87
 2786 0947 65010000 		.4byte	.LASF87
 2787 094b 0C       		.byte	0xc
 2788 094c C3       		.byte	0xc3
 2789 094d 22       		.uleb128 0x22
 2790 094e 01060000 		.4byte	.LASF88
 2791 0952 01060000 		.4byte	.LASF88
 2792 0956 0D       		.byte	0xd
 2793 0957 29       		.byte	0x29
 2794 0958 22       		.uleb128 0x22
 2795 0959 19040000 		.4byte	.LASF89
 2796 095d 19040000 		.4byte	.LASF89
 2797 0961 0E       		.byte	0xe
 2798 0962 29       		.byte	0x29
 2799 0963 22       		.uleb128 0x22
 2800 0964 89020000 		.4byte	.LASF90
 2801 0968 89020000 		.4byte	.LASF90
 2802 096c 0F       		.byte	0xf
 2803 096d 29       		.byte	0x29
 2804 096e 22       		.uleb128 0x22
 2805 096f 34030000 		.4byte	.LASF91
 2806 0973 34030000 		.4byte	.LASF91
 2807 0977 10       		.byte	0x10
 2808 0978 4F       		.byte	0x4f
 2809 0979 22       		.uleb128 0x22
 2810 097a 9D010000 		.4byte	.LASF92
 2811 097e 9D010000 		.4byte	.LASF92
 2812 0982 0C       		.byte	0xc
 2813 0983 C5       		.byte	0xc5
 2814 0984 22       		.uleb128 0x22
 2815 0985 53010000 		.4byte	.LASF93
 2816 0989 53010000 		.4byte	.LASF93
 2817 098d 0B       		.byte	0xb
 2818 098e C5       		.byte	0xc5
 2819 098f 22       		.uleb128 0x22
 2820 0990 3D010000 		.4byte	.LASF94
 2821 0994 3D010000 		.4byte	.LASF94
 2822 0998 10       		.byte	0x10
 2823 0999 4E       		.byte	0x4e
 2824 099a 22       		.uleb128 0x22
 2825 099b 91030000 		.4byte	.LASF95
 2826 099f 91030000 		.4byte	.LASF95
 2827 09a3 0A       		.byte	0xa
 2828 09a4 5A       		.byte	0x5a
 2829 09a5 22       		.uleb128 0x22
 2830 09a6 DB010000 		.4byte	.LASF96
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 65


 2831 09aa DB010000 		.4byte	.LASF96
 2832 09ae 11       		.byte	0x11
 2833 09af 18       		.byte	0x18
 2834 09b0 22       		.uleb128 0x22
 2835 09b1 CE020000 		.4byte	.LASF97
 2836 09b5 CE020000 		.4byte	.LASF97
 2837 09b9 06       		.byte	0x6
 2838 09ba 3F       		.byte	0x3f
 2839 09bb 22       		.uleb128 0x22
 2840 09bc 17060000 		.4byte	.LASF98
 2841 09c0 17060000 		.4byte	.LASF98
 2842 09c4 07       		.byte	0x7
 2843 09c5 3F       		.byte	0x3f
 2844 09c6 22       		.uleb128 0x22
 2845 09c7 F4010000 		.4byte	.LASF99
 2846 09cb F4010000 		.4byte	.LASF99
 2847 09cf 08       		.byte	0x8
 2848 09d0 3F       		.byte	0x3f
 2849 09d1 22       		.uleb128 0x22
 2850 09d2 B6000000 		.4byte	.LASF100
 2851 09d6 B6000000 		.4byte	.LASF100
 2852 09da 09       		.byte	0x9
 2853 09db 3F       		.byte	0x3f
 2854 09dc 22       		.uleb128 0x22
 2855 09dd BC040000 		.4byte	.LASF101
 2856 09e1 BC040000 		.4byte	.LASF101
 2857 09e5 12       		.byte	0x12
 2858 09e6 27       		.byte	0x27
 2859 09e7 22       		.uleb128 0x22
 2860 09e8 24000000 		.4byte	.LASF102
 2861 09ec 24000000 		.4byte	.LASF102
 2862 09f0 0B       		.byte	0xb
 2863 09f1 92       		.byte	0x92
 2864 09f2 22       		.uleb128 0x22
 2865 09f3 09030000 		.4byte	.LASF103
 2866 09f7 09030000 		.4byte	.LASF103
 2867 09fb 0C       		.byte	0xc
 2868 09fc 92       		.byte	0x92
 2869 09fd 22       		.uleb128 0x22
 2870 09fe A4030000 		.4byte	.LASF104
 2871 0a02 A4030000 		.4byte	.LASF104
 2872 0a06 0B       		.byte	0xb
 2873 0a07 BE       		.byte	0xbe
 2874 0a08 22       		.uleb128 0x22
 2875 0a09 09050000 		.4byte	.LASF105
 2876 0a0d 09050000 		.4byte	.LASF105
 2877 0a11 0C       		.byte	0xc
 2878 0a12 BE       		.byte	0xbe
 2879 0a13 22       		.uleb128 0x22
 2880 0a14 FB030000 		.4byte	.LASF106
 2881 0a18 FB030000 		.4byte	.LASF106
 2882 0a1c 10       		.byte	0x10
 2883 0a1d 48       		.byte	0x48
 2884 0a1e 22       		.uleb128 0x22
 2885 0a1f 7E010000 		.4byte	.LASF107
 2886 0a23 7E010000 		.4byte	.LASF107
 2887 0a27 13       		.byte	0x13
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 66


 2888 0a28 48       		.byte	0x48
 2889 0a29 00       		.byte	0
 2890              		.section	.debug_abbrev,"",%progbits
 2891              	.Ldebug_abbrev0:
 2892 0000 01       		.uleb128 0x1
 2893 0001 11       		.uleb128 0x11
 2894 0002 01       		.byte	0x1
 2895 0003 25       		.uleb128 0x25
 2896 0004 0E       		.uleb128 0xe
 2897 0005 13       		.uleb128 0x13
 2898 0006 0B       		.uleb128 0xb
 2899 0007 03       		.uleb128 0x3
 2900 0008 0E       		.uleb128 0xe
 2901 0009 1B       		.uleb128 0x1b
 2902 000a 0E       		.uleb128 0xe
 2903 000b 55       		.uleb128 0x55
 2904 000c 17       		.uleb128 0x17
 2905 000d 11       		.uleb128 0x11
 2906 000e 01       		.uleb128 0x1
 2907 000f 10       		.uleb128 0x10
 2908 0010 17       		.uleb128 0x17
 2909 0011 00       		.byte	0
 2910 0012 00       		.byte	0
 2911 0013 02       		.uleb128 0x2
 2912 0014 24       		.uleb128 0x24
 2913 0015 00       		.byte	0
 2914 0016 0B       		.uleb128 0xb
 2915 0017 0B       		.uleb128 0xb
 2916 0018 3E       		.uleb128 0x3e
 2917 0019 0B       		.uleb128 0xb
 2918 001a 03       		.uleb128 0x3
 2919 001b 0E       		.uleb128 0xe
 2920 001c 00       		.byte	0
 2921 001d 00       		.byte	0
 2922 001e 03       		.uleb128 0x3
 2923 001f 16       		.uleb128 0x16
 2924 0020 00       		.byte	0
 2925 0021 03       		.uleb128 0x3
 2926 0022 0E       		.uleb128 0xe
 2927 0023 3A       		.uleb128 0x3a
 2928 0024 0B       		.uleb128 0xb
 2929 0025 3B       		.uleb128 0x3b
 2930 0026 0B       		.uleb128 0xb
 2931 0027 49       		.uleb128 0x49
 2932 0028 13       		.uleb128 0x13
 2933 0029 00       		.byte	0
 2934 002a 00       		.byte	0
 2935 002b 04       		.uleb128 0x4
 2936 002c 24       		.uleb128 0x24
 2937 002d 00       		.byte	0
 2938 002e 0B       		.uleb128 0xb
 2939 002f 0B       		.uleb128 0xb
 2940 0030 3E       		.uleb128 0x3e
 2941 0031 0B       		.uleb128 0xb
 2942 0032 03       		.uleb128 0x3
 2943 0033 08       		.uleb128 0x8
 2944 0034 00       		.byte	0
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 67


 2945 0035 00       		.byte	0
 2946 0036 05       		.uleb128 0x5
 2947 0037 16       		.uleb128 0x16
 2948 0038 00       		.byte	0
 2949 0039 03       		.uleb128 0x3
 2950 003a 0E       		.uleb128 0xe
 2951 003b 3A       		.uleb128 0x3a
 2952 003c 0B       		.uleb128 0xb
 2953 003d 3B       		.uleb128 0x3b
 2954 003e 05       		.uleb128 0x5
 2955 003f 49       		.uleb128 0x49
 2956 0040 13       		.uleb128 0x13
 2957 0041 00       		.byte	0
 2958 0042 00       		.byte	0
 2959 0043 06       		.uleb128 0x6
 2960 0044 13       		.uleb128 0x13
 2961 0045 01       		.byte	0x1
 2962 0046 03       		.uleb128 0x3
 2963 0047 0E       		.uleb128 0xe
 2964 0048 0B       		.uleb128 0xb
 2965 0049 0B       		.uleb128 0xb
 2966 004a 3A       		.uleb128 0x3a
 2967 004b 0B       		.uleb128 0xb
 2968 004c 3B       		.uleb128 0x3b
 2969 004d 0B       		.uleb128 0xb
 2970 004e 01       		.uleb128 0x1
 2971 004f 13       		.uleb128 0x13
 2972 0050 00       		.byte	0
 2973 0051 00       		.byte	0
 2974 0052 07       		.uleb128 0x7
 2975 0053 0D       		.uleb128 0xd
 2976 0054 00       		.byte	0
 2977 0055 03       		.uleb128 0x3
 2978 0056 0E       		.uleb128 0xe
 2979 0057 3A       		.uleb128 0x3a
 2980 0058 0B       		.uleb128 0xb
 2981 0059 3B       		.uleb128 0x3b
 2982 005a 0B       		.uleb128 0xb
 2983 005b 49       		.uleb128 0x49
 2984 005c 13       		.uleb128 0x13
 2985 005d 38       		.uleb128 0x38
 2986 005e 0B       		.uleb128 0xb
 2987 005f 00       		.byte	0
 2988 0060 00       		.byte	0
 2989 0061 08       		.uleb128 0x8
 2990 0062 04       		.uleb128 0x4
 2991 0063 01       		.byte	0x1
 2992 0064 0B       		.uleb128 0xb
 2993 0065 0B       		.uleb128 0xb
 2994 0066 49       		.uleb128 0x49
 2995 0067 13       		.uleb128 0x13
 2996 0068 3A       		.uleb128 0x3a
 2997 0069 0B       		.uleb128 0xb
 2998 006a 3B       		.uleb128 0x3b
 2999 006b 0B       		.uleb128 0xb
 3000 006c 01       		.uleb128 0x1
 3001 006d 13       		.uleb128 0x13
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 68


 3002 006e 00       		.byte	0
 3003 006f 00       		.byte	0
 3004 0070 09       		.uleb128 0x9
 3005 0071 28       		.uleb128 0x28
 3006 0072 00       		.byte	0
 3007 0073 03       		.uleb128 0x3
 3008 0074 0E       		.uleb128 0xe
 3009 0075 1C       		.uleb128 0x1c
 3010 0076 0B       		.uleb128 0xb
 3011 0077 00       		.byte	0
 3012 0078 00       		.byte	0
 3013 0079 0A       		.uleb128 0xa
 3014 007a 2E       		.uleb128 0x2e
 3015 007b 01       		.byte	0x1
 3016 007c 3F       		.uleb128 0x3f
 3017 007d 19       		.uleb128 0x19
 3018 007e 03       		.uleb128 0x3
 3019 007f 0E       		.uleb128 0xe
 3020 0080 3A       		.uleb128 0x3a
 3021 0081 0B       		.uleb128 0xb
 3022 0082 3B       		.uleb128 0x3b
 3023 0083 05       		.uleb128 0x5
 3024 0084 27       		.uleb128 0x27
 3025 0085 19       		.uleb128 0x19
 3026 0086 11       		.uleb128 0x11
 3027 0087 01       		.uleb128 0x1
 3028 0088 12       		.uleb128 0x12
 3029 0089 06       		.uleb128 0x6
 3030 008a 40       		.uleb128 0x40
 3031 008b 18       		.uleb128 0x18
 3032 008c 9742     		.uleb128 0x2117
 3033 008e 19       		.uleb128 0x19
 3034 008f 01       		.uleb128 0x1
 3035 0090 13       		.uleb128 0x13
 3036 0091 00       		.byte	0
 3037 0092 00       		.byte	0
 3038 0093 0B       		.uleb128 0xb
 3039 0094 898201   		.uleb128 0x4109
 3040 0097 00       		.byte	0
 3041 0098 11       		.uleb128 0x11
 3042 0099 01       		.uleb128 0x1
 3043 009a 31       		.uleb128 0x31
 3044 009b 13       		.uleb128 0x13
 3045 009c 00       		.byte	0
 3046 009d 00       		.byte	0
 3047 009e 0C       		.uleb128 0xc
 3048 009f 2E       		.uleb128 0x2e
 3049 00a0 01       		.byte	0x1
 3050 00a1 3F       		.uleb128 0x3f
 3051 00a2 19       		.uleb128 0x19
 3052 00a3 03       		.uleb128 0x3
 3053 00a4 0E       		.uleb128 0xe
 3054 00a5 3A       		.uleb128 0x3a
 3055 00a6 0B       		.uleb128 0xb
 3056 00a7 3B       		.uleb128 0x3b
 3057 00a8 0B       		.uleb128 0xb
 3058 00a9 11       		.uleb128 0x11
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 69


 3059 00aa 01       		.uleb128 0x1
 3060 00ab 12       		.uleb128 0x12
 3061 00ac 06       		.uleb128 0x6
 3062 00ad 40       		.uleb128 0x40
 3063 00ae 18       		.uleb128 0x18
 3064 00af 9742     		.uleb128 0x2117
 3065 00b1 19       		.uleb128 0x19
 3066 00b2 01       		.uleb128 0x1
 3067 00b3 13       		.uleb128 0x13
 3068 00b4 00       		.byte	0
 3069 00b5 00       		.byte	0
 3070 00b6 0D       		.uleb128 0xd
 3071 00b7 34       		.uleb128 0x34
 3072 00b8 00       		.byte	0
 3073 00b9 03       		.uleb128 0x3
 3074 00ba 0E       		.uleb128 0xe
 3075 00bb 3A       		.uleb128 0x3a
 3076 00bc 0B       		.uleb128 0xb
 3077 00bd 3B       		.uleb128 0x3b
 3078 00be 0B       		.uleb128 0xb
 3079 00bf 49       		.uleb128 0x49
 3080 00c0 13       		.uleb128 0x13
 3081 00c1 1C       		.uleb128 0x1c
 3082 00c2 0B       		.uleb128 0xb
 3083 00c3 00       		.byte	0
 3084 00c4 00       		.byte	0
 3085 00c5 0E       		.uleb128 0xe
 3086 00c6 0B       		.uleb128 0xb
 3087 00c7 01       		.byte	0x1
 3088 00c8 11       		.uleb128 0x11
 3089 00c9 01       		.uleb128 0x1
 3090 00ca 12       		.uleb128 0x12
 3091 00cb 06       		.uleb128 0x6
 3092 00cc 00       		.byte	0
 3093 00cd 00       		.byte	0
 3094 00ce 0F       		.uleb128 0xf
 3095 00cf 34       		.uleb128 0x34
 3096 00d0 00       		.byte	0
 3097 00d1 03       		.uleb128 0x3
 3098 00d2 08       		.uleb128 0x8
 3099 00d3 3A       		.uleb128 0x3a
 3100 00d4 0B       		.uleb128 0xb
 3101 00d5 3B       		.uleb128 0x3b
 3102 00d6 0B       		.uleb128 0xb
 3103 00d7 49       		.uleb128 0x49
 3104 00d8 13       		.uleb128 0x13
 3105 00d9 02       		.uleb128 0x2
 3106 00da 17       		.uleb128 0x17
 3107 00db 00       		.byte	0
 3108 00dc 00       		.byte	0
 3109 00dd 10       		.uleb128 0x10
 3110 00de 34       		.uleb128 0x34
 3111 00df 00       		.byte	0
 3112 00e0 03       		.uleb128 0x3
 3113 00e1 0E       		.uleb128 0xe
 3114 00e2 3A       		.uleb128 0x3a
 3115 00e3 0B       		.uleb128 0xb
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 70


 3116 00e4 3B       		.uleb128 0x3b
 3117 00e5 0B       		.uleb128 0xb
 3118 00e6 49       		.uleb128 0x49
 3119 00e7 13       		.uleb128 0x13
 3120 00e8 02       		.uleb128 0x2
 3121 00e9 17       		.uleb128 0x17
 3122 00ea 00       		.byte	0
 3123 00eb 00       		.byte	0
 3124 00ec 11       		.uleb128 0x11
 3125 00ed 05       		.uleb128 0x5
 3126 00ee 00       		.byte	0
 3127 00ef 03       		.uleb128 0x3
 3128 00f0 0E       		.uleb128 0xe
 3129 00f1 3A       		.uleb128 0x3a
 3130 00f2 0B       		.uleb128 0xb
 3131 00f3 3B       		.uleb128 0x3b
 3132 00f4 05       		.uleb128 0x5
 3133 00f5 49       		.uleb128 0x49
 3134 00f6 13       		.uleb128 0x13
 3135 00f7 02       		.uleb128 0x2
 3136 00f8 17       		.uleb128 0x17
 3137 00f9 00       		.byte	0
 3138 00fa 00       		.byte	0
 3139 00fb 12       		.uleb128 0x12
 3140 00fc 34       		.uleb128 0x34
 3141 00fd 00       		.byte	0
 3142 00fe 03       		.uleb128 0x3
 3143 00ff 0E       		.uleb128 0xe
 3144 0100 3A       		.uleb128 0x3a
 3145 0101 0B       		.uleb128 0xb
 3146 0102 3B       		.uleb128 0x3b
 3147 0103 05       		.uleb128 0x5
 3148 0104 49       		.uleb128 0x49
 3149 0105 13       		.uleb128 0x13
 3150 0106 02       		.uleb128 0x2
 3151 0107 17       		.uleb128 0x17
 3152 0108 00       		.byte	0
 3153 0109 00       		.byte	0
 3154 010a 13       		.uleb128 0x13
 3155 010b 0B       		.uleb128 0xb
 3156 010c 01       		.byte	0x1
 3157 010d 55       		.uleb128 0x55
 3158 010e 17       		.uleb128 0x17
 3159 010f 00       		.byte	0
 3160 0110 00       		.byte	0
 3161 0111 14       		.uleb128 0x14
 3162 0112 34       		.uleb128 0x34
 3163 0113 00       		.byte	0
 3164 0114 03       		.uleb128 0x3
 3165 0115 08       		.uleb128 0x8
 3166 0116 3A       		.uleb128 0x3a
 3167 0117 0B       		.uleb128 0xb
 3168 0118 3B       		.uleb128 0x3b
 3169 0119 05       		.uleb128 0x5
 3170 011a 49       		.uleb128 0x49
 3171 011b 13       		.uleb128 0x13
 3172 011c 02       		.uleb128 0x2
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 71


 3173 011d 17       		.uleb128 0x17
 3174 011e 00       		.byte	0
 3175 011f 00       		.byte	0
 3176 0120 15       		.uleb128 0x15
 3177 0121 2E       		.uleb128 0x2e
 3178 0122 01       		.byte	0x1
 3179 0123 3F       		.uleb128 0x3f
 3180 0124 19       		.uleb128 0x19
 3181 0125 03       		.uleb128 0x3
 3182 0126 0E       		.uleb128 0xe
 3183 0127 3A       		.uleb128 0x3a
 3184 0128 0B       		.uleb128 0xb
 3185 0129 3B       		.uleb128 0x3b
 3186 012a 05       		.uleb128 0x5
 3187 012b 11       		.uleb128 0x11
 3188 012c 01       		.uleb128 0x1
 3189 012d 12       		.uleb128 0x12
 3190 012e 06       		.uleb128 0x6
 3191 012f 40       		.uleb128 0x40
 3192 0130 18       		.uleb128 0x18
 3193 0131 9742     		.uleb128 0x2117
 3194 0133 19       		.uleb128 0x19
 3195 0134 01       		.uleb128 0x1
 3196 0135 13       		.uleb128 0x13
 3197 0136 00       		.byte	0
 3198 0137 00       		.byte	0
 3199 0138 16       		.uleb128 0x16
 3200 0139 898201   		.uleb128 0x4109
 3201 013c 01       		.byte	0x1
 3202 013d 11       		.uleb128 0x11
 3203 013e 01       		.uleb128 0x1
 3204 013f 31       		.uleb128 0x31
 3205 0140 13       		.uleb128 0x13
 3206 0141 01       		.uleb128 0x1
 3207 0142 13       		.uleb128 0x13
 3208 0143 00       		.byte	0
 3209 0144 00       		.byte	0
 3210 0145 17       		.uleb128 0x17
 3211 0146 8A8201   		.uleb128 0x410a
 3212 0149 00       		.byte	0
 3213 014a 02       		.uleb128 0x2
 3214 014b 18       		.uleb128 0x18
 3215 014c 9142     		.uleb128 0x2111
 3216 014e 18       		.uleb128 0x18
 3217 014f 00       		.byte	0
 3218 0150 00       		.byte	0
 3219 0151 18       		.uleb128 0x18
 3220 0152 898201   		.uleb128 0x4109
 3221 0155 01       		.byte	0x1
 3222 0156 11       		.uleb128 0x11
 3223 0157 01       		.uleb128 0x1
 3224 0158 31       		.uleb128 0x31
 3225 0159 13       		.uleb128 0x13
 3226 015a 00       		.byte	0
 3227 015b 00       		.byte	0
 3228 015c 19       		.uleb128 0x19
 3229 015d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 72


 3230 015e 01       		.byte	0x1
 3231 015f 3F       		.uleb128 0x3f
 3232 0160 19       		.uleb128 0x19
 3233 0161 03       		.uleb128 0x3
 3234 0162 0E       		.uleb128 0xe
 3235 0163 3A       		.uleb128 0x3a
 3236 0164 0B       		.uleb128 0xb
 3237 0165 3B       		.uleb128 0x3b
 3238 0166 05       		.uleb128 0x5
 3239 0167 27       		.uleb128 0x27
 3240 0168 19       		.uleb128 0x19
 3241 0169 11       		.uleb128 0x11
 3242 016a 01       		.uleb128 0x1
 3243 016b 12       		.uleb128 0x12
 3244 016c 06       		.uleb128 0x6
 3245 016d 40       		.uleb128 0x40
 3246 016e 18       		.uleb128 0x18
 3247 016f 9642     		.uleb128 0x2116
 3248 0171 19       		.uleb128 0x19
 3249 0172 01       		.uleb128 0x1
 3250 0173 13       		.uleb128 0x13
 3251 0174 00       		.byte	0
 3252 0175 00       		.byte	0
 3253 0176 1A       		.uleb128 0x1a
 3254 0177 2E       		.uleb128 0x2e
 3255 0178 01       		.byte	0x1
 3256 0179 3F       		.uleb128 0x3f
 3257 017a 19       		.uleb128 0x19
 3258 017b 03       		.uleb128 0x3
 3259 017c 0E       		.uleb128 0xe
 3260 017d 3A       		.uleb128 0x3a
 3261 017e 0B       		.uleb128 0xb
 3262 017f 3B       		.uleb128 0x3b
 3263 0180 05       		.uleb128 0x5
 3264 0181 27       		.uleb128 0x27
 3265 0182 19       		.uleb128 0x19
 3266 0183 49       		.uleb128 0x49
 3267 0184 13       		.uleb128 0x13
 3268 0185 8701     		.uleb128 0x87
 3269 0187 19       		.uleb128 0x19
 3270 0188 11       		.uleb128 0x11
 3271 0189 01       		.uleb128 0x1
 3272 018a 12       		.uleb128 0x12
 3273 018b 06       		.uleb128 0x6
 3274 018c 40       		.uleb128 0x40
 3275 018d 18       		.uleb128 0x18
 3276 018e 9742     		.uleb128 0x2117
 3277 0190 19       		.uleb128 0x19
 3278 0191 01       		.uleb128 0x1
 3279 0192 13       		.uleb128 0x13
 3280 0193 00       		.byte	0
 3281 0194 00       		.byte	0
 3282 0195 1B       		.uleb128 0x1b
 3283 0196 0B       		.uleb128 0xb
 3284 0197 01       		.byte	0x1
 3285 0198 11       		.uleb128 0x11
 3286 0199 01       		.uleb128 0x1
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 73


 3287 019a 12       		.uleb128 0x12
 3288 019b 06       		.uleb128 0x6
 3289 019c 01       		.uleb128 0x1
 3290 019d 13       		.uleb128 0x13
 3291 019e 00       		.byte	0
 3292 019f 00       		.byte	0
 3293 01a0 1C       		.uleb128 0x1c
 3294 01a1 34       		.uleb128 0x34
 3295 01a2 00       		.byte	0
 3296 01a3 03       		.uleb128 0x3
 3297 01a4 0E       		.uleb128 0xe
 3298 01a5 3A       		.uleb128 0x3a
 3299 01a6 0B       		.uleb128 0xb
 3300 01a7 3B       		.uleb128 0x3b
 3301 01a8 05       		.uleb128 0x5
 3302 01a9 49       		.uleb128 0x49
 3303 01aa 13       		.uleb128 0x13
 3304 01ab 3F       		.uleb128 0x3f
 3305 01ac 19       		.uleb128 0x19
 3306 01ad 3C       		.uleb128 0x3c
 3307 01ae 19       		.uleb128 0x19
 3308 01af 00       		.byte	0
 3309 01b0 00       		.byte	0
 3310 01b1 1D       		.uleb128 0x1d
 3311 01b2 35       		.uleb128 0x35
 3312 01b3 00       		.byte	0
 3313 01b4 49       		.uleb128 0x49
 3314 01b5 13       		.uleb128 0x13
 3315 01b6 00       		.byte	0
 3316 01b7 00       		.byte	0
 3317 01b8 1E       		.uleb128 0x1e
 3318 01b9 34       		.uleb128 0x34
 3319 01ba 00       		.byte	0
 3320 01bb 03       		.uleb128 0x3
 3321 01bc 08       		.uleb128 0x8
 3322 01bd 3A       		.uleb128 0x3a
 3323 01be 0B       		.uleb128 0xb
 3324 01bf 3B       		.uleb128 0x3b
 3325 01c0 0B       		.uleb128 0xb
 3326 01c1 49       		.uleb128 0x49
 3327 01c2 13       		.uleb128 0x13
 3328 01c3 3F       		.uleb128 0x3f
 3329 01c4 19       		.uleb128 0x19
 3330 01c5 02       		.uleb128 0x2
 3331 01c6 18       		.uleb128 0x18
 3332 01c7 00       		.byte	0
 3333 01c8 00       		.byte	0
 3334 01c9 1F       		.uleb128 0x1f
 3335 01ca 34       		.uleb128 0x34
 3336 01cb 00       		.byte	0
 3337 01cc 03       		.uleb128 0x3
 3338 01cd 0E       		.uleb128 0xe
 3339 01ce 3A       		.uleb128 0x3a
 3340 01cf 0B       		.uleb128 0xb
 3341 01d0 3B       		.uleb128 0x3b
 3342 01d1 0B       		.uleb128 0xb
 3343 01d2 49       		.uleb128 0x49
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 74


 3344 01d3 13       		.uleb128 0x13
 3345 01d4 3F       		.uleb128 0x3f
 3346 01d5 19       		.uleb128 0x19
 3347 01d6 02       		.uleb128 0x2
 3348 01d7 18       		.uleb128 0x18
 3349 01d8 00       		.byte	0
 3350 01d9 00       		.byte	0
 3351 01da 20       		.uleb128 0x20
 3352 01db 01       		.uleb128 0x1
 3353 01dc 01       		.byte	0x1
 3354 01dd 49       		.uleb128 0x49
 3355 01de 13       		.uleb128 0x13
 3356 01df 01       		.uleb128 0x1
 3357 01e0 13       		.uleb128 0x13
 3358 01e1 00       		.byte	0
 3359 01e2 00       		.byte	0
 3360 01e3 21       		.uleb128 0x21
 3361 01e4 21       		.uleb128 0x21
 3362 01e5 00       		.byte	0
 3363 01e6 49       		.uleb128 0x49
 3364 01e7 13       		.uleb128 0x13
 3365 01e8 2F       		.uleb128 0x2f
 3366 01e9 0B       		.uleb128 0xb
 3367 01ea 00       		.byte	0
 3368 01eb 00       		.byte	0
 3369 01ec 22       		.uleb128 0x22
 3370 01ed 2E       		.uleb128 0x2e
 3371 01ee 00       		.byte	0
 3372 01ef 3F       		.uleb128 0x3f
 3373 01f0 19       		.uleb128 0x19
 3374 01f1 3C       		.uleb128 0x3c
 3375 01f2 19       		.uleb128 0x19
 3376 01f3 6E       		.uleb128 0x6e
 3377 01f4 0E       		.uleb128 0xe
 3378 01f5 03       		.uleb128 0x3
 3379 01f6 0E       		.uleb128 0xe
 3380 01f7 3A       		.uleb128 0x3a
 3381 01f8 0B       		.uleb128 0xb
 3382 01f9 3B       		.uleb128 0x3b
 3383 01fa 0B       		.uleb128 0xb
 3384 01fb 00       		.byte	0
 3385 01fc 00       		.byte	0
 3386 01fd 00       		.byte	0
 3387              		.section	.debug_loc,"",%progbits
 3388              	.Ldebug_loc0:
 3389              	.LLST0:
 3390 0000 02000000 		.4byte	.LVL5
 3391 0004 06000000 		.4byte	.LVL6
 3392 0008 0200     		.2byte	0x2
 3393 000a 30       		.byte	0x30
 3394 000b 9F       		.byte	0x9f
 3395 000c 06000000 		.4byte	.LVL6
 3396 0010 30000000 		.4byte	.LVL14
 3397 0014 0100     		.2byte	0x1
 3398 0016 52       		.byte	0x52
 3399 0017 4A000000 		.4byte	.LVL16
 3400 001b D8020000 		.4byte	.LFE64
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 75


 3401 001f 0100     		.2byte	0x1
 3402 0021 52       		.byte	0x52
 3403 0022 00000000 		.4byte	0
 3404 0026 00000000 		.4byte	0
 3405              	.LLST1:
 3406 002a 0C000000 		.4byte	.LVL7
 3407 002e 3A000000 		.4byte	.LVL15
 3408 0032 0100     		.2byte	0x1
 3409 0034 51       		.byte	0x51
 3410 0035 4A000000 		.4byte	.LVL16
 3411 0039 C4020000 		.4byte	.LVL50
 3412 003d 0100     		.2byte	0x1
 3413 003f 51       		.byte	0x51
 3414 0040 00000000 		.4byte	0
 3415 0044 00000000 		.4byte	0
 3416              	.LLST2:
 3417 0048 12000000 		.4byte	.LVL8
 3418 004c C4020000 		.4byte	.LVL50
 3419 0050 0100     		.2byte	0x1
 3420 0052 50       		.byte	0x50
 3421 0053 00000000 		.4byte	0
 3422 0057 00000000 		.4byte	0
 3423              	.LLST3:
 3424 005b 16000000 		.4byte	.LVL9
 3425 005f 6C000000 		.4byte	.LVL19
 3426 0063 0100     		.2byte	0x1
 3427 0065 54       		.byte	0x54
 3428 0066 6C000000 		.4byte	.LVL19
 3429 006a 7A000000 		.4byte	.LVL20
 3430 006e 0600     		.2byte	0x6
 3431 0070 71       		.byte	0x71
 3432 0071 00       		.sleb128 0
 3433 0072 75       		.byte	0x75
 3434 0073 00       		.sleb128 0
 3435 0074 1C       		.byte	0x1c
 3436 0075 9F       		.byte	0x9f
 3437 0076 7A000000 		.4byte	.LVL20
 3438 007a 8A000000 		.4byte	.LVL21
 3439 007e 0100     		.2byte	0x1
 3440 0080 54       		.byte	0x54
 3441 0081 8A000000 		.4byte	.LVL21
 3442 0085 8E000000 		.4byte	.LVL22
 3443 0089 0600     		.2byte	0x6
 3444 008b 71       		.byte	0x71
 3445 008c 00       		.sleb128 0
 3446 008d 75       		.byte	0x75
 3447 008e 00       		.sleb128 0
 3448 008f 1C       		.byte	0x1c
 3449 0090 9F       		.byte	0x9f
 3450 0091 8E000000 		.4byte	.LVL22
 3451 0095 B8000000 		.4byte	.LVL23
 3452 0099 0A00     		.2byte	0xa
 3453 009b 71       		.byte	0x71
 3454 009c 00       		.sleb128 0
 3455 009d 03       		.byte	0x3
 3456 009e 00000000 		.4byte	currentX
 3457 00a2 06       		.byte	0x6
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 76


 3458 00a3 1C       		.byte	0x1c
 3459 00a4 9F       		.byte	0x9f
 3460 00a5 B8000000 		.4byte	.LVL23
 3461 00a9 CE000000 		.4byte	.LVL24
 3462 00ad 0100     		.2byte	0x1
 3463 00af 54       		.byte	0x54
 3464 00b0 CE000000 		.4byte	.LVL24
 3465 00b4 D2000000 		.4byte	.LVL25
 3466 00b8 0600     		.2byte	0x6
 3467 00ba 71       		.byte	0x71
 3468 00bb 00       		.sleb128 0
 3469 00bc 75       		.byte	0x75
 3470 00bd 00       		.sleb128 0
 3471 00be 1C       		.byte	0x1c
 3472 00bf 9F       		.byte	0x9f
 3473 00c0 D2000000 		.4byte	.LVL25
 3474 00c4 FC000000 		.4byte	.LVL26
 3475 00c8 0A00     		.2byte	0xa
 3476 00ca 71       		.byte	0x71
 3477 00cb 00       		.sleb128 0
 3478 00cc 03       		.byte	0x3
 3479 00cd 00000000 		.4byte	currentX
 3480 00d1 06       		.byte	0x6
 3481 00d2 1C       		.byte	0x1c
 3482 00d3 9F       		.byte	0x9f
 3483 00d4 FC000000 		.4byte	.LVL26
 3484 00d8 06010000 		.4byte	.LVL27
 3485 00dc 0100     		.2byte	0x1
 3486 00de 54       		.byte	0x54
 3487 00df 06010000 		.4byte	.LVL27
 3488 00e3 14010000 		.4byte	.LVL28
 3489 00e7 0600     		.2byte	0x6
 3490 00e9 71       		.byte	0x71
 3491 00ea 00       		.sleb128 0
 3492 00eb 75       		.byte	0x75
 3493 00ec 00       		.sleb128 0
 3494 00ed 1C       		.byte	0x1c
 3495 00ee 9F       		.byte	0x9f
 3496 00ef 14010000 		.4byte	.LVL28
 3497 00f3 26010000 		.4byte	.LVL29
 3498 00f7 0100     		.2byte	0x1
 3499 00f9 54       		.byte	0x54
 3500 00fa 26010000 		.4byte	.LVL29
 3501 00fe 2A010000 		.4byte	.LVL30
 3502 0102 0600     		.2byte	0x6
 3503 0104 71       		.byte	0x71
 3504 0105 00       		.sleb128 0
 3505 0106 75       		.byte	0x75
 3506 0107 00       		.sleb128 0
 3507 0108 1C       		.byte	0x1c
 3508 0109 9F       		.byte	0x9f
 3509 010a 2A010000 		.4byte	.LVL30
 3510 010e 54010000 		.4byte	.LVL31
 3511 0112 0A00     		.2byte	0xa
 3512 0114 71       		.byte	0x71
 3513 0115 00       		.sleb128 0
 3514 0116 03       		.byte	0x3
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 77


 3515 0117 00000000 		.4byte	currentX
 3516 011b 06       		.byte	0x6
 3517 011c 1C       		.byte	0x1c
 3518 011d 9F       		.byte	0x9f
 3519 011e 54010000 		.4byte	.LVL31
 3520 0122 6A010000 		.4byte	.LVL32
 3521 0126 0100     		.2byte	0x1
 3522 0128 54       		.byte	0x54
 3523 0129 6A010000 		.4byte	.LVL32
 3524 012d 6E010000 		.4byte	.LVL33
 3525 0131 0600     		.2byte	0x6
 3526 0133 71       		.byte	0x71
 3527 0134 00       		.sleb128 0
 3528 0135 75       		.byte	0x75
 3529 0136 00       		.sleb128 0
 3530 0137 1C       		.byte	0x1c
 3531 0138 9F       		.byte	0x9f
 3532 0139 6E010000 		.4byte	.LVL33
 3533 013d 96010000 		.4byte	.LVL34
 3534 0141 0A00     		.2byte	0xa
 3535 0143 71       		.byte	0x71
 3536 0144 00       		.sleb128 0
 3537 0145 03       		.byte	0x3
 3538 0146 00000000 		.4byte	currentX
 3539 014a 06       		.byte	0x6
 3540 014b 1C       		.byte	0x1c
 3541 014c 9F       		.byte	0x9f
 3542 014d 96010000 		.4byte	.LVL34
 3543 0151 A2010000 		.4byte	.LVL35
 3544 0155 0100     		.2byte	0x1
 3545 0157 54       		.byte	0x54
 3546 0158 A2010000 		.4byte	.LVL35
 3547 015c B0010000 		.4byte	.LVL36
 3548 0160 0600     		.2byte	0x6
 3549 0162 71       		.byte	0x71
 3550 0163 00       		.sleb128 0
 3551 0164 75       		.byte	0x75
 3552 0165 00       		.sleb128 0
 3553 0166 1C       		.byte	0x1c
 3554 0167 9F       		.byte	0x9f
 3555 0168 B0010000 		.4byte	.LVL36
 3556 016c C0010000 		.4byte	.LVL37
 3557 0170 0100     		.2byte	0x1
 3558 0172 54       		.byte	0x54
 3559 0173 C0010000 		.4byte	.LVL37
 3560 0177 C4010000 		.4byte	.LVL38
 3561 017b 0600     		.2byte	0x6
 3562 017d 71       		.byte	0x71
 3563 017e 00       		.sleb128 0
 3564 017f 75       		.byte	0x75
 3565 0180 00       		.sleb128 0
 3566 0181 1C       		.byte	0x1c
 3567 0182 9F       		.byte	0x9f
 3568 0183 C4010000 		.4byte	.LVL38
 3569 0187 EE010000 		.4byte	.LVL39
 3570 018b 0A00     		.2byte	0xa
 3571 018d 71       		.byte	0x71
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 78


 3572 018e 00       		.sleb128 0
 3573 018f 03       		.byte	0x3
 3574 0190 00000000 		.4byte	currentX
 3575 0194 06       		.byte	0x6
 3576 0195 1C       		.byte	0x1c
 3577 0196 9F       		.byte	0x9f
 3578 0197 EE010000 		.4byte	.LVL39
 3579 019b 00020000 		.4byte	.LVL40
 3580 019f 0100     		.2byte	0x1
 3581 01a1 54       		.byte	0x54
 3582 01a2 00020000 		.4byte	.LVL40
 3583 01a6 04020000 		.4byte	.LVL41
 3584 01aa 0600     		.2byte	0x6
 3585 01ac 71       		.byte	0x71
 3586 01ad 00       		.sleb128 0
 3587 01ae 75       		.byte	0x75
 3588 01af 00       		.sleb128 0
 3589 01b0 1C       		.byte	0x1c
 3590 01b1 9F       		.byte	0x9f
 3591 01b2 04020000 		.4byte	.LVL41
 3592 01b6 2E020000 		.4byte	.LVL42
 3593 01ba 0A00     		.2byte	0xa
 3594 01bc 71       		.byte	0x71
 3595 01bd 00       		.sleb128 0
 3596 01be 03       		.byte	0x3
 3597 01bf 00000000 		.4byte	currentX
 3598 01c3 06       		.byte	0x6
 3599 01c4 1C       		.byte	0x1c
 3600 01c5 9F       		.byte	0x9f
 3601 01c6 2E020000 		.4byte	.LVL42
 3602 01ca 38020000 		.4byte	.LVL43
 3603 01ce 0100     		.2byte	0x1
 3604 01d0 54       		.byte	0x54
 3605 01d1 38020000 		.4byte	.LVL43
 3606 01d5 46020000 		.4byte	.LVL44
 3607 01d9 0600     		.2byte	0x6
 3608 01db 71       		.byte	0x71
 3609 01dc 00       		.sleb128 0
 3610 01dd 75       		.byte	0x75
 3611 01de 00       		.sleb128 0
 3612 01df 1C       		.byte	0x1c
 3613 01e0 9F       		.byte	0x9f
 3614 01e1 46020000 		.4byte	.LVL44
 3615 01e5 58020000 		.4byte	.LVL45
 3616 01e9 0100     		.2byte	0x1
 3617 01eb 54       		.byte	0x54
 3618 01ec 58020000 		.4byte	.LVL45
 3619 01f0 5C020000 		.4byte	.LVL46
 3620 01f4 0600     		.2byte	0x6
 3621 01f6 71       		.byte	0x71
 3622 01f7 00       		.sleb128 0
 3623 01f8 75       		.byte	0x75
 3624 01f9 00       		.sleb128 0
 3625 01fa 1C       		.byte	0x1c
 3626 01fb 9F       		.byte	0x9f
 3627 01fc 5C020000 		.4byte	.LVL46
 3628 0200 84020000 		.4byte	.LVL47
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 79


 3629 0204 0A00     		.2byte	0xa
 3630 0206 71       		.byte	0x71
 3631 0207 00       		.sleb128 0
 3632 0208 03       		.byte	0x3
 3633 0209 00000000 		.4byte	currentX
 3634 020d 06       		.byte	0x6
 3635 020e 1C       		.byte	0x1c
 3636 020f 9F       		.byte	0x9f
 3637 0210 84020000 		.4byte	.LVL47
 3638 0214 96020000 		.4byte	.LVL48
 3639 0218 0100     		.2byte	0x1
 3640 021a 54       		.byte	0x54
 3641 021b 96020000 		.4byte	.LVL48
 3642 021f 9A020000 		.4byte	.LVL49
 3643 0223 0600     		.2byte	0x6
 3644 0225 71       		.byte	0x71
 3645 0226 00       		.sleb128 0
 3646 0227 75       		.byte	0x75
 3647 0228 00       		.sleb128 0
 3648 0229 1C       		.byte	0x1c
 3649 022a 9F       		.byte	0x9f
 3650 022b 9A020000 		.4byte	.LVL49
 3651 022f C4020000 		.4byte	.LVL50
 3652 0233 0A00     		.2byte	0xa
 3653 0235 71       		.byte	0x71
 3654 0236 00       		.sleb128 0
 3655 0237 03       		.byte	0x3
 3656 0238 00000000 		.4byte	currentX
 3657 023c 06       		.byte	0x6
 3658 023d 1C       		.byte	0x1c
 3659 023e 9F       		.byte	0x9f
 3660 023f 00000000 		.4byte	0
 3661 0243 00000000 		.4byte	0
 3662              	.LLST4:
 3663 0247 1C000000 		.4byte	.LVL10
 3664 024b C4020000 		.4byte	.LVL50
 3665 024f 0100     		.2byte	0x1
 3666 0251 5E       		.byte	0x5e
 3667 0252 00000000 		.4byte	0
 3668 0256 00000000 		.4byte	0
 3669              	.LLST5:
 3670 025a 20000000 		.4byte	.LVL11
 3671 025e 5A000000 		.4byte	.LVL18
 3672 0262 0100     		.2byte	0x1
 3673 0264 57       		.byte	0x57
 3674 0265 5A000000 		.4byte	.LVL18
 3675 0269 C4020000 		.4byte	.LVL50
 3676 026d 0500     		.2byte	0x5
 3677 026f 03       		.byte	0x3
 3678 0270 00000000 		.4byte	target
 3679 0274 00000000 		.4byte	0
 3680 0278 00000000 		.4byte	0
 3681              	.LLST6:
 3682 027c 24000000 		.4byte	.LVL12
 3683 0280 2E000000 		.4byte	.LVL13
 3684 0284 0100     		.2byte	0x1
 3685 0286 53       		.byte	0x53
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 80


 3686 0287 2E000000 		.4byte	.LVL13
 3687 028b 4A000000 		.4byte	.LVL16
 3688 028f 0500     		.2byte	0x5
 3689 0291 03       		.byte	0x3
 3690 0292 04000000 		.4byte	target+4
 3691 0296 4A000000 		.4byte	.LVL16
 3692 029a 4C000000 		.4byte	.LVL17
 3693 029e 0100     		.2byte	0x1
 3694 02a0 53       		.byte	0x53
 3695 02a1 4C000000 		.4byte	.LVL17
 3696 02a5 C4020000 		.4byte	.LVL50
 3697 02a9 0500     		.2byte	0x5
 3698 02ab 03       		.byte	0x3
 3699 02ac 04000000 		.4byte	target+4
 3700 02b0 00000000 		.4byte	0
 3701 02b4 00000000 		.4byte	0
 3702              	.LLST7:
 3703 02b8 00000000 		.4byte	.LVL51
 3704 02bc 16000000 		.4byte	.LVL53
 3705 02c0 0100     		.2byte	0x1
 3706 02c2 50       		.byte	0x50
 3707 02c3 16000000 		.4byte	.LVL53
 3708 02c7 0C020000 		.4byte	.LFE65
 3709 02cb 0400     		.2byte	0x4
 3710 02cd F3       		.byte	0xf3
 3711 02ce 01       		.uleb128 0x1
 3712 02cf 50       		.byte	0x50
 3713 02d0 9F       		.byte	0x9f
 3714 02d1 00000000 		.4byte	0
 3715 02d5 00000000 		.4byte	0
 3716              	.LLST8:
 3717 02d9 00000000 		.4byte	.LVL51
 3718 02dd 16000000 		.4byte	.LVL53
 3719 02e1 0100     		.2byte	0x1
 3720 02e3 51       		.byte	0x51
 3721 02e4 16000000 		.4byte	.LVL53
 3722 02e8 0C020000 		.4byte	.LFE65
 3723 02ec 0400     		.2byte	0x4
 3724 02ee F3       		.byte	0xf3
 3725 02ef 01       		.uleb128 0x1
 3726 02f0 51       		.byte	0x51
 3727 02f1 9F       		.byte	0x9f
 3728 02f2 00000000 		.4byte	0
 3729 02f6 00000000 		.4byte	0
 3730              	.LLST9:
 3731 02fa 00000000 		.4byte	.LVL51
 3732 02fe 40000000 		.4byte	.LVL58
 3733 0302 0100     		.2byte	0x1
 3734 0304 52       		.byte	0x52
 3735 0305 40000000 		.4byte	.LVL58
 3736 0309 54000000 		.4byte	.LVL60
 3737 030d 0400     		.2byte	0x4
 3738 030f F3       		.byte	0xf3
 3739 0310 01       		.uleb128 0x1
 3740 0311 52       		.byte	0x52
 3741 0312 9F       		.byte	0x9f
 3742 0313 54000000 		.4byte	.LVL60
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 81


 3743 0317 5C000000 		.4byte	.LVL62
 3744 031b 0100     		.2byte	0x1
 3745 031d 52       		.byte	0x52
 3746 031e 5C000000 		.4byte	.LVL62
 3747 0322 70000000 		.4byte	.LVL64
 3748 0326 0400     		.2byte	0x4
 3749 0328 F3       		.byte	0xf3
 3750 0329 01       		.uleb128 0x1
 3751 032a 52       		.byte	0x52
 3752 032b 9F       		.byte	0x9f
 3753 032c 70000000 		.4byte	.LVL64
 3754 0330 78000000 		.4byte	.LVL66
 3755 0334 0100     		.2byte	0x1
 3756 0336 52       		.byte	0x52
 3757 0337 78000000 		.4byte	.LVL66
 3758 033b 8C000000 		.4byte	.LVL68
 3759 033f 0400     		.2byte	0x4
 3760 0341 F3       		.byte	0xf3
 3761 0342 01       		.uleb128 0x1
 3762 0343 52       		.byte	0x52
 3763 0344 9F       		.byte	0x9f
 3764 0345 8C000000 		.4byte	.LVL68
 3765 0349 94000000 		.4byte	.LVL70
 3766 034d 0100     		.2byte	0x1
 3767 034f 52       		.byte	0x52
 3768 0350 94000000 		.4byte	.LVL70
 3769 0354 A8000000 		.4byte	.LVL72
 3770 0358 0400     		.2byte	0x4
 3771 035a F3       		.byte	0xf3
 3772 035b 01       		.uleb128 0x1
 3773 035c 52       		.byte	0x52
 3774 035d 9F       		.byte	0x9f
 3775 035e A8000000 		.4byte	.LVL72
 3776 0362 0C020000 		.4byte	.LFE65
 3777 0366 0100     		.2byte	0x1
 3778 0368 52       		.byte	0x52
 3779 0369 00000000 		.4byte	0
 3780 036d 00000000 		.4byte	0
 3781              	.LLST10:
 3782 0371 00000000 		.4byte	.LVL51
 3783 0375 16000000 		.4byte	.LVL53
 3784 0379 0100     		.2byte	0x1
 3785 037b 53       		.byte	0x53
 3786 037c 16000000 		.4byte	.LVL53
 3787 0380 02020000 		.4byte	.LVL119
 3788 0384 0100     		.2byte	0x1
 3789 0386 58       		.byte	0x58
 3790 0387 02020000 		.4byte	.LVL119
 3791 038b 0C020000 		.4byte	.LFE65
 3792 038f 0400     		.2byte	0x4
 3793 0391 F3       		.byte	0xf3
 3794 0392 01       		.uleb128 0x1
 3795 0393 53       		.byte	0x53
 3796 0394 9F       		.byte	0x9f
 3797 0395 00000000 		.4byte	0
 3798 0399 00000000 		.4byte	0
 3799              	.LLST11:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 82


 3800 039d 00000000 		.4byte	.LVL51
 3801 03a1 16000000 		.4byte	.LVL53
 3802 03a5 0200     		.2byte	0x2
 3803 03a7 91       		.byte	0x91
 3804 03a8 00       		.sleb128 0
 3805 03a9 16000000 		.4byte	.LVL53
 3806 03ad EA000000 		.4byte	.LVL78
 3807 03b1 0100     		.2byte	0x1
 3808 03b3 57       		.byte	0x57
 3809 03b4 EC000000 		.4byte	.LVL79
 3810 03b8 38010000 		.4byte	.LVL89
 3811 03bc 0100     		.2byte	0x1
 3812 03be 57       		.byte	0x57
 3813 03bf 3A010000 		.4byte	.LVL90
 3814 03c3 88010000 		.4byte	.LVL100
 3815 03c7 0100     		.2byte	0x1
 3816 03c9 57       		.byte	0x57
 3817 03ca 8A010000 		.4byte	.LVL101
 3818 03ce D6010000 		.4byte	.LVL111
 3819 03d2 0100     		.2byte	0x1
 3820 03d4 57       		.byte	0x57
 3821 03d5 D8010000 		.4byte	.LVL112
 3822 03d9 02020000 		.4byte	.LVL119
 3823 03dd 0100     		.2byte	0x1
 3824 03df 57       		.byte	0x57
 3825 03e0 00000000 		.4byte	0
 3826 03e4 00000000 		.4byte	0
 3827              	.LLST12:
 3828 03e8 0A000000 		.4byte	.LVL52
 3829 03ec 16000000 		.4byte	.LVL53
 3830 03f0 0200     		.2byte	0x2
 3831 03f2 30       		.byte	0x30
 3832 03f3 9F       		.byte	0x9f
 3833 03f4 16000000 		.4byte	.LVL53
 3834 03f8 46000000 		.4byte	.LVL59
 3835 03fc 0100     		.2byte	0x1
 3836 03fe 5E       		.byte	0x5e
 3837 03ff 54000000 		.4byte	.LVL60
 3838 0403 62000000 		.4byte	.LVL63
 3839 0407 0100     		.2byte	0x1
 3840 0409 5E       		.byte	0x5e
 3841 040a 70000000 		.4byte	.LVL64
 3842 040e 7E000000 		.4byte	.LVL67
 3843 0412 0100     		.2byte	0x1
 3844 0414 5E       		.byte	0x5e
 3845 0415 8C000000 		.4byte	.LVL68
 3846 0419 9A000000 		.4byte	.LVL71
 3847 041d 0100     		.2byte	0x1
 3848 041f 5E       		.byte	0x5e
 3849 0420 A8000000 		.4byte	.LVL72
 3850 0424 0C020000 		.4byte	.LFE65
 3851 0428 0100     		.2byte	0x1
 3852 042a 5E       		.byte	0x5e
 3853 042b 00000000 		.4byte	0
 3854 042f 00000000 		.4byte	0
 3855              	.LLST13:
 3856 0433 0A000000 		.4byte	.LVL52
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 83


 3857 0437 16000000 		.4byte	.LVL53
 3858 043b 0200     		.2byte	0x2
 3859 043d 30       		.byte	0x30
 3860 043e 9F       		.byte	0x9f
 3861 043f 16000000 		.4byte	.LVL53
 3862 0443 3C000000 		.4byte	.LVL57
 3863 0447 0100     		.2byte	0x1
 3864 0449 5C       		.byte	0x5c
 3865 044a 54000000 		.4byte	.LVL60
 3866 044e 58000000 		.4byte	.LVL61
 3867 0452 0100     		.2byte	0x1
 3868 0454 5C       		.byte	0x5c
 3869 0455 70000000 		.4byte	.LVL64
 3870 0459 74000000 		.4byte	.LVL65
 3871 045d 0100     		.2byte	0x1
 3872 045f 5C       		.byte	0x5c
 3873 0460 8C000000 		.4byte	.LVL68
 3874 0464 90000000 		.4byte	.LVL69
 3875 0468 0100     		.2byte	0x1
 3876 046a 5C       		.byte	0x5c
 3877 046b A8000000 		.4byte	.LVL72
 3878 046f 0C020000 		.4byte	.LFE65
 3879 0473 0100     		.2byte	0x1
 3880 0475 5C       		.byte	0x5c
 3881 0476 00000000 		.4byte	0
 3882 047a 00000000 		.4byte	0
 3883              	.LLST14:
 3884 047e 0A000000 		.4byte	.LVL52
 3885 0482 16000000 		.4byte	.LVL53
 3886 0486 0300     		.2byte	0x3
 3887 0488 08       		.byte	0x8
 3888 0489 4E       		.byte	0x4e
 3889 048a 9F       		.byte	0x9f
 3890 048b 16000000 		.4byte	.LVL53
 3891 048f E8000000 		.4byte	.LVL77
 3892 0493 0100     		.2byte	0x1
 3893 0495 59       		.byte	0x59
 3894 0496 EC000000 		.4byte	.LVL79
 3895 049a F0000000 		.4byte	.LVL80
 3896 049e 0100     		.2byte	0x1
 3897 04a0 59       		.byte	0x59
 3898 04a1 F2000000 		.4byte	.LVL81
 3899 04a5 36010000 		.4byte	.LVL88
 3900 04a9 0100     		.2byte	0x1
 3901 04ab 59       		.byte	0x59
 3902 04ac 3A010000 		.4byte	.LVL90
 3903 04b0 3E010000 		.4byte	.LVL91
 3904 04b4 0100     		.2byte	0x1
 3905 04b6 59       		.byte	0x59
 3906 04b7 40010000 		.4byte	.LVL92
 3907 04bb 86010000 		.4byte	.LVL99
 3908 04bf 0100     		.2byte	0x1
 3909 04c1 59       		.byte	0x59
 3910 04c2 8A010000 		.4byte	.LVL101
 3911 04c6 8E010000 		.4byte	.LVL102
 3912 04ca 0100     		.2byte	0x1
 3913 04cc 59       		.byte	0x59
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 84


 3914 04cd 90010000 		.4byte	.LVL103
 3915 04d1 D4010000 		.4byte	.LVL110
 3916 04d5 0100     		.2byte	0x1
 3917 04d7 59       		.byte	0x59
 3918 04d8 D8010000 		.4byte	.LVL112
 3919 04dc DC010000 		.4byte	.LVL113
 3920 04e0 0100     		.2byte	0x1
 3921 04e2 59       		.byte	0x59
 3922 04e3 DE010000 		.4byte	.LVL114
 3923 04e7 02020000 		.4byte	.LVL119
 3924 04eb 0100     		.2byte	0x1
 3925 04ed 59       		.byte	0x59
 3926 04ee 00000000 		.4byte	0
 3927 04f2 00000000 		.4byte	0
 3928              	.LLST15:
 3929 04f6 0A000000 		.4byte	.LVL52
 3930 04fa C8000000 		.4byte	.LVL75
 3931 04fe 0100     		.2byte	0x1
 3932 0500 50       		.byte	0x50
 3933 0501 C8000000 		.4byte	.LVL75
 3934 0505 CE000000 		.4byte	.LVL76
 3935 0509 0100     		.2byte	0x1
 3936 050b 53       		.byte	0x53
 3937 050c CE000000 		.4byte	.LVL76
 3938 0510 1A010000 		.4byte	.LVL86
 3939 0514 0100     		.2byte	0x1
 3940 0516 50       		.byte	0x50
 3941 0517 1A010000 		.4byte	.LVL86
 3942 051b 20010000 		.4byte	.LVL87
 3943 051f 0100     		.2byte	0x1
 3944 0521 53       		.byte	0x53
 3945 0522 20010000 		.4byte	.LVL87
 3946 0526 66010000 		.4byte	.LVL97
 3947 052a 0100     		.2byte	0x1
 3948 052c 50       		.byte	0x50
 3949 052d 66010000 		.4byte	.LVL97
 3950 0531 6C010000 		.4byte	.LVL98
 3951 0535 0100     		.2byte	0x1
 3952 0537 53       		.byte	0x53
 3953 0538 6C010000 		.4byte	.LVL98
 3954 053c B8010000 		.4byte	.LVL108
 3955 0540 0100     		.2byte	0x1
 3956 0542 50       		.byte	0x50
 3957 0543 B8010000 		.4byte	.LVL108
 3958 0547 BE010000 		.4byte	.LVL109
 3959 054b 0100     		.2byte	0x1
 3960 054d 53       		.byte	0x53
 3961 054e BE010000 		.4byte	.LVL109
 3962 0552 0C020000 		.4byte	.LFE65
 3963 0556 0100     		.2byte	0x1
 3964 0558 50       		.byte	0x50
 3965 0559 00000000 		.4byte	0
 3966 055d 00000000 		.4byte	0
 3967              	.LLST16:
 3968 0561 0A000000 		.4byte	.LVL52
 3969 0565 C8000000 		.4byte	.LVL75
 3970 0569 0100     		.2byte	0x1
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 85


 3971 056b 51       		.byte	0x51
 3972 056c C8000000 		.4byte	.LVL75
 3973 0570 CE000000 		.4byte	.LVL76
 3974 0574 0100     		.2byte	0x1
 3975 0576 55       		.byte	0x55
 3976 0577 CE000000 		.4byte	.LVL76
 3977 057b 1A010000 		.4byte	.LVL86
 3978 057f 0100     		.2byte	0x1
 3979 0581 51       		.byte	0x51
 3980 0582 1A010000 		.4byte	.LVL86
 3981 0586 20010000 		.4byte	.LVL87
 3982 058a 0100     		.2byte	0x1
 3983 058c 55       		.byte	0x55
 3984 058d 20010000 		.4byte	.LVL87
 3985 0591 66010000 		.4byte	.LVL97
 3986 0595 0100     		.2byte	0x1
 3987 0597 51       		.byte	0x51
 3988 0598 66010000 		.4byte	.LVL97
 3989 059c 6C010000 		.4byte	.LVL98
 3990 05a0 0100     		.2byte	0x1
 3991 05a2 55       		.byte	0x55
 3992 05a3 6C010000 		.4byte	.LVL98
 3993 05a7 B8010000 		.4byte	.LVL108
 3994 05ab 0100     		.2byte	0x1
 3995 05ad 51       		.byte	0x51
 3996 05ae B8010000 		.4byte	.LVL108
 3997 05b2 BE010000 		.4byte	.LVL109
 3998 05b6 0100     		.2byte	0x1
 3999 05b8 55       		.byte	0x55
 4000 05b9 BE010000 		.4byte	.LVL109
 4001 05bd 0C020000 		.4byte	.LFE65
 4002 05c1 0100     		.2byte	0x1
 4003 05c3 51       		.byte	0x51
 4004 05c4 00000000 		.4byte	0
 4005 05c8 00000000 		.4byte	0
 4006              	.LLST17:
 4007 05cc 0A000000 		.4byte	.LVL52
 4008 05d0 16000000 		.4byte	.LVL53
 4009 05d4 0200     		.2byte	0x2
 4010 05d6 30       		.byte	0x30
 4011 05d7 9F       		.byte	0x9f
 4012 05d8 16000000 		.4byte	.LVL53
 4013 05dc 02020000 		.4byte	.LVL119
 4014 05e0 0100     		.2byte	0x1
 4015 05e2 54       		.byte	0x54
 4016 05e3 00000000 		.4byte	0
 4017 05e7 00000000 		.4byte	0
 4018              	.LLST18:
 4019 05eb 1C000000 		.4byte	.LVL54
 4020 05ef 34000000 		.4byte	.LVL56
 4021 05f3 0100     		.2byte	0x1
 4022 05f5 53       		.byte	0x53
 4023 05f6 34000000 		.4byte	.LVL56
 4024 05fa A8000000 		.4byte	.LVL72
 4025 05fe 0A00     		.2byte	0xa
 4026 0600 74       		.byte	0x74
 4027 0601 00       		.sleb128 0
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 86


 4028 0602 33       		.byte	0x33
 4029 0603 24       		.byte	0x24
 4030 0604 03       		.byte	0x3
 4031 0605 00000000 		.4byte	path_coordinates
 4032 0609 22       		.byte	0x22
 4033 060a A8000000 		.4byte	.LVL72
 4034 060e F6000000 		.4byte	.LVL82
 4035 0612 0100     		.2byte	0x1
 4036 0614 53       		.byte	0x53
 4037 0615 F6000000 		.4byte	.LVL82
 4038 0619 0C010000 		.4byte	.LVL85
 4039 061d 0A00     		.2byte	0xa
 4040 061f 74       		.byte	0x74
 4041 0620 00       		.sleb128 0
 4042 0621 33       		.byte	0x33
 4043 0622 24       		.byte	0x24
 4044 0623 03       		.byte	0x3
 4045 0624 00000000 		.4byte	path_coordinates
 4046 0628 22       		.byte	0x22
 4047 0629 0C010000 		.4byte	.LVL85
 4048 062d 44010000 		.4byte	.LVL93
 4049 0631 0100     		.2byte	0x1
 4050 0633 53       		.byte	0x53
 4051 0634 44010000 		.4byte	.LVL93
 4052 0638 5A010000 		.4byte	.LVL96
 4053 063c 0A00     		.2byte	0xa
 4054 063e 74       		.byte	0x74
 4055 063f 00       		.sleb128 0
 4056 0640 33       		.byte	0x33
 4057 0641 24       		.byte	0x24
 4058 0642 03       		.byte	0x3
 4059 0643 00000000 		.4byte	path_coordinates
 4060 0647 22       		.byte	0x22
 4061 0648 5A010000 		.4byte	.LVL96
 4062 064c 94010000 		.4byte	.LVL104
 4063 0650 0100     		.2byte	0x1
 4064 0652 53       		.byte	0x53
 4065 0653 94010000 		.4byte	.LVL104
 4066 0657 AA010000 		.4byte	.LVL107
 4067 065b 0A00     		.2byte	0xa
 4068 065d 74       		.byte	0x74
 4069 065e 00       		.sleb128 0
 4070 065f 33       		.byte	0x33
 4071 0660 24       		.byte	0x24
 4072 0661 03       		.byte	0x3
 4073 0662 00000000 		.4byte	path_coordinates
 4074 0666 22       		.byte	0x22
 4075 0667 AA010000 		.4byte	.LVL107
 4076 066b E2010000 		.4byte	.LVL115
 4077 066f 0100     		.2byte	0x1
 4078 0671 53       		.byte	0x53
 4079 0672 E2010000 		.4byte	.LVL115
 4080 0676 F8010000 		.4byte	.LVL118
 4081 067a 0A00     		.2byte	0xa
 4082 067c 74       		.byte	0x74
 4083 067d 00       		.sleb128 0
 4084 067e 33       		.byte	0x33
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 87


 4085 067f 24       		.byte	0x24
 4086 0680 03       		.byte	0x3
 4087 0681 00000000 		.4byte	path_coordinates
 4088 0685 22       		.byte	0x22
 4089 0686 00000000 		.4byte	0
 4090 068a 00000000 		.4byte	0
 4091              	.LLST19:
 4092 068e 22000000 		.4byte	.LVL55
 4093 0692 F8000000 		.4byte	.LVL83
 4094 0696 0100     		.2byte	0x1
 4095 0698 55       		.byte	0x55
 4096 0699 F8000000 		.4byte	.LVL83
 4097 069d 0C010000 		.4byte	.LVL85
 4098 06a1 0A00     		.2byte	0xa
 4099 06a3 74       		.byte	0x74
 4100 06a4 00       		.sleb128 0
 4101 06a5 33       		.byte	0x33
 4102 06a6 24       		.byte	0x24
 4103 06a7 03       		.byte	0x3
 4104 06a8 04000000 		.4byte	path_coordinates+4
 4105 06ac 22       		.byte	0x22
 4106 06ad 0C010000 		.4byte	.LVL85
 4107 06b1 46010000 		.4byte	.LVL94
 4108 06b5 0100     		.2byte	0x1
 4109 06b7 55       		.byte	0x55
 4110 06b8 46010000 		.4byte	.LVL94
 4111 06bc 5A010000 		.4byte	.LVL96
 4112 06c0 0A00     		.2byte	0xa
 4113 06c2 74       		.byte	0x74
 4114 06c3 00       		.sleb128 0
 4115 06c4 33       		.byte	0x33
 4116 06c5 24       		.byte	0x24
 4117 06c6 03       		.byte	0x3
 4118 06c7 04000000 		.4byte	path_coordinates+4
 4119 06cb 22       		.byte	0x22
 4120 06cc 5A010000 		.4byte	.LVL96
 4121 06d0 96010000 		.4byte	.LVL105
 4122 06d4 0100     		.2byte	0x1
 4123 06d6 55       		.byte	0x55
 4124 06d7 96010000 		.4byte	.LVL105
 4125 06db AA010000 		.4byte	.LVL107
 4126 06df 0A00     		.2byte	0xa
 4127 06e1 74       		.byte	0x74
 4128 06e2 00       		.sleb128 0
 4129 06e3 33       		.byte	0x33
 4130 06e4 24       		.byte	0x24
 4131 06e5 03       		.byte	0x3
 4132 06e6 04000000 		.4byte	path_coordinates+4
 4133 06ea 22       		.byte	0x22
 4134 06eb AA010000 		.4byte	.LVL107
 4135 06ef E4010000 		.4byte	.LVL116
 4136 06f3 0100     		.2byte	0x1
 4137 06f5 55       		.byte	0x55
 4138 06f6 E4010000 		.4byte	.LVL116
 4139 06fa F8010000 		.4byte	.LVL118
 4140 06fe 0A00     		.2byte	0xa
 4141 0700 74       		.byte	0x74
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 88


 4142 0701 00       		.sleb128 0
 4143 0702 33       		.byte	0x33
 4144 0703 24       		.byte	0x24
 4145 0704 03       		.byte	0x3
 4146 0705 04000000 		.4byte	path_coordinates+4
 4147 0709 22       		.byte	0x22
 4148 070a 00000000 		.4byte	0
 4149 070e 00000000 		.4byte	0
 4150              	.LLST20:
 4151 0712 AA000000 		.4byte	.LVL73
 4152 0716 F8010000 		.4byte	.LVL118
 4153 071a 0100     		.2byte	0x1
 4154 071c 56       		.byte	0x56
 4155 071d 00000000 		.4byte	0
 4156 0721 00000000 		.4byte	0
 4157              	.LLST21:
 4158 0725 AE000000 		.4byte	.LVL74
 4159 0729 F8010000 		.4byte	.LVL118
 4160 072d 0100     		.2byte	0x1
 4161 072f 5A       		.byte	0x5a
 4162 0730 00000000 		.4byte	0
 4163 0734 00000000 		.4byte	0
 4164              	.LLST22:
 4165 0738 00000000 		.4byte	.LVL138
 4166 073c 06000000 		.4byte	.LVL139
 4167 0740 0100     		.2byte	0x1
 4168 0742 50       		.byte	0x50
 4169 0743 06000000 		.4byte	.LVL139
 4170 0747 88000000 		.4byte	.LVL154
 4171 074b 0100     		.2byte	0x1
 4172 074d 56       		.byte	0x56
 4173 074e 88000000 		.4byte	.LVL154
 4174 0752 98000000 		.4byte	.LFE71
 4175 0756 0400     		.2byte	0x4
 4176 0758 F3       		.byte	0xf3
 4177 0759 01       		.uleb128 0x1
 4178 075a 50       		.byte	0x50
 4179 075b 9F       		.byte	0x9f
 4180 075c 00000000 		.4byte	0
 4181 0760 00000000 		.4byte	0
 4182              	.LLST23:
 4183 0764 4E000000 		.4byte	.LVL177
 4184 0768 52000000 		.4byte	.LVL178
 4185 076c 0200     		.2byte	0x2
 4186 076e 30       		.byte	0x30
 4187 076f 9F       		.byte	0x9f
 4188 0770 52000000 		.4byte	.LVL178
 4189 0774 CC000000 		.4byte	.LFE73
 4190 0778 0100     		.2byte	0x1
 4191 077a 54       		.byte	0x54
 4192 077b 00000000 		.4byte	0
 4193 077f 00000000 		.4byte	0
 4194              		.section	.debug_aranges,"",%progbits
 4195 0000 64000000 		.4byte	0x64
 4196 0004 0200     		.2byte	0x2
 4197 0006 00000000 		.4byte	.Ldebug_info0
 4198 000a 04       		.byte	0x4
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 89


 4199 000b 00       		.byte	0
 4200 000c 0000     		.2byte	0
 4201 000e 0000     		.2byte	0
 4202 0010 00000000 		.4byte	.LFB66
 4203 0014 74000000 		.4byte	.LFE66-.LFB66
 4204 0018 00000000 		.4byte	.LFB64
 4205 001c D8020000 		.4byte	.LFE64-.LFB64
 4206 0020 00000000 		.4byte	.LFB65
 4207 0024 0C020000 		.4byte	.LFE65-.LFB65
 4208 0028 00000000 		.4byte	.LFB67
 4209 002c 10000000 		.4byte	.LFE67-.LFB67
 4210 0030 00000000 		.4byte	.LFB68
 4211 0034 40000000 		.4byte	.LFE68-.LFB68
 4212 0038 00000000 		.4byte	.LFB69
 4213 003c 40000000 		.4byte	.LFE69-.LFB69
 4214 0040 00000000 		.4byte	.LFB70
 4215 0044 10000000 		.4byte	.LFE70-.LFB70
 4216 0048 00000000 		.4byte	.LFB71
 4217 004c 98000000 		.4byte	.LFE71-.LFB71
 4218 0050 00000000 		.4byte	.LFB72
 4219 0054 58000000 		.4byte	.LFE72-.LFB72
 4220 0058 00000000 		.4byte	.LFB73
 4221 005c CC000000 		.4byte	.LFE73-.LFB73
 4222 0060 00000000 		.4byte	0
 4223 0064 00000000 		.4byte	0
 4224              		.section	.debug_ranges,"",%progbits
 4225              	.Ldebug_ranges0:
 4226 0000 0A000000 		.4byte	.LBB4
 4227 0004 0C000000 		.4byte	.LBE4
 4228 0008 14000000 		.4byte	.LBB6
 4229 000c 0C020000 		.4byte	.LBE6
 4230 0010 00000000 		.4byte	0
 4231 0014 00000000 		.4byte	0
 4232 0018 00000000 		.4byte	.LFB66
 4233 001c 74000000 		.4byte	.LFE66
 4234 0020 00000000 		.4byte	.LFB64
 4235 0024 D8020000 		.4byte	.LFE64
 4236 0028 00000000 		.4byte	.LFB65
 4237 002c 0C020000 		.4byte	.LFE65
 4238 0030 00000000 		.4byte	.LFB67
 4239 0034 10000000 		.4byte	.LFE67
 4240 0038 00000000 		.4byte	.LFB68
 4241 003c 40000000 		.4byte	.LFE68
 4242 0040 00000000 		.4byte	.LFB69
 4243 0044 40000000 		.4byte	.LFE69
 4244 0048 00000000 		.4byte	.LFB70
 4245 004c 10000000 		.4byte	.LFE70
 4246 0050 00000000 		.4byte	.LFB71
 4247 0054 98000000 		.4byte	.LFE71
 4248 0058 00000000 		.4byte	.LFB72
 4249 005c 58000000 		.4byte	.LFE72
 4250 0060 00000000 		.4byte	.LFB73
 4251 0064 CC000000 		.4byte	.LFE73
 4252 0068 00000000 		.4byte	0
 4253 006c 00000000 		.4byte	0
 4254              		.section	.debug_line,"",%progbits
 4255              	.Ldebug_line0:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 90


 4256 0000 E6040000 		.section	.debug_str,"MS",%progbits,1
 4256      0200FE01 
 4256      00000201 
 4256      FB0E0D00 
 4256      01010101 
 4257              	.LASF59:
 4258 0000 676F5374 		.ascii	"goStraight\000"
 4258      72616967 
 4258      687400
 4259              	.LASF27:
 4260 000b 474F5F53 		.ascii	"GO_STRAIGHT\000"
 4260      54524149 
 4260      47485400 
 4261              	.LASF42:
 4262 0017 73746172 		.ascii	"start_column\000"
 4262      745F636F 
 4262      6C756D6E 
 4262      00
 4263              	.LASF102:
 4264 0024 50574D5F 		.ascii	"PWM_1_Start\000"
 4264      315F5374 
 4264      61727400 
 4265              	.LASF75:
 4266 0030 63757272 		.ascii	"current_state\000"
 4266      656E745F 
 4266      73746174 
 4266      6500
 4267              	.LASF37:
 4268 003e 74617267 		.ascii	"targetX\000"
 4268      65745800 
 4269              	.LASF38:
 4270 0046 74617267 		.ascii	"targetY\000"
 4270      65745900 
 4271              	.LASF22:
 4272 004e 4E4F5254 		.ascii	"NORTH\000"
 4272      4800
 4273              	.LASF69:
 4274 0054 636F6D70 		.ascii	"comp1_sum\000"
 4274      315F7375 
 4274      6D00
 4275              	.LASF61:
 4276 005e 77686565 		.ascii	"wheelCircumference_cm\000"
 4276      6C436972 
 4276      63756D66 
 4276      6572656E 
 4276      63655F63 
 4277              	.LASF10:
 4278 0074 73697A65 		.ascii	"sizetype\000"
 4278      74797065 
 4278      00
 4279              	.LASF76:
 4280 007d 63757272 		.ascii	"currentX\000"
 4280      656E7458 
 4280      00
 4281              	.LASF77:
 4282 0086 63757272 		.ascii	"currentY\000"
 4282      656E7459 
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 91


 4282      00
 4283              	.LASF20:
 4284 008f 7475726E 		.ascii	"turnDirection\000"
 4284      44697265 
 4284      6374696F 
 4284      6E00
 4285              	.LASF53:
 4286 009d 64697265 		.ascii	"direction\000"
 4286      6374696F 
 4286      6E00
 4287              	.LASF111:
 4288 00a7 6D61696E 		.ascii	"main\000"
 4288      00
 4289              	.LASF41:
 4290 00ac 73746172 		.ascii	"start_row\000"
 4290      745F726F 
 4290      7700
 4291              	.LASF100:
 4292 00b6 436F6D70 		.ascii	"Comp_3_Start\000"
 4292      5F335F53 
 4292      74617274 
 4292      00
 4293              	.LASF79:
 4294 00c3 706F7369 		.ascii	"position\000"
 4294      74696F6E 
 4294      00
 4295              	.LASF44:
 4296 00cc 74617267 		.ascii	"target_column\000"
 4296      65745F63 
 4296      6F6C756D 
 4296      6E00
 4297              	.LASF2:
 4298 00da 73686F72 		.ascii	"short int\000"
 4298      7420696E 
 4298      7400
 4299              	.LASF31:
 4300 00e4 526F626F 		.ascii	"RobotState\000"
 4300      74537461 
 4300      746500
 4301              	.LASF58:
 4302 00ef 676F5374 		.ascii	"goStraight_cm\000"
 4302      72616967 
 4302      68745F63 
 4302      6D00
 4303              	.LASF85:
 4304 00fd 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 4304      725F315F 
 4304      52656164 
 4304      53746174 
 4304      75735265 
 4305              	.LASF33:
 4306 0118 6E657874 		.ascii	"nextX\000"
 4306      5800
 4307              	.LASF34:
 4308 011e 6E657874 		.ascii	"nextY\000"
 4308      5900
 4309              	.LASF14:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 92


 4310 0124 75696E74 		.ascii	"uint8\000"
 4310      3800
 4311              	.LASF35:
 4312 012a 64656C74 		.ascii	"deltaX\000"
 4312      615800
 4313              	.LASF0:
 4314 0131 7369676E 		.ascii	"signed char\000"
 4314      65642063 
 4314      68617200 
 4315              	.LASF94:
 4316 013d 51756164 		.ascii	"QuadDec_M1_GetCounter\000"
 4316      4465635F 
 4316      4D315F47 
 4316      6574436F 
 4316      756E7465 
 4317              	.LASF93:
 4318 0153 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 4318      315F5265 
 4318      6164436F 
 4318      6D706172 
 4318      6500
 4319              	.LASF87:
 4320 0165 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
 4320      325F5772 
 4320      69746543 
 4320      6F6D7061 
 4320      726500
 4321              	.LASF17:
 4322 0178 666C6F61 		.ascii	"float\000"
 4322      7400
 4323              	.LASF107:
 4324 017e 51756164 		.ascii	"QuadDec_M2_Start\000"
 4324      4465635F 
 4324      4D325F53 
 4324      74617274 
 4324      00
 4325              	.LASF6:
 4326 018f 6C6F6E67 		.ascii	"long long int\000"
 4326      206C6F6E 
 4326      6720696E 
 4326      7400
 4327              	.LASF92:
 4328 019d 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 4328      325F5265 
 4328      6164436F 
 4328      6D706172 
 4328      6500
 4329              	.LASF28:
 4330 01af 5455524E 		.ascii	"TURN_LEFT\000"
 4330      5F4C4546 
 4330      5400
 4331              	.LASF11:
 4332 01b9 63686172 		.ascii	"char\000"
 4332      00
 4333              	.LASF21:
 4334 01be 4D6F7665 		.ascii	"Movement\000"
 4334      6D656E74 
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 93


 4334      00
 4335              	.LASF4:
 4336 01c7 6C6F6E67 		.ascii	"long int\000"
 4336      20696E74 
 4336      00
 4337              	.LASF29:
 4338 01d0 5455524E 		.ascii	"TURN_RIGHT\000"
 4338      5F524947 
 4338      485400
 4339              	.LASF96:
 4340 01db 6973725F 		.ascii	"isr_1_StartEx\000"
 4340      315F5374 
 4340      61727445 
 4340      7800
 4341              	.LASF43:
 4342 01e9 74617267 		.ascii	"target_row\000"
 4342      65745F72 
 4342      6F7700
 4343              	.LASF99:
 4344 01f4 436F6D70 		.ascii	"Comp_2_Start\000"
 4344      5F325F53 
 4344      74617274 
 4344      00
 4345              	.LASF45:
 4346 0201 63757272 		.ascii	"current_direction\000"
 4346      656E745F 
 4346      64697265 
 4346      6374696F 
 4346      6E00
 4347              	.LASF24:
 4348 0213 534F5554 		.ascii	"SOUTH\000"
 4348      4800
 4349              	.LASF86:
 4350 0219 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 4350      315F5772 
 4350      69746543 
 4350      6F6D7061 
 4350      726500
 4351              	.LASF9:
 4352 022c 6C6F6E67 		.ascii	"long double\000"
 4352      20646F75 
 4352      626C6500 
 4353              	.LASF40:
 4354 0238 6765744D 		.ascii	"getMovements\000"
 4354      6F76656D 
 4354      656E7473 
 4354      00
 4355              	.LASF1:
 4356 0245 756E7369 		.ascii	"unsigned char\000"
 4356      676E6564 
 4356      20636861 
 4356      7200
 4357              	.LASF64:
 4358 0253 636F756E 		.ascii	"counter\000"
 4358      74657200 
 4359              	.LASF72:
 4360 025b 70617468 		.ascii	"path_coordinates\000"
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 94


 4360      5F636F6F 
 4360      7264696E 
 4360      61746573 
 4360      00
 4361              	.LASF26:
 4362 026c 526F626F 		.ascii	"RobotDirection\000"
 4362      74446972 
 4362      65637469 
 4362      6F6E00
 4363              	.LASF55:
 4364 027b 7475726E 		.ascii	"turnLeft\000"
 4364      4C656674 
 4364      00
 4365              	.LASF23:
 4366 0284 45415354 		.ascii	"EAST\000"
 4366      00
 4367              	.LASF90:
 4368 0289 536F7574 		.ascii	"Sout_R_Read\000"
 4368      5F525F52 
 4368      65616400 
 4369              	.LASF7:
 4370 0295 6C6F6E67 		.ascii	"long long unsigned int\000"
 4370      206C6F6E 
 4370      6720756E 
 4370      7369676E 
 4370      65642069 
 4371              	.LASF52:
 4372 02ac 6E657874 		.ascii	"next_column\000"
 4372      5F636F6C 
 4372      756D6E00 
 4373              	.LASF51:
 4374 02b8 6E657874 		.ascii	"next_row\000"
 4374      5F726F77 
 4374      00
 4375              	.LASF8:
 4376 02c1 756E7369 		.ascii	"unsigned int\000"
 4376      676E6564 
 4376      20696E74 
 4376      00
 4377              	.LASF97:
 4378 02ce 436F6D70 		.ascii	"Comp_0_Start\000"
 4378      5F305F53 
 4378      74617274 
 4378      00
 4379              	.LASF71:
 4380 02db 636F6D70 		.ascii	"comp3_sum\000"
 4380      335F7375 
 4380      6D00
 4381              	.LASF39:
 4382 02e5 6973725F 		.ascii	"isr_1_handler\000"
 4382      315F6861 
 4382      6E646C65 
 4382      7200
 4383              	.LASF48:
 4384 02f3 7475726E 		.ascii	"turn\000"
 4384      00
 4385              	.LASF36:
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 95


 4386 02f8 64656C74 		.ascii	"deltaY\000"
 4386      615900
 4387              	.LASF68:
 4388 02ff 636F6D70 		.ascii	"comp0_sum\000"
 4388      305F7375 
 4388      6D00
 4389              	.LASF103:
 4390 0309 50574D5F 		.ascii	"PWM_2_Start\000"
 4390      325F5374 
 4390      61727400 
 4391              	.LASF49:
 4392 0315 63757272 		.ascii	"current_row\000"
 4392      656E745F 
 4392      726F7700 
 4393              	.LASF3:
 4394 0321 73686F72 		.ascii	"short unsigned int\000"
 4394      7420756E 
 4394      7369676E 
 4394      65642069 
 4394      6E7400
 4395              	.LASF91:
 4396 0334 51756164 		.ascii	"QuadDec_M1_SetCounter\000"
 4396      4465635F 
 4396      4D315F53 
 4396      6574436F 
 4396      756E7465 
 4397              	.LASF19:
 4398 034a 64697374 		.ascii	"distance\000"
 4398      616E6365 
 4398      00
 4399              	.LASF54:
 4400 0353 73746F70 		.ascii	"stop\000"
 4400      00
 4401              	.LASF57:
 4402 0358 72657665 		.ascii	"reverse\000"
 4402      72736500 
 4403              	.LASF70:
 4404 0360 636F6D70 		.ascii	"comp2_sum\000"
 4404      325F7375 
 4404      6D00
 4405              	.LASF13:
 4406 036a 696E7433 		.ascii	"int32_t\000"
 4406      325F7400 
 4407              	.LASF62:
 4408 0372 74696D65 		.ascii	"timeInterval_s\000"
 4408      496E7465 
 4408      7276616C 
 4408      5F7300
 4409              	.LASF67:
 4410 0381 5F426F6F 		.ascii	"_Bool\000"
 4410      6C00
 4411              	.LASF47:
 4412 0387 73746570 		.ascii	"stepCount\000"
 4412      436F756E 
 4412      7400
 4413              	.LASF95:
 4414 0391 54696D65 		.ascii	"Timer_1_Start\000"
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 96


 4414      725F315F 
 4414      53746172 
 4414      7400
 4415              	.LASF25:
 4416 039f 57455354 		.ascii	"WEST\000"
 4416      00
 4417              	.LASF104:
 4418 03a4 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 4418      315F5772 
 4418      69746550 
 4418      6572696F 
 4418      6400
 4419              	.LASF80:
 4420 03b6 70617468 		.ascii	"pathCoordinates\000"
 4420      436F6F72 
 4420      64696E61 
 4420      74657300 
 4421              	.LASF46:
 4422 03c6 6D6F7665 		.ascii	"movement_count\000"
 4422      6D656E74 
 4422      5F636F75 
 4422      6E7400
 4423              	.LASF109:
 4424 03d5 6D61696E 		.ascii	"main.c\000"
 4424      2E6300
 4425              	.LASF5:
 4426 03dc 6C6F6E67 		.ascii	"long unsigned int\000"
 4426      20756E73 
 4426      69676E65 
 4426      6420696E 
 4426      7400
 4427              	.LASF16:
 4428 03ee 696E7433 		.ascii	"int32\000"
 4428      3200
 4429              	.LASF15:
 4430 03f4 75696E74 		.ascii	"uint32\000"
 4430      333200
 4431              	.LASF106:
 4432 03fb 51756164 		.ascii	"QuadDec_M1_Start\000"
 4432      4465635F 
 4432      4D315F53 
 4432      74617274 
 4432      00
 4433              	.LASF60:
 4434 040c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4434      52784275 
 4434      66666572 
 4434      00
 4435              	.LASF89:
 4436 0419 536F7574 		.ascii	"Sout_M1_Read\000"
 4436      5F4D315F 
 4436      52656164 
 4436      00
 4437              	.LASF66:
 4438 0426 69735475 		.ascii	"isTurning\000"
 4438      726E696E 
 4438      6700
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 97


 4439              	.LASF65:
 4440 0430 636F756E 		.ascii	"count\000"
 4440      7400
 4441              	.LASF12:
 4442 0436 5F5F696E 		.ascii	"__int32_t\000"
 4442      7433325F 
 4442      7400
 4443              	.LASF110:
 4444 0440 433A5C55 		.ascii	"C:\\Users\\dulan\\OneDrive\\Desktop\\ENGGEN\\2023_s"
 4444      73657273 
 4444      5C64756C 
 4444      616E5C4F 
 4444      6E654472 
 4445 046d 656D325C 		.ascii	"em2\\303\\COMPSYS303\\301backup\\Dulanya\\301_15_pa"
 4445      3330335C 
 4445      434F4D50 
 4445      53595333 
 4445      30335C33 
 4446 049b 74685F66 		.ascii	"th_following\\Additional_HD.cydsn\000"
 4446      6F6C6C6F 
 4446      77696E67 
 4446      5C416464 
 4446      6974696F 
 4447              	.LASF101:
 4448 04bc 436C6F63 		.ascii	"Clock_PWM_Start\000"
 4448      6B5F5057 
 4448      4D5F5374 
 4448      61727400 
 4449              	.LASF73:
 4450 04cc 70617468 		.ascii	"path\000"
 4450      00
 4451              	.LASF74:
 4452 04d1 6D6F7665 		.ascii	"moveCountArray\000"
 4452      436F756E 
 4452      74417272 
 4452      617900
 4453              	.LASF81:
 4454 04e0 436F6D70 		.ascii	"Comp_0_GetCompare\000"
 4454      5F305F47 
 4454      6574436F 
 4454      6D706172 
 4454      6500
 4455              	.LASF32:
 4456 04f2 70617468 		.ascii	"pathLength\000"
 4456      4C656E67 
 4456      746800
 4457              	.LASF30:
 4458 04fd 53544F50 		.ascii	"STOP\000"
 4458      00
 4459              	.LASF78:
 4460 0502 74617267 		.ascii	"target\000"
 4460      657400
 4461              	.LASF105:
 4462 0509 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 4462      325F5772 
 4462      69746550 
 4462      6572696F 
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 98


 4462      6400
 4463              	.LASF63:
 4464 051b 70617468 		.ascii	"path_length\000"
 4464      5F6C656E 
 4464      67746800 
 4465              	.LASF82:
 4466 0527 436F6D70 		.ascii	"Comp_1_GetCompare\000"
 4466      5F315F47 
 4466      6574436F 
 4466      6D706172 
 4466      6500
 4467              	.LASF18:
 4468 0539 646F7562 		.ascii	"double\000"
 4468      6C6500
 4469              	.LASF83:
 4470 0540 436F6D70 		.ascii	"Comp_2_GetCompare\000"
 4470      5F325F47 
 4470      6574436F 
 4470      6D706172 
 4470      6500
 4471              	.LASF108:
 4472 0552 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4472      43313120 
 4472      352E342E 
 4472      31203230 
 4472      31363036 
 4473 0585 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4473      20726576 
 4473      6973696F 
 4473      6E203233 
 4473      37373135 
 4474 05b8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4474      66756E63 
 4474      74696F6E 
 4474      2D736563 
 4474      74696F6E 
 4475              	.LASF50:
 4476 05e0 63757272 		.ascii	"current_column\000"
 4476      656E745F 
 4476      636F6C75 
 4476      6D6E00
 4477              	.LASF84:
 4478 05ef 436F6D70 		.ascii	"Comp_3_GetCompare\000"
 4478      5F335F47 
 4478      6574436F 
 4478      6D706172 
 4478      6500
 4479              	.LASF88:
 4480 0601 536F7574 		.ascii	"Sout_L_Read\000"
 4480      5F4C5F52 
 4480      65616400 
 4481              	.LASF56:
 4482 060d 7475726E 		.ascii	"turnRight\000"
 4482      52696768 
 4482      7400
 4483              	.LASF98:
 4484 0617 436F6D70 		.ascii	"Comp_1_Start\000"
ARM GAS  C:\Users\dulan\AppData\Local\Temp\ccrs6UUQ.s 			page 99


 4484      5F315F53 
 4484      74617274 
 4484      00
 4485              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
